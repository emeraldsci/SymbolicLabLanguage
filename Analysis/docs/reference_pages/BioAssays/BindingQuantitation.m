(* ::Package:: *)

(* ::Text:: *)
(*\[Copyright] 2011-2023 Emerald Cloud Lab, Inc.*)


(* ::Subsubsection:: *)
(*AnalyzeBindingQuantitation*)

DefineUsage[AnalyzeBindingQuantitation,
  {
    BasicDefinitions -> {
      {
        Definition -> {"AnalyzeBindingQuantitation[quantitationData]", "object"},
        Description -> "determines the concentration of the analyte measured in 'quantitationData'.",
        Inputs :> {
          {
            InputName -> "quantitationData",
            Description -> "A list of QuantityArrays for analyte detection steps.",
            Widget -> Widget[Type->Expression, Pattern:>{QuantityCoordinatesP[]}, PatternTooltip->"A list of QuantityArrays which are in the form of {time, response}.", Size->Paragraph]
          }
        },
        Outputs :> {
          {
            OutputName -> "object",
            Description -> "The object containing analysis results.",
            Pattern :> ObjectP[Object[Analysis, BindingQuantitation]]
          }
        }
      },
      {
        Definition -> {"AnalyzeBindingQuantitation[dataObject]", "object"},
        Description -> "determines the concentration of the analyte measured by creating a standard curve by fitting all data with the specified model.",
        Inputs :> {
          {
            InputName -> "dataObject",
            Description -> "BioLayerInterferometry Quantitation data object containing Quantitation data fields.",
            Widget -> Alternatives[
              Adder[
                Widget[Type->Object, Pattern:>ObjectP[Object[Data,BioLayerInterferometry]]]
              ],
              Widget[Type->Object, Pattern:>ObjectP[Object[Data,BioLayerInterferometry]]]
            ]
          }
        },
        Outputs :> {
          {
            OutputName -> "object",
            Description -> "The object containing analysis results.",
            Pattern :> ObjectP[Object[Analysis, BindingQuantitation]]
          }
        }
      },
      {
        Definition -> {"AnalyzeBindingQuantitation[protocolObject]", "object"},
        Description -> "determines the concentration of the analyte measured by creating a standard curve by fitting all data with the specified model.",
        Inputs :> {
          {
            InputName -> "protocolObject",
            Description -> "BioLayerInterferometry Quantitation data or protocol containing Quantitation data fields.",
            Widget ->
              Widget[Type->Object, Pattern:>ObjectP[Object[Protocol,BioLayerInterferometry]]]
          }
        },
        Outputs :> {
          {
            OutputName -> "object",
            Description -> "The object containing analysis results.",
            Pattern :> ObjectP[Object[Analysis, BindingQuantitation]]
          }
        }
      }

    },
    MoreInformation -> {
      "Analyte concentrations are obtained using a standard curve generated by fitting the observed association rate or equilibrium response of set of standard solutions with known concentrations of the target analyte.",
      "Of the FittedParameter options, InitialRate will generally be the safest choice for assay where the analyte detection is performed in a single step. If a secondary detection solution is employed, AverageEquilibriumResponse may give more accurate results. In cases of slowly associating analytes that do not reach equilibrium, try using the FullRate, which fits the specified portion of the data using a 1:1 binding model.",
      "Multiple data objects can be combined in a single analysis only if they use the same standard data."
    },
    SeeAlso -> {
      "AnalyzeBindingKinetics",
      "AnalyzeKinetics",
      "SimulateKinetics",
      "PlotObject",
      "NMinimize",
      "FindMinimum"
    },
    Author -> {"alou", "robert"},
    Guides -> {
      "AnalysisCategories",
      "ExperimentAnalysis"
    },
    Preview->True
  }];


(* ::Subsubsection:: *)
(*AnalyzeBindingQuantitationOptions*)


DefineUsage[AnalyzeBindingQuantitationOptions,
  {
    BasicDefinitions -> {
      {
        Definition -> {"AnalyzeBindingQuantitationOptions[quantitationData]", "options"},
        Description -> "returns all 'options' for AnalyzeBindingQuantitation['quantitationData'] with all Automatic options resolved to fixed values.",
        Inputs :> {
          {
            InputName -> "quantitationData",
            Description -> "A list of QuantityArrays for analyte detection steps.",
            Widget -> Widget[Type->Expression, Pattern:>{QuantityCoordinatesP[]}, PatternTooltip->"A list of QuantityArrays which are in the form of {time, response}.", Size->Paragraph]
          }
        },
        Outputs :> {
          {
            OutputName -> "options",
            Description -> "The resolved options in the AnalyzeBindingQuantitation call.",
            Pattern :> {Rule[_Symbol,Except[Automatic|$Failed]]|RuleDelayed[_Symbol,Except[Automatic|$Failed]]..}
          }
        }
      },

      {
        Definition -> {"AnalyzeBindingQuantitationOptions[dataObject]", "options"},
        Description -> "returns all 'options' for AnalyzeBindingQuantitation['dataObject'] with all Automatic options resolved to fixed values.",
        Inputs :> {
          {
            InputName -> "dataObject",
            Description -> "BioLayerInterferometry Quantitation data or protocol containing Quantitation data fields.",
            Widget -> Alternatives[
              Adder[
                Widget[Type->Object, Pattern:>ObjectP[Object[Data,BioLayerInterferometry]]]
              ],
              Widget[Type->Object, Pattern:>ObjectP[Object[Data,BioLayerInterferometry]]]
            ]
          }
        },
        Outputs :> {
          {
            OutputName -> "options",
            Description -> "The resolved options in the AnalyzeBindingQuantitation call.",
            Pattern :> {Rule[_Symbol,Except[Automatic|$Failed]]|RuleDelayed[_Symbol,Except[Automatic|$Failed]]..}
          }
        }
      },
      {
        Definition -> {"AnalyzeBindingQuantitationOptions[protocolObject]", "options"},
        Description -> "returns all 'options' for AnalyzeBindingQuantitation['protocolObject'] with all Automatic options resolved to fixed values.",
        Inputs :> {
          {
            InputName -> "protocolObject",
            Description -> "BioLayerInterferometry protocol containing data objects with Quantitation data fields.",
            Widget ->
              Widget[Type->Object, Pattern:>ObjectP[Object[Protocol,BioLayerInterferometry]]]
          }
        },
        Outputs :> {
          {
            OutputName -> "options",
            Description -> "The resolved options in the AnalyzeBindingQuantitation call.",
            Pattern :> {Rule[_Symbol,Except[Automatic|$Failed]]|RuleDelayed[_Symbol,Except[Automatic|$Failed]]..}
          }
        }
      }

    },

    SeeAlso -> {
      "AnalyzeBindingQuantitation",
      "AnalyzeBindingKinetics",
      "AnalyzePeaksOptions"
    },
    Author -> {"alou", "robert"}
  }];


(* ::Subsubsection:: *)
(*AnalyzeBindingQuantitationPreview*)


DefineUsage[AnalyzeBindingQuantitationPreview,
  {
    BasicDefinitions -> {
      {
        Definition -> {"AnalyzeBindingQuantitationPreview[quantitationData]", "preview"},
        Description -> "returns a graphical display representing AnalyzeBindingQuantitation['quantitationData'] output.",
        Inputs :> {
          {
            InputName -> "quantitationData",
            Description -> "A list of QuantityArrays for analyte detection steps.",
            Widget -> Widget[Type->Expression, Pattern:>{QuantityCoordinatesP[]}, PatternTooltip->"A list of QuantityArrays which are in the form of {time, response}.", Size->Paragraph]
          }
        },
        Outputs :> {
          {
            OutputName -> "preview",
            Description -> "The graphical display representing the AnalyzeBindingQuantitation call output.",
            Pattern :> (ValidGraphicsP[] | Null)
          }
        }
      },

      {
        Definition -> {"AnalyzeBindingQuantitationPreview[dataObject]", "preview"},
        Description -> "returns a graphical display representing AnalyzeBindingQuantitation['dataObject'] output.",
        Inputs :> {
          {
            InputName -> "dataObject",
            Description -> "BioLayerInterferometry Quantitation data object containing Quantitation data fields.",
            Widget -> Alternatives[
              Adder[
                Widget[Type->Object, Pattern:>ObjectP[Object[Data,BioLayerInterferometry]]]
              ],
              Widget[Type->Object, Pattern:>ObjectP[Object[Data,BioLayerInterferometry]]]
            ]
          }
        },
        Outputs :> {
          {
            OutputName -> "preview",
            Description -> "The graphical display representing the AnalyzeBindingQuantitation call output.",
            Pattern :> (ValidGraphicsP[] | Null)
          }
        }
      },
      {
        Definition -> {"AnalyzeBindingQuantitationPreview[protocolObject]", "preview"},
        Description -> "returns a graphical display representing AnalyzeBindingQuantitation['protocolObject'] output.",
        Inputs :> {
          {
            InputName -> "protocolObject",
            Description -> "BioLayerInterferometry protocol containing data objects with Quantitation data fields.",
            Widget ->
              Widget[Type->Object, Pattern:>ObjectP[Object[Protocol,BioLayerInterferometry]]]
          }
        },
        Outputs :> {
          {
            OutputName -> "preview",
            Description -> "The graphical display representing the AnalyzeBindingQuantitation call output.",
            Pattern :> (ValidGraphicsP[] | Null)
          }
        }
      }

    },

    SeeAlso -> {
      "AnalyzeBindingQuantitation",
      "AnalyzeBindingKinetics",
      "AnalyzePeaksPreview"
    },
    Author -> {"alou", "robert"}
  }];


(* ::Subsubsection:: *)
(*ValidAnalyzeBindingQuantitationQ*)


DefineUsage[ValidAnalyzeBindingQuantitationQ,
  {
    BasicDefinitions -> {
      {
        Definition -> {"ValidAnalyzeBindingQuantitationQ[quantitationData]", "testSummary"},
        Description -> "returns an EmeraldTestSummary which contains the test results of AnalyzeBindingQuantitation['quantitationData'] for all the gathered tests/warnings or a single Boolean indicating validity.",
        Inputs :> {
          {
            InputName -> "quantitationData",
            Description -> "A list of QuantityArrays for analyte detection steps.",
            Widget -> Widget[Type->Expression, Pattern:>{QuantityCoordinatesP[]}, PatternTooltip->"A list of QuantityArrays which are in the form of {time, response}.", Size->Paragraph]
          }
        },
        Outputs :> {
          {
            OutputName -> "testSummary",
            Description -> "The EmeraldTestSummary of AnalyzeBindingQuantitation['quantitationData'].",
            Pattern :> (EmeraldTestSummary| Boolean)
          }
        }
      },

      {
        Definition -> {"ValidAnalyzeBindingQuantitationQ[dataObject]", "testSummary"},
        Description -> "returns an EmeraldTestSummary which contains the test results of AnalyzeBindingQuantitation['dataObject'] for all the gathered tests/warnings or a single Boolean indicating validity.",
        Inputs :> {
          {
            InputName -> "dataObject",
            Description -> "BioLayerInterferometry Quantitation data object containing Quantitation data fields.",
            Widget -> Alternatives[
              Adder[
                Widget[Type->Object, Pattern:>ObjectP[Object[Data,BioLayerInterferometry]]]
              ],
              Widget[Type->Object, Pattern:>ObjectP[Object[Data,BioLayerInterferometry]]]
            ]
          }
        },
        Outputs :> {
          {
            OutputName -> "testSummary",
            Description -> "The EmeraldTestSummary of AnalyzeBindingQuantitation['dataObject'].",
            Pattern :> (EmeraldTestSummary| Boolean)
          }
        }
      },
      {
        Definition -> {"ValidAnalyzeBindingQuantitationQ[protocolObject]", "testSummary"},
        Description -> "returns an EmeraldTestSummary which contains the test results of AnalyzeBindingQuantitation['protocolObject'] for all the gathered tests/warnings or a single Boolean indicating validity.",
        Inputs :> {
          {
            InputName -> "protocolObject",
            Description -> "BioLayerInterferometry protocol containing data objects with Quantitation data fields.",
            Widget ->
              Widget[Type->Object, Pattern:>ObjectP[Object[Protocol,BioLayerInterferometry]]]
          }
        },
        Outputs :> {
          {
            OutputName -> "testSummary",
            Description -> "The EmeraldTestSummary of AnalyzeBindingQuantitation['protocolObject'].",
            Pattern :> (EmeraldTestSummary| Boolean)
          }
        }
      }

    },

    SeeAlso -> {
      "AnalyzeBindingKinetics",
      "AnalyzeBindingQuantitation",
      "ValidAnalyzePeaksQ"
    },
    Author -> {"alou", "robert"}
  }];