(* ::Package:: *)

(* ::Text:: *)
(*\[Copyright] 2011-2023 Emerald Cloud Lab, Inc.*)


(* ::Title:: *)
(*Peaks: Tests*)


(* ::Section:: *)
(*Unit Testing*)


(* ::Subsection::Closed:: *)
(*Peak Picking*)


(* ::Subsubsection:: *)
(*Domains*)


DefineTests[Domains,
	{
		Example[{Basic,"Split the data by the specified ranges:"},
			Domains[{{0,0},{1,1},{2,4},{3,9},{4,16},{5,25},{6,36},{7,49},{8,64},{9,81},{10,100}},{{2,3},{6,7}}],
			N@{{{2,4},{3,9}},{{6,36},{7,49}}}
		],
		Test["Split the data by the specified ranges (additional):",
			Domains[{{0,0},{1,1},{2,4},{3,9},{4,16},{5,25},{6,36},{7,49},{8,64},{9,81},{10,100}},{{1,3},{2,4}}],
			N@{{{1,1},{2,4},{3,9}},{{2,4},{3,9},{4,16}}}
		],
		Test["Split the data by the specified ranges (another additional):",
			Domains[{{{0,0},{1,1},{2,4},{3,9},{4,16},{5,25},{6,36},{7,49},{8,64},{9,81},{10,100}},{{0,0},{1,1},{2,4},{3,9},{4,16},{5,25},{6,36},{7,49},{8,64},{9,81},{10,100}},{{0,0},{1,1},{2,4},{3,9},{4,16},{5,25},{6,36},{7,49},{8,64},{9,81},{10,100}}},{{2,3},{6,7}}],
			N@{{{{2,4},{3,9}},{{6,36},{7,49}}},{{{2,4},{3,9}},{{6,36},{7,49}}},{{{2,4},{3,9}},{{6,36},{7,49}}}}
		],
		Test["Split the data using the PlotRange option (default):",
			Domains[fdata],
			{{-15,165},{-14,136},{-13,109},{-12,84},{-11,61},{-10,40},{-9,21},{-8,4},{-7,-11},{-6,-24},{-5,-35},{-4,-44},{-3,-51},{-2,-56},{-1,-59},{0,-60},{1,-59},{2,-56},{3,-51},{4,-44},{5,-35},{6,-24},{7,-11},{8,4},{9,21},{10,40},{11,61},{12,84},{13,109},{14,136},{15,165}}
		],
		Test["Split the data using the PlotRange option (Full):",
			Domains[fdata,PlotRange->Full],
			{{8,4},{9,21},{10,40},{11,61},{12,84},{13,109},{14,136},{15,165}}
		],
		Test["Split the data using the PlotRange option (Full, Custom):",
			Domains[fdata,PlotRange->{Full,{0,200}}],
			{{8,4},{9,21},{10,40},{11,61},{12,84},{13,109},{14,136},{15,165}}
		],
		Example[{Basic,"Split the data using the PlotRange option:"},
			Domains[fdata,PlotRange->{Automatic,{0,200}}],
			{{-15,165},{-14,136},{-13,109},{-12,84},{-11,61},{-10,40},{-9,21},{-8,4},{8,4},{9,21},{10,40},{11,61},{12,84},{13,109},{14,136},{15,165}}
		],
		Example[{Options,PlotRange,"Split the data using the PlotRange option:"},
			Domains[fdata,PlotRange->{Automatic,{0,Automatic}}],
			{{-15,165},{-14,136},{-13,109},{-12,84},{-11,61},{-10,40},{-9,21},{-8,4},{8,4},{9,21},{10,40},{11,61},{12,84},{13,109},{14,136},{15,165}}
		],
		Example[{Basic,"Split the date data by the specified ranges:"},
			Domains[{{{2013,3,22,11,28,26.0179403`9.167847831078879},1},{{2013,3,23,11,28,26.0199404`9.16788121569723},4},{{2013,3,24,11,28,26.0229406`9.16793128864789},0},{{2013,3,25,11,28,26.0249407`9.167964666851653},0},{{2013,3,26,11,28,26.0269408`9.167998042490286},10},{{2013,3,27,11,28,26.0289409`9.168031415564185},5},{{2013,3,28,11,28,26.0319411`9.168081471201209},4},{{2013,3,29,11,28,26.0329411`9.168098154019399},3},{{2013,3,30,11,28,26.0349413`9.168131521069615},5},{{2013,3,31,11,28,26.0359413`9.168148201965353},0}},PlotRange->Full],
			{{{2013,3,22,11,28,26.0179403`9.167847831078879},1},{{2013,3,23,11,28,26.0199404`9.16788121569723},4},{{2013,3,24,11,28,26.0229406`9.16793128864789},0},{{2013,3,25,11,28,26.0249407`9.167964666851653},0},{{2013,3,26,11,28,26.0269408`9.167998042490286},10},{{2013,3,27,11,28,26.0289409`9.168031415564185},5},{{2013,3,28,11,28,26.0319411`9.168081471201209},4},{{2013,3,29,11,28,26.0329411`9.168098154019399},3},{{2013,3,30,11,28,26.0349413`9.168131521069615},5},{{2013,3,31,11,28,26.0359413`9.168148201965353},0}}
		],
		Test["Split the date data using the PlotRange option (Full, Custom):",
			Domains[{{{2013,3,22,11,28,26.0179403`9.167847831078879},1},{{2013,3,23,11,28,26.0199404`9.16788121569723},4},{{2013,3,24,11,28,26.0229406`9.16793128864789},0},{{2013,3,25,11,28,26.0249407`9.167964666851653},0},{{2013,3,26,11,28,26.0269408`9.167998042490286},10},{{2013,3,27,11,28,26.0289409`9.168031415564185},5},{{2013,3,28,11,28,26.0319411`9.168081471201209},4},{{2013,3,29,11,28,26.0329411`9.168098154019399},3},{{2013,3,30,11,28,26.0349413`9.168131521069615},5},{{2013,3,31,11,28,26.0359413`9.168148201965353},0}},PlotRange->{Full,{0,8}}],
			{{{2013,3,22,11,28,26.0179403`9.167847831078879},1},{{2013,3,23,11,28,26.0199404`9.16788121569723},4},{{2013,3,24,11,28,26.0229406`9.16793128864789},0},{{2013,3,25,11,28,26.0249407`9.167964666851653},0},{{2013,3,27,11,28,26.0289409`9.168031415564185},5},{{2013,3,28,11,28,26.0319411`9.168081471201209},4},{{2013,3,29,11,28,26.0329411`9.168098154019399},3},{{2013,3,30,11,28,26.0349413`9.168131521069615},5},{{2013,3,31,11,28,26.0359413`9.168148201965353},0}}
		],
		Test["Split the date data using the PlotRange option (Automatic, Custom):",
			Domains[{{{2013,3,22,11,28,26.0179403`9.167847831078879},1},{{2013,3,23,11,28,26.0199404`9.16788121569723},4},{{2013,3,24,11,28,26.0229406`9.16793128864789},0},{{2013,3,25,11,28,26.0249407`9.167964666851653},0},{{2013,3,26,11,28,26.0269408`9.167998042490286},10},{{2013,3,27,11,28,26.0289409`9.168031415564185},5},{{2013,3,28,11,28,26.0319411`9.168081471201209},4},{{2013,3,29,11,28,26.0329411`9.168098154019399},3},{{2013,3,30,11,28,26.0349413`9.168131521069615},5},{{2013,3,31,11,28,26.0359413`9.168148201965353},0}},PlotRange->{Automatic,{0,8}}],
			{{{2013,3,22,11,28,26.0179403`9.167847831078879},1},{{2013,3,23,11,28,26.0199404`9.16788121569723},4},{{2013,3,24,11,28,26.0229406`9.16793128864789},0},{{2013,3,25,11,28,26.0249407`9.167964666851653},0},{{2013,3,27,11,28,26.0289409`9.168031415564185},5},{{2013,3,28,11,28,26.0319411`9.168081471201209},4},{{2013,3,29,11,28,26.0329411`9.168098154019399},3},{{2013,3,30,11,28,26.0349413`9.168131521069615},5},{{2013,3,31,11,28,26.0359413`9.168148201965353},0}}
		],
		Test["Split the date data using the PlotRange option (Automatic, Automatic):",
			Domains[{{{2013,3,22,11,28,26.0179403`9.167847831078879},1},{{2013,3,23,11,28,26.0199404`9.16788121569723},4},{{2013,3,24,11,28,26.0229406`9.16793128864789},0},{{2013,3,25,11,28,26.0249407`9.167964666851653},0},{{2013,3,26,11,28,26.0269408`9.167998042490286},10},{{2013,3,27,11,28,26.0289409`9.168031415564185},5},{{2013,3,28,11,28,26.0319411`9.168081471201209},4},{{2013,3,29,11,28,26.0329411`9.168098154019399},3},{{2013,3,30,11,28,26.0349413`9.168131521069615},5},{{2013,3,31,11,28,26.0359413`9.168148201965353},0}},PlotRange->{Automatic,{0,Automatic}}],
			{{{2013,3,22,11,28,26.0179403`9.167847831078879},1},{{2013,3,23,11,28,26.0199404`9.16788121569723},4},{{2013,3,24,11,28,26.0229406`9.16793128864789},0},{{2013,3,25,11,28,26.0249407`9.167964666851653},0},{{2013,3,26,11,28,26.0269408`9.167998042490286},10},{{2013,3,27,11,28,26.0289409`9.168031415564185},5},{{2013,3,28,11,28,26.0319411`9.168081471201209},4},{{2013,3,29,11,28,26.0329411`9.168098154019399},3},{{2013,3,30,11,28,26.0349413`9.168131521069615},5},{{2013,3,31,11,28,26.0359413`9.168148201965353},0}}
		]
	},
	Variables->{fdata},
	SetUp:>(fdata=Table[{x,(x)^2-60},{x,-15,15}])
];


(* ::Subsection::Closed:: *)
(*PeakResolution*)


(* ::Subsubsection:: *)
(*PeakResolution*)


DefineTests[PeakResolution,{
	Example[{Basic,"The function returns the resolution between two peaks found in the provided peak data:"},
		PeakResolution[<|Type->Object[Analysis,Peaks],Position -> {1.303`, 1.737`, 8.703`, 9.513`},   Height -> {38.169000000000004`, 128.26000000000002`, 1241.304`,     284.979`},   HalfHeightWidth -> {0.25`, 0.2899999999999998`, 0.2829999999999995`,     0.29999999999999893`},   Area -> {9.729219999999998`, 44.96271550000001`, 385.96647749999994`,     96.5353715`}, PeakRangeStart -> {0.88`, 1.46`, 7.907`, 9.173`},   PeakRangeEnd -> {1.46`, 2.383`, 9.173`, 10.683`},   WidthRangeStart -> {1.21`, 1.6`, 8.567`, 9.367`},   WidthRangeEnd -> {1.46`, 1.89`, 8.85`, 9.667`},   BaselineIntercept -> {0.004`, 0.004`, 0.004`, 0.004`},   BaselineSlope -> {0.`, 0.`, 0.`, 0.`}|>, 1.3, 1.7],
		0.9455337690631817`,
		EquivalenceFunction->RoundMatchQ[5]
	],
	Example[{Basic,"An Object[Analysis, Peaks] object can be provided:"},
		PeakResolution[Object[Analysis, Peaks, "id:6V0npvK6GJ68"],20.82`,30.706667`],
		31.155407600637997`,
		EquivalenceFunction->RoundMatchQ[5]
	],
	Example[{Basic,"A packet can be provided:"},
		PeakResolution[Download[Object[Data, Chromatography, "id:Y0lXejGKB9da"]],20.82`,30.706667`,PeakField->AbsorbancePeaksAnalyses],
		31.155407600637997`,
		EquivalenceFunction->RoundMatchQ[5]
	],
	Example[{Basic,"A peaks analysis link can be provided:"},
		PeakResolution[Link[Object[Analysis, Peaks, "id:6V0npvK6GJ68"]],20.82`,30.706667`],
		31.155407600637997`,
		EquivalenceFunction->RoundMatchQ[5]
	],
	Example[{Additional,"Peak labels can be provided:"},
		PeakResolution[<|Type->Object[Analysis,Peaks],Position->{20.193333`,25.366667`},Height->{782.5303`,840.28282`},HalfHeightWidth->{1.806667000000001`,2.9266669999999984`},Area->{1555.83690672328`,2889.1986329524498`},PeakRangeStart->{18.533333`,23.953333`},PeakRangeEnd->{22.706667`,35.093333`},WidthRangeStart->{19.853333`,24.793333`},WidthRangeEnd->{21.66`,27.72`},BaselineIntercept->{11.73867`,11.73867`},BaselineSlope->{0.`,0.`},TailingFactor->{2.656863235294119`,2.55232290427569`},RelativeArea->{0.5385011916378287`,1.`},RelativePosition->{0.7960577950583733`,1.`},PeakLabel->{"1","2"}|>,"1","2"],
		1.285832627513218`,
		EquivalenceFunction->RoundMatchQ[5]
	],
	Example[{Additional,"Input a Peak only generates the entire resolution matrix:"},
		PeakResolution[Object[Analysis,Peaks,"id:XnlV5jKRL6wB"]],
		{{0.`,-3.8945233265720103`,-6.882352941176473`,-12.61176470588236`,-8.156862745098064`,-11.535150645624102`,-9.944506104328527`,-15.262321144674026`,-5.39665407447383`},{3.8945233265720103`,0.`,-5.237191650853899`,-12.647058823529456`,-7.0588235294118`,-11.25000000000001`,-9.411764705882366`,-16.13445378151254`,-4.752941176470593`},{6.882352941176473`,5.237191650853899`,0.`,-1.4814814814814878`,-1.9524405506883697`,-4.596443228454176`,-4.577540106951876`,-7.420814479637989`,-2.8192898781134104`},{12.61176470588236`,12.647058823529456`,1.4814814814814878`,0.`,-1.6176470588235372`,-5.6302521008403374`,-5.294117647058827`,-10.392156862745042`,-2.8431372549019627`},{8.156862745098064`,7.0588235294118`,1.9524405506883697`,1.6176470588235372`,0.`,-2.205882352941181`,-2.666666666666672`,-4.491978609625666`,-1.9066937119675487`},{11.535150645624102`,11.25000000000001`,4.596443228454176`,5.6302521008403374`,2.205882352941181`,0.`,-0.966386554621848`,-2.294117647058815`,-1.0294117647058836`},{9.944506104328527`,9.411764705882366`,4.577540106951876`,5.294117647058827`,2.666666666666672`,0.966386554621848`,0.`,-0.7239819004524881`,-0.49335863377609246`},{15.262321144674026`,16.13445378151254`,7.420814479637989`,10.392156862745042`,4.491978609625666`,2.294117647058815`,0.7239819004524881`,0.`,-0.2178649237472773`},{5.39665407447383`,4.752941176470593`,2.8192898781134104`,2.8431372549019627`,1.9066937119675487`,1.0294117647058836`,0.49335863377609246`,0.2178649237472773`,0.`}},
		EquivalenceFunction->RoundMatchQ[5]
	],
	Example[{Additional,"Specify two lists of labels:"},
		PeakResolution[Object[Analysis,Peaks,"id:XnlV5jKRL6wB"], {"1", "3", "5"}, {"2", "4", "6"}],
		{{3.8945233265720103`,-5.237191650853899`,-7.0588235294118`},{12.61176470588236`,1.4814814814814878`,-1.6176470588235372`},{11.535150645624102`,4.596443228454176`,2.205882352941181`}},
		EquivalenceFunction->RoundMatchQ[5]
	],
	Example[{Additional,"Specify a list of positions and a single position:"},
		PeakResolution[Object[Analysis,Peaks,"id:XnlV5jKRL6wB"], {130.9090909090909`, 237.27272727272725`, 358.1818181818182`}, 252.72727272727275`],
		{12.61176470588236`,1.4814814814814878`,-2.8431372549019627`},
		EquivalenceFunction->RoundMatchQ[5]
	],
	Example[{Additional,"Specify a single label and a list of labels:"},
		PeakResolution[Object[Analysis,Peaks,"id:XnlV5jKRL6wB"], "5", {"1", "2", "3", "4"}],
		{-8.156862745098064`,-7.0588235294118`,-1.9524405506883697`,-1.6176470588235372`},
		EquivalenceFunction->RoundMatchQ[5]
	],
	Example[{Options,PeakField,"When providing a data Object, the PeakField should be specified if more than one field in the object contains Object[Analysis, Peaks] objects:"},
		PeakResolution[Object[Data, Chromatography, "id:Y0lXejGKB9da"],20.82`,30.706667`,PeakField->AbsorbancePeaksAnalyses],
		31.155407600637997`,
		EquivalenceFunction->RoundMatchQ[5]
	],
	Example[{Options, Method, "Calculate Resolution from TangentWidth:"},
		PeakResolution[Object[Analysis,Peaks,"id:zGj91a7wBMJv"], Method -> TangentWidth],
		{{0.`,-0.9536145565316608`,-3.8253119137037768`},{0.9536145565316608`,0.`,-2.935678233870198`},{3.8253119137037768`,2.935678233870198`,0.`}},
		EquivalenceFunction->RoundMatchQ[5]
	],
	Example[{Messages,"AmbiguousPeaksFields","The function will message if a data Object is provided, but multiple peak fields are available and a specific one is not specified:"},
		PeakResolution[Object[Data, Chromatography, "id:Y0lXejGKB9da"],"1","2",PeakField->Automatic],
		Null,
		Messages:>{Message[PeakResolution::AmbiguousPeaksFields]}
	],
	Example[{Messages,"BadPeaksField","The function will message if a data Object is provided and the PeakField specified does not contain Object[Analysis, Peaks] objects:"},
		PeakResolution[Object[Data,Chromatography,"id:dORYzZn8Apa5"],"1","2",PeakField->Absorbance3DPeaksAnalyses],
		Null,
		Messages:>{Message[PeakResolution::BadPeaksField]}
	],
	Example[{Messages,"InvalidPeaksField","The function will message if a data Object is provided and the PeakField specified is invalid:"},
		PeakResolution[Object[Data, PAGE, "id:qdkmxz0AzZ8m"],"1","2",PeakField->Chromatogram],
		Null,
		Messages:>{Message[PeakResolution::InvalidPeaksField]}
	],
	Example[{Messages,"NoPeaksFields","If a data object is selected which has no peaks anlysis associated with it, an error will be thrown:"},
		PeakResolution[Object[Data, FluorescenceKinetics, "id:Vrbp1jG8YEEw"],"1","2"],
		Null,
		Messages:>{Message[PeakResolution::NoPeaksFields]}
	],
	Example[{Messages,"missing","If either of the reference peaks is not valid, an error will be thrown:"},
		PeakResolution[<|Type->Object[Analysis,Peaks],Position -> {1.303`, 1.737`, 8.703`, 9.513`},   Height -> {38.169000000000004`, 128.26000000000002`, 1241.304`,     284.979`},   HalfHeightWidth -> {0.25`, 0.2899999999999998`, 0.2829999999999995`,     0.29999999999999893`},   Area -> {9.729219999999998`, 44.96271550000001`, 385.96647749999994`,     96.5353715`}, PeakRangeStart -> {0.88`, 1.46`, 7.907`, 9.173`},   PeakRangeEnd -> {1.46`, 2.383`, 9.173`, 10.683`},   WidthRangeStart -> {1.21`, 1.6`, 8.567`, 9.367`},   WidthRangeEnd -> {1.46`, 1.89`, 8.85`, 9.667`},   BaselineIntercept -> {0.004`, 0.004`, 0.004`, 0.004`},   BaselineSlope -> {0.`, 0.`, 0.`, 0.`}|>, 1.3, 17],
		Null,
		Messages:>{Message[PeakResolution::missing]}
	]
}];


(* ::Subsection::Closed:: *)
(*AnalyzePeaks*)


(* ::Subsubsection::Closed:: *)
(*AnalyzePeaks*)


DefineTests[AnalyzePeaks, {

	Example[{Basic, "Pick peaks from chromatography data:"},
		AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"]][Position],
		{20.193333`,25.366667`},
		EquivalenceFunction -> RoundMatchQ[12,Force->True],
		Stubs:>{
			AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"]]=stripAppendReplaceKeyHeads@AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],Upload->False]
		}
	],

	Test["Pick peaks from chromatography data:",
		stripAppendReplaceKeyHeads @ AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"], Upload -> False],
		Analysis`Private`validAnalysisPacketP[Object[Analysis, Peaks],
			{
				Position -> {20.193333, 25.366667},
				Height -> {749.248859617084`,807.001379617084`},
				HalfHeightWidth -> {1.7800000000000011`,2.806667000000001`},
				Area -> {1425.6024554359885`,2585.5495783634524`},
				PeakRangeStart -> {19.193333`,23.946667`},
				PeakRangeEnd -> {22.706667`,32.2`},
				WidthRangeStart -> {19.86`,24.873333`},
				WidthRangeEnd -> {21.64`,27.68`},
				BaselineIntercept -> {45.02011038291592`,45.02011038291592`},
				BaselineSlope -> {0., 0.},
				AsymmetryFactor -> {4.340005340005328`, 4.689182176780817`},
				TailingFactor -> {2.6700026700026815`, 2.84459108839042`},
				Reference -> {Link[Object[Data, Chromatography, "id:XnlV5jmbk0rn"], AbsorbancePeaksAnalyses]},
				ReferenceField -> Absorbance
			},
			ResolvedOptions -> {Upload -> False, Output -> Result,  Baseline -> DomainConstant, Exclude -> {},
				ReferenceField -> Absorbance, Domain -> {{3.00033335`, 50}}, AbsoluteThreshold -> {767.`}, RelativeThreshold -> {16.9`},
				WidthThreshold -> {0.`}, ConsolidateWidth -> {0}, EdgeFraction -> {0}, SmoothingRadius -> {5}, AreaThreshold -> {0}},
			NonNullFields -> {BaselineFunction},
			NullFields -> {PeakSamples},
			Round -> 12
		]
	],

	Example[{Basic, "Plot peaks over data:"},
		PlotChromatography[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],Peaks->AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"]]],
		ValidGraphicsP[]
	],

	(* ----- ADDITIONAL ----- *)

	Example[{Additional,"Mapping","List of chromatography data:"},
		AnalyzePeaks[{Object[Data, Chromatography, "id:XnlV5jmbk0rn"],Object[Data, Chromatography, "id:XnlV5jmbk0rn"],Object[Data, Chromatography, "id:XnlV5jmbk0rn"]}][Position],
		{{_?NumericQ..}, {_?NumericQ..}, {_?NumericQ..}},
		EquivalenceFunction -> RoundMatchQ[12,Force->True],
		Stubs:>{
			AnalyzePeaks[
				{Object[Data, Chromatography, "id:XnlV5jmbk0rn"],Object[Data, Chromatography, "id:XnlV5jmbk0rn"],Object[Data, Chromatography, "id:XnlV5jmbk0rn"]}
			]=stripAppendReplaceKeyHeads@AnalyzePeaks[
				{Object[Data, Chromatography, "id:XnlV5jmbk0rn"],Object[Data, Chromatography, "id:XnlV5jmbk0rn"],Object[Data, Chromatography, "id:XnlV5jmbk0rn"]},
				Upload->False
			]
		}
	],

	Example[{Additional,"Mapping","List of chromatography data (new):"},
		AnalyzePeaks[{Object[Data, Chromatography, "id:vXl9j57xa0JN"],Object[Data, Chromatography, "id:xRO9n3BxJZlz"],Object[Data, Chromatography, "id:6V0npvmxrXkG"]}][Position],
		{{_?NumericQ..}, {_?NumericQ..}, {_?NumericQ..}},
		EquivalenceFunction -> RoundMatchQ[12,Force->True],
		Stubs:>{
			AnalyzePeaks[
				{Object[Data, Chromatography, "id:vXl9j57xa0JN"],Object[Data, Chromatography, "id:xRO9n3BxJZlz"],Object[Data, Chromatography, "id:6V0npvmxrXkG"]}
			]=stripAppendReplaceKeyHeads@AnalyzePeaks[
				{Object[Data, Chromatography, "id:vXl9j57xa0JN"],Object[Data, Chromatography, "id:xRO9n3BxJZlz"],Object[Data, Chromatography, "id:6V0npvmxrXkG"]},
				Upload->False
			]
		}
	],

	Example[{Additional,"Input types", "Pick peaks from raw numeric data:"},
		AnalyzePeaks[xyPts][Position],
		{_?NumericQ..},
		EquivalenceFunction -> RoundMatchQ[12,Force->True]
		(*
		Stubs:>{
			AnalyzePeaks[xyPts]=stripAppendReplaceKeyHeads@AnalyzePeaks[
				{{-60.4703`,1.587`},{-59.8914`,-2.9288`},{-59.3126`,-2.8543`},{-58.7337`,-3.6064`},{-58.1548`,-3.5293`},{-57.5759`,-7.4673`},{-56.9971`,0.8248`},{-56.4182`,23.293`},{-55.8393`,0.3193`},{-55.2604`,-13.9593`},{-54.6816`,-12.3607`},{-54.1027`,-3.2422`},{-53.5238`,-4.832`},{-52.9449`,-8.3469`},{-52.3661`,-14.6887`},{-51.7872`,-17.8354`},{-51.2083`,-11.4492`},{-50.6294`,-13.8761`},{-50.0505`,-7.6376`},{-49.4717`,-20.6722`},{-48.8928`,-6.1023`},{-48.3139`,-3.0062`},{-47.735`,6.8016`},{-47.1562`,23.4155`},{-46.5773`,0.9423`},{-45.9984`,19.5976`},{-45.4195`,0.8777`},{-44.8407`,2.3731`},{-44.2618`,16.3106`},{-43.6829`,4.7338`},{-43.104`,7.0143`},{-42.5252`,-0.4604`},{-41.9463`,16.6188`},{-41.3674`,-7.5774`},{-40.7885`,4.786`},{-40.2096`,9.1225`},{-39.6308`,6.0894`},{-39.0519`,8.1521`},{-38.473`,0.7713`},{-37.8941`,24.0671`},{-37.3153`,-5.3851`},{-36.7364`,7.6461`},{-36.1575`,6.2401`},{-35.5786`,5.5707`},{-34.9998`,-3.8426`},{-34.4209`,-8.1403`},{-33.842`,4.7625`},{-33.2631`,-11.033`},{-32.6843`,-10.0288`},{-32.1054`,-9.4915`},{-31.5265`,6.0948`},{-30.9476`,22.7781`},{-30.3687`,-18.0986`},{-29.7899`,-5.7582`},{-29.211`,-7.9967`},{-28.6321`,17.574`},{-28.0532`,9.6356`},{-27.4744`,-12.3885`},{-26.8955`,-9.992`},{-26.3166`,-8.0265`},{-25.7377`,-6.8299`},{-25.1589`,-8.0575`},{-24.58`,9.9059`},{-24.0011`,4.6671`},{-23.4222`,29.4874`},{-22.8434`,-5.0773`},{-22.2645`,3.1678`},{-21.6856`,-3.0654`},{-21.1067`,-4.1394`},{-20.5278`,-12.4577`},{-19.949`,-7.0589`},{-19.3701`,-10.7888`},{-18.7912`,4.4065`},{-18.2123`,5.4024`},{-17.6335`,6.2734`},{-17.0546`,-4.4128`},{-16.4757`,9.1531`},{-15.8968`,-17.4617`},{-15.318`,-5.7665`},{-14.7391`,-8.6346`},{-14.1602`,-1.6776`},{-13.5813`,5.549`},{-13.0025`,-1.2764`},{-12.4236`,1.6277`},{-11.8447`,-6.2084`},{-11.2658`,5.6592`},{-10.6869`,4.7049`},{-10.1081`,8.8459`},{-9.5292`,-5.952`},{-8.9503`,14.4889`},{-8.3714`,23.2175`},{-7.7926`,21.225`},{-7.2137`,15.7654`},{-6.6348`,-2.578`},{-6.0559`,8.965`},{-5.4771`,-9.7285`},{-4.8982`,-2.9533`},{-4.3193`,75.6051`},{-3.7404`,16.4113`},{-3.1616`,14.9865`},{-2.5827`,-11.3331`},{-2.0038`,-2.0928`},{-1.4249`,-0.9202`},{-0.846`,0.2394`},{-0.2672`,6.0783`},{0.3117`,12.7922`},{0.8906`,149.8234`},{1.4695`,137.478`},{2.0483`,73.5309`},{2.6272`,20.1371`},{3.2061`,13.3703`},{3.785`,-1.6624`},{4.3638`,-5.3309`},{4.9427`,6.2866`},{5.5216`,-4.5244`},{6.1005`,-15.892`},{6.6793`,-17.247`},{7.2582`,-3.521`},{7.8371`,47.9696`},{8.416`,48.6575`},{8.9949`,143.0855`},{9.5737`,262.487`},{10.1526`,433.1576`},{10.7315`,655.7522`},{11.3104`,789.8354`},{11.8892`,812.2174`},{12.4681`,768.5621`},{13.047`,657.1636`},{13.6259`,473.0125`},{14.2047`,347.134`},{14.7836`,228.5908`},{15.3625`,146.17`},{15.9414`,77.1921`},{16.5202`,93.6922`},{17.0991`,41.6889`},{17.678`,34.9402`},{18.2569`,24.9377`},{18.8358`,6.303`},{19.4146`,7.6878`},{19.9935`,-0.4913`},{20.5724`,4.309`},{21.1513`,7.6213`},{21.7301`,14.0376`},{22.309`,10.5065`},{22.8879`,-5.2162`},{23.4668`,3.6696`},{24.0456`,-1.3919`},{24.6245`,13.7266`},{25.2034`,26.7292`},{25.7823`,-0.9272`},{26.3611`,-5.163`},{26.94`,-2.0984`},{27.5189`,-4.7001`},{28.0978`,-15.0261`},{28.6767`,-6.6703`},{29.2555`,-4.7324`},{29.8344`,-9.1476`},{30.4133`,-11.197`},{30.9922`,-18.8589`},{31.571`,-18.5209`},{32.1499`,-7.7127`},{32.7288`,-17.283`},{33.3077`,10.2485`},{33.8865`,0.7054`},{34.4654`,17.6433`},{35.0443`,26.3025`},{35.6232`,-4.1029`},{36.202`,9.6538`},{36.7809`,50.4171`},{37.3598`,71.2644`},{37.9387`,193.1155`},{38.5176`,510.2275`},{39.0964`,954.8649`},{39.6753`,1316.5008`},{40.5055`,1341.1692`},{41.6568`,1026.4138`},{42.8081`,549.0985`},{43.9595`,223.7178`},{45.1108`,34.8255`},{46.2621`,-25.6132`},{47.4134`,-69.3664`},{48.5647`,-100.2309`},{49.716`,-90.0365`},{50.8673`,-110.048`},{52.0186`,-89.8928`},{53.1699`,-70.6448`},{54.3212`,-66.6014`},{55.4725`,-7.3808`},{56.6238`,24.2758`},{57.7751`,44.6924`},{58.9264`,89.7889`},{60.0777`,151.1335`},{61.229`,290.8439`},{62.3803`,536.4023`},{63.5317`,956.7083`},{64.683`,1382.7361`},{65.8685`,1552.8259`},{68.4379`,1408.1517`},{71.2857`,1056.4687`},{74.1335`,772.6727`},{76.9813`,502.9082`},{79.8291`,456.0177`},{82.6769`,597.0413`},{85.5247`,933.6729`},{88.3726`,1140.7761`},{91.3774`,1132.9723`},{94.5917`,934.8548`},{97.8059`,695.1553`},{101.0202`,506.9661`},{104.2344`,526.7152`},{107.4487`,886.2472`},{110.6629`,1485.9208`},{113.8772`,1962.2649`},{117.2542`,1986.5373`},{120.9477`,1602.6262`},{124.6412`,1052.4658`},{128.3347`,520.8706`},{132.0283`,237.5131`},{135.7218`,179.6594`},{139.4153`,194.352`},{143.1088`,188.4899`},{146.8023`,193.5516`},{150.4959`,149.3122`},{154.1894`,68.9806`},{157.8829`,26.3029`},{161.5764`,32.2454`},{165.2699`,82.5101`},{168.9635`,171.1333`},{172.657`,342.7152`},{176.3505`,529.9803`},{180.044`,653.1731`},{183.7376`,523.2293`},{187.4311`,361.8707`},{191.1246`,167.4945`},{194.8181`,61.7772`},{198.5116`,60.4075`},{202.2052`,35.8679`},{205.8987`,44.0184`},{209.5922`,65.031`},{213.2857`,95.5418`},{216.9792`,120.0814`},{220.6728`,175.8616`},{224.3663`,244.9024`},{228.0598`,308.0053`},{231.7533`,342.9063`},{235.4469`,388.0488`},{239.1404`,402.7888`},{242.8339`,364.4319`},{246.5274`,337.8086`},{250.2209`,229.8374`},{253.9145`,156.6267`},{257.608`,33.2384`},{261.3015`,-62.4133`},{264.995`,-107.0692`},{268.6885`,-145.7654`},{272.3821`,-167.8836`},{276.0756`,-174.4012`},{279.7691`,-160.7985`},{283.4626`,-94.334`},{287.1562`,-132.8897`},{290.8497`,-88.0442`},{294.5432`,-24.0263`},{298.2367`,17.0242`},{301.9302`,39.8069`},{305.6238`,53.6636`},{309.3173`,58.9873`},{313.0108`,23.7347`},{316.7043`,-15.399`},{320.3978`,-13.7185`},{324.0914`,-29.1139`},{327.7849`,-37.6242`},{331.4784`,-40.0249`},{335.1719`,-26.3684`},{338.8654`,-21.9221`},{342.559`,-23.7979`},{346.2525`,-14.4608`},{349.946`,-0.908`},{353.6395`,-8.8529`},{357.3331`,-8.4405`}}
			]
		}
		*)
	],

	Test["Raw data with Quantity:",
		AnalyzePeaks[{{1 Second, 1 Meter}, {2 Second, 2 Meter}, {3 Second, 3 Meter}}],
		ObjectP[Object[Analysis, Peaks]]
	],

	Test["Raw data:",
		stripAppendReplaceKeyHeads @ AnalyzePeaks[xyPts, Upload -> False],
		Analysis`Private`validAnalysisPacketP[Object[Analysis, Peaks],
			{
				Position -> {-47.1562`,-4.3193`,0.8906`,11.8892`,16.5202`,40.5055`,65.8685`,88.3726`,117.2542`,146.8023`,180.044`,239.1404`,309.3173`},
				Height -> {18.144666666666666`,70.33426666666666`,144.55256666666665`,806.9465666666666`,88.42136666666667`,1335.8983666666668`,1547.5550666666668`,1135.5052666666668`,1981.2664666666667`,188.28076666666666`,647.9022666666666`,397.51796666666667`,53.71646666666666`},
				HalfHeightWidth -> {0.5788000000000011`,0.5789`,1.7365999999999997`,3.4733`,1.1577000000000002`,4.2905000000000015`,10.601799999999997`,12.281199999999998`,17.192499999999995`,7.387100000000004`,14.774099999999976`,25.854600000000005`,11.080600000000004`},
				Area -> {5.694070406666676`,29.618626550000002`,215.26025164833334`,3331.206690731666`,121.93864758000002`,5333.9857890099975`,17910.028879864996`,17812.218116425003`,36378.914916505`,1839.9612192400002`,10912.047716809986`,11935.174995035002`,560.5072376500003`},
				PeakRangeStart -> {-47.735`,-4.3193`,-0.2672`,7.8371`,15.9414`,36.202`,56.6238`,79.8291`,101.0202`,143.1088`,157.8829`,202.2052`,298.2367`},
				PeakRangeEnd -> {-47.1562`,-3.1616`,3.2061`,15.9414`,18.8358`,45.1108`,79.8291`,101.0202`,135.7218`,157.8829`,202.2052`,257.608`,313.0108`},
				WidthRangeStart -> {-47.735`,-4.3193`,0.3117`,10.1526`,15.9414`,38.5176`,63.5317`,85.5247`,107.4487`,143.1088`,172.657`,224.3663`,301.9302`},
				WidthRangeEnd -> {-47.1562`,-3.7404`,2.0483`,13.6259`,17.0991`,42.8081`,74.1335`,97.8059`,124.6412`,150.4959`,187.4311`,250.2209`,313.0108`},
				BaselineIntercept -> {5.270833333333334`,5.270833333333334`,5.270833333333334`,5.270833333333334`,5.270833333333334`,5.270833333333334`,5.270833333333334`,5.270833333333334`,5.270833333333334`,5.270833333333334`,5.270833333333334`,5.270833333333334`,5.270833333333334`},
				BaselineSlope -> {0.`,0.`,0.`,0.`,0.`,0.`,0.`,0.`,0.`,0.`,0.`,0.`,0.`}
			},
			NonNullFields -> {BaselineFunction},
			NullFields -> {Reference, ReferenceField,  PeakSamples},
			Round -> 12
		],
		SetUp :> (xyPts={{-60.4703`,1.587`},{-59.8914`,-2.9288`},{-59.3126`,-2.8543`},{-58.7337`,-3.6064`},{-58.1548`,-3.5293`},{-57.5759`,-7.4673`},{-56.9971`,0.8248`},{-56.4182`,23.293`},{-55.8393`,0.3193`},{-55.2604`,-13.9593`},{-54.6816`,-12.3607`},{-54.1027`,-3.2422`},{-53.5238`,-4.832`},{-52.9449`,-8.3469`},{-52.3661`,-14.6887`},{-51.7872`,-17.8354`},{-51.2083`,-11.4492`},{-50.6294`,-13.8761`},{-50.0505`,-7.6376`},{-49.4717`,-20.6722`},{-48.8928`,-6.1023`},{-48.3139`,-3.0062`},{-47.735`,6.8016`},{-47.1562`,23.4155`},{-46.5773`,0.9423`},{-45.9984`,19.5976`},{-45.4195`,0.8777`},{-44.8407`,2.3731`},{-44.2618`,16.3106`},{-43.6829`,4.7338`},{-43.104`,7.0143`},{-42.5252`,-0.4604`},{-41.9463`,16.6188`},{-41.3674`,-7.5774`},{-40.7885`,4.786`},{-40.2096`,9.1225`},{-39.6308`,6.0894`},{-39.0519`,8.1521`},{-38.473`,0.7713`},{-37.8941`,24.0671`},{-37.3153`,-5.3851`},{-36.7364`,7.6461`},{-36.1575`,6.2401`},{-35.5786`,5.5707`},{-34.9998`,-3.8426`},{-34.4209`,-8.1403`},{-33.842`,4.7625`},{-33.2631`,-11.033`},{-32.6843`,-10.0288`},{-32.1054`,-9.4915`},{-31.5265`,6.0948`},{-30.9476`,22.7781`},{-30.3687`,-18.0986`},{-29.7899`,-5.7582`},{-29.211`,-7.9967`},{-28.6321`,17.574`},{-28.0532`,9.6356`},{-27.4744`,-12.3885`},{-26.8955`,-9.992`},{-26.3166`,-8.0265`},{-25.7377`,-6.8299`},{-25.1589`,-8.0575`},{-24.58`,9.9059`},{-24.0011`,4.6671`},{-23.4222`,29.4874`},{-22.8434`,-5.0773`},{-22.2645`,3.1678`},{-21.6856`,-3.0654`},{-21.1067`,-4.1394`},{-20.5278`,-12.4577`},{-19.949`,-7.0589`},{-19.3701`,-10.7888`},{-18.7912`,4.4065`},{-18.2123`,5.4024`},{-17.6335`,6.2734`},{-17.0546`,-4.4128`},{-16.4757`,9.1531`},{-15.8968`,-17.4617`},{-15.318`,-5.7665`},{-14.7391`,-8.6346`},{-14.1602`,-1.6776`},{-13.5813`,5.549`},{-13.0025`,-1.2764`},{-12.4236`,1.6277`},{-11.8447`,-6.2084`},{-11.2658`,5.6592`},{-10.6869`,4.7049`},{-10.1081`,8.8459`},{-9.5292`,-5.952`},{-8.9503`,14.4889`},{-8.3714`,23.2175`},{-7.7926`,21.225`},{-7.2137`,15.7654`},{-6.6348`,-2.578`},{-6.0559`,8.965`},{-5.4771`,-9.7285`},{-4.8982`,-2.9533`},{-4.3193`,75.6051`},{-3.7404`,16.4113`},{-3.1616`,14.9865`},{-2.5827`,-11.3331`},{-2.0038`,-2.0928`},{-1.4249`,-0.9202`},{-0.846`,0.2394`},{-0.2672`,6.0783`},{0.3117`,12.7922`},{0.8906`,149.8234`},{1.4695`,137.478`},{2.0483`,73.5309`},{2.6272`,20.1371`},{3.2061`,13.3703`},{3.785`,-1.6624`},{4.3638`,-5.3309`},{4.9427`,6.2866`},{5.5216`,-4.5244`},{6.1005`,-15.892`},{6.6793`,-17.247`},{7.2582`,-3.521`},{7.8371`,47.9696`},{8.416`,48.6575`},{8.9949`,143.0855`},{9.5737`,262.487`},{10.1526`,433.1576`},{10.7315`,655.7522`},{11.3104`,789.8354`},{11.8892`,812.2174`},{12.4681`,768.5621`},{13.047`,657.1636`},{13.6259`,473.0125`},{14.2047`,347.134`},{14.7836`,228.5908`},{15.3625`,146.17`},{15.9414`,77.1921`},{16.5202`,93.6922`},{17.0991`,41.6889`},{17.678`,34.9402`},{18.2569`,24.9377`},{18.8358`,6.303`},{19.4146`,7.6878`},{19.9935`,-0.4913`},{20.5724`,4.309`},{21.1513`,7.6213`},{21.7301`,14.0376`},{22.309`,10.5065`},{22.8879`,-5.2162`},{23.4668`,3.6696`},{24.0456`,-1.3919`},{24.6245`,13.7266`},{25.2034`,26.7292`},{25.7823`,-0.9272`},{26.3611`,-5.163`},{26.94`,-2.0984`},{27.5189`,-4.7001`},{28.0978`,-15.0261`},{28.6767`,-6.6703`},{29.2555`,-4.7324`},{29.8344`,-9.1476`},{30.4133`,-11.197`},{30.9922`,-18.8589`},{31.571`,-18.5209`},{32.1499`,-7.7127`},{32.7288`,-17.283`},{33.3077`,10.2485`},{33.8865`,0.7054`},{34.4654`,17.6433`},{35.0443`,26.3025`},{35.6232`,-4.1029`},{36.202`,9.6538`},{36.7809`,50.4171`},{37.3598`,71.2644`},{37.9387`,193.1155`},{38.5176`,510.2275`},{39.0964`,954.8649`},{39.6753`,1316.5008`},{40.5055`,1341.1692`},{41.6568`,1026.4138`},{42.8081`,549.0985`},{43.9595`,223.7178`},{45.1108`,34.8255`},{46.2621`,-25.6132`},{47.4134`,-69.3664`},{48.5647`,-100.2309`},{49.716`,-90.0365`},{50.8673`,-110.048`},{52.0186`,-89.8928`},{53.1699`,-70.6448`},{54.3212`,-66.6014`},{55.4725`,-7.3808`},{56.6238`,24.2758`},{57.7751`,44.6924`},{58.9264`,89.7889`},{60.0777`,151.1335`},{61.229`,290.8439`},{62.3803`,536.4023`},{63.5317`,956.7083`},{64.683`,1382.7361`},{65.8685`,1552.8259`},{68.4379`,1408.1517`},{71.2857`,1056.4687`},{74.1335`,772.6727`},{76.9813`,502.9082`},{79.8291`,456.0177`},{82.6769`,597.0413`},{85.5247`,933.6729`},{88.3726`,1140.7761`},{91.3774`,1132.9723`},{94.5917`,934.8548`},{97.8059`,695.1553`},{101.0202`,506.9661`},{104.2344`,526.7152`},{107.4487`,886.2472`},{110.6629`,1485.9208`},{113.8772`,1962.2649`},{117.2542`,1986.5373`},{120.9477`,1602.6262`},{124.6412`,1052.4658`},{128.3347`,520.8706`},{132.0283`,237.5131`},{135.7218`,179.6594`},{139.4153`,194.352`},{143.1088`,188.4899`},{146.8023`,193.5516`},{150.4959`,149.3122`},{154.1894`,68.9806`},{157.8829`,26.3029`},{161.5764`,32.2454`},{165.2699`,82.5101`},{168.9635`,171.1333`},{172.657`,342.7152`},{176.3505`,529.9803`},{180.044`,653.1731`},{183.7376`,523.2293`},{187.4311`,361.8707`},{191.1246`,167.4945`},{194.8181`,61.7772`},{198.5116`,60.4075`},{202.2052`,35.8679`},{205.8987`,44.0184`},{209.5922`,65.031`},{213.2857`,95.5418`},{216.9792`,120.0814`},{220.6728`,175.8616`},{224.3663`,244.9024`},{228.0598`,308.0053`},{231.7533`,342.9063`},{235.4469`,388.0488`},{239.1404`,402.7888`},{242.8339`,364.4319`},{246.5274`,337.8086`},{250.2209`,229.8374`},{253.9145`,156.6267`},{257.608`,33.2384`},{261.3015`,-62.4133`},{264.995`,-107.0692`},{268.6885`,-145.7654`},{272.3821`,-167.8836`},{276.0756`,-174.4012`},{279.7691`,-160.7985`},{283.4626`,-94.334`},{287.1562`,-132.8897`},{290.8497`,-88.0442`},{294.5432`,-24.0263`},{298.2367`,17.0242`},{301.9302`,39.8069`},{305.6238`,53.6636`},{309.3173`,58.9873`},{313.0108`,23.7347`},{316.7043`,-15.399`},{320.3978`,-13.7185`},{324.0914`,-29.1139`},{327.7849`,-37.6242`},{331.4784`,-40.0249`},{335.1719`,-26.3684`},{338.8654`,-21.9221`},{342.559`,-23.7979`},{346.2525`,-14.4608`},{349.946`,-0.908`},{353.6395`,-8.8529`},{357.3331`,-8.4405`}})
	],

	Test["Automatic resolution of ReferenceField works for various types of chromatography data:",
		{
			AnalyzePeaks[Object[Data,Chromatography,"id:BYDOjvGo8z9q"],Upload->False][ReferenceField],
			AnalyzePeaks[Object[Data,Chromatography,"id:lYq9jRxnrP9l"],Wavelength ->280 Nanometer,Upload->False][ReferenceField],
			AnalyzePeaks[Object[Data,Chromatography,"id:E8zoYvNYXakX"],Upload -> False][ReferenceField],
			AnalyzePeaks[Object[Data,ChromatographyMassSpectra,"id:zGj91a7DWm46"],Upload->False][ReferenceField]
		},
		{
			Absorbance,
			Absorbance3D,
			FIDResponse,
			IonAbundance
		}
	],

	Test["TLC data:",
		stripAppendReplaceKeyHeads @ AnalyzePeaks[Object[Data, TLC, "id:Vrbp1jG806vm"], Upload -> False],
		Analysis`Private`validAnalysisPacketP[Object[Analysis, Peaks],
			{
				Position -> {1.`,155`},
				Height -> {0.033325180671282095268`,0.022381268222581685023`},
				HalfHeightWidth -> {16.`,16.`},
				Area -> {0.59076966656994156502`,0.61898851718276781675`},
				PeakRangeStart -> {1.`,113.`},
				PeakRangeEnd -> {22.`,161.`},
				WidthRangeStart -> {1.`,145.`},
				WidthRangeEnd -> {17.`,161.`},
				BaselineIntercept -> {0.96667481932871790473`,0.96667481932871790473`},
				BaselineSlope -> {0.`,0.`},
				Reference -> {Link[Object[Data, TLC, "id:Vrbp1jG806vm"], LanePeaksAnalyses]},
				ReferenceField -> Intensity
			},
			ResolvedOptions -> {ReferenceField -> Intensity, Upload -> False, Baseline -> DomainConstant, Exclude -> {}},
			NonNullFields -> {BaselineFunction},
			NullFields -> {PeakSamples},
			Round -> 1
		]
	],

	Example[{Additional,"Input types","PAGE data:"},
		PlotObject[Object[Data, PAGE, "id:mnk9jO3qAB8b"],Peaks->AnalyzePeaks[Object[Data, PAGE, "id:mnk9jO3qAB8b"],Upload->False]],
		ValidGraphicsP[]
	],

	Test["PAGE data:",
		stripAppendReplaceKeyHeads @ AnalyzePeaks[Object[Data, PAGE, "id:BYDOjv1VvwL9"], Upload -> False],
		Analysis`Private`validAnalysisPacketP[Object[Analysis, Peaks],
			{
				Position -> {18.18181818181818`},
				Height -> {0.59696736523516635842`},
				HalfHeightWidth -> {1.2727272727272733732`},
				Area -> {0.86791169791606070927`},
				PeakRangeStart -> {16.545454545454546746`},
				PeakRangeEnd -> {20.363636363636359761`},
				WidthRangeStart -> {17.545454545454543194`},
				WidthRangeEnd -> {18.818181818181816567`},
				BaselineIntercept -> {0.38778822714262956017`},
				BaselineSlope -> {0.`},
				Reference -> {Link[Object[Data, PAGE, "id:BYDOjv1VvwL9"],LanePeaksAnalyses]},
				ReferenceField -> OptimalLaneIntensity,
				PeakSamples -> {Link[Object[Sample, _String]]}
			},
			ResolvedOptions -> {Exclude->{},Baseline->DomainConstant,ReferenceField->OptimalLaneIntensity,Upload->False,AbsoluteThreshold->{0.330`},RelativeThreshold->{0.0273`},WidthThreshold->{0.486`},SmoothingRadius->{2},ConsolidateHeight->{0.0273`},Domain->{{0.0909090909090909`, 48.72727272727273`}},ConsolidateWidth->{0},EdgeFraction->{0},AreaThreshold->{0}},
			NonNullFields -> {BaselineFunction},
			Round -> 12
		]
	],

	Example[{Additional,"Input types","NMR data:"},
		PlotObject[
			Object[Data,NMR,"id:3em6ZvL0KNeM"],
			Peaks->AnalyzePeaks[
				Object[Data,NMR,"id:3em6ZvL0KNeM"],
				KnownSpecies->{Molecule["CCCC(C)=O"]},
				Upload->False
			],
			PlotRange->{{-0.5,5.0},Automatic}
		],
		ValidGraphicsP[]
	],

	Test["NMR data:",
		stripAppendReplaceKeyHeads @ AnalyzePeaks[Object[Data, NMR, "id:Vrbp1jG8Zd9o"], Upload -> False],
		validAnalysisPacketP[Object[Analysis, Peaks],
			{
				Reference -> {Link[Object[Data, NMR, "id:Vrbp1jG8Zd9o"], NMRSpectrumPeaksAnalyses]},
				ReferenceField -> NMRSpectrum
			},
			ResolvedOptions->{Upload->False,Baseline->DomainConstant,Exclude->{},ReferenceField->NMRSpectrum,Domain->{{-2.0176`, 14.0174`}},AbsoluteThreshold->{93300.`},RelativeThreshold->{91600.`},WidthThreshold->{0.00802`},ConsolidateWidth->{0},EdgeFraction->{0},SmoothingRadius->{0},AreaThreshold->{0}},
			NonNullFields -> {BaselineFunction},
			NullFields -> {PeakSamples},
			Round -> 12
		]
	],


	Example[{Additional, "Input types","AbsorbanceSpectroscopy data:"},
		PlotObject[Object[Data, AbsorbanceSpectroscopy, "id:mnk9jO3qL4xZ"],Peaks->AnalyzePeaks[Object[Data, AbsorbanceSpectroscopy, "id:mnk9jO3qL4xZ"],SmoothingRadius->5,AbsoluteThreshold->0.05,Upload->False]],
		ValidGraphicsP[]
	],

	Test["AbsorbanceSpectroscopy data:",
		stripAppendReplaceKeyHeads @ AnalyzePeaks[Object[Data, AbsorbanceSpectroscopy, "id:mnk9jO3qL4xZ"], Upload -> False],
		Analysis`Private`validAnalysisPacketP[Object[Analysis, Peaks],
			{
				Position->{235.`,250.`,264.`,916.`,921.`,929.`,938.`,946.`,961.`,963.`,967.`,980.`,987.`,992.`},
				Height->{0.04809864661654135`,0.033998646616541346`,0.02149864661654135`,0.005198646616541347`,0.005398646616541346`,0.015098646616541346`,0.030998646616541344`,0.044598646616541344`,0.08879864661654135`,0.09309864661654135`,0.09729864661654136`,0.09539864661654135`,0.09479864661654136`,0.09129864661654136`},
				HalfHeightWidth->{5.`,6.`,4.`,2.`,2.`,3.`,4.`,2.5`,5.`,2.`,2.`,4.`,2.`,3.`},
				Area->{0.6159796992481203`,0.4281296992481202`,0.2173837593984962`,0.015094586466165395`,0.01719458646616539`,0.09458781954887213`,0.21273781954887214`,0.26184052631578947`,1.0608296992481203`,0.1831472932330827`,0.1924472932330827`,0.5645918796992482`,0.27764593984962405`,0.772587819548872`},
				PeakRangeStart->{234.`,249.`,264.`,914.`,918.`,922.`,931.`,940.`,947.`,962.`,966.`,977.`,986.`,989.`},
				PeakRangeEnd->{249.`,264.`,276.`,918.`,922.`,931.`,940.`,947.`,962.`,964.`,968.`,983.`,989.`,998.`},
				WidthRangeStart->{234.`,249.`,264.`,915.`,920.`,928.`,936.`,944.5`,957.`,962.`,966.`,977.`,986.`,990.`},
				WidthRangeEnd->{239.`,255.`,268.`,917.`,922.`,931.`,940.`,947.`,962.`,964.`,968.`,981.`,988.`,993.`},
				BaselineIntercept->{0.03520135338345865`,0.03520135338345865`,0.03520135338345865`,0.03520135338345865`,0.03520135338345865`,0.03520135338345865`,0.03520135338345865`,0.03520135338345865`,0.03520135338345865`,0.03520135338345865`,0.03520135338345865`,0.03520135338345865`,0.03520135338345865`,0.03520135338345865`},
				BaselineSlope->{0.`,0.`,0.`,0.`,0.`,0.`,0.`,0.`,0.`,0.`,0.`,0.`,0.`,0.`},
				Reference -> {Link[Object[Data, AbsorbanceSpectroscopy, "id:mnk9jO3qL4xZ"], AbsorbanceSpectrumPeaksSource]},
				ReferenceField -> AbsorbanceSpectrum
			},
			ResolvedOptions -> {Upload -> False, Baseline -> DomainConstant, Exclude -> {}, ReferenceField -> AbsorbanceSpectrum, Domain -> {{220., 1000.}}, AbsoluteThreshold -> {0.0270}, RelativeThreshold -> {0.00366}, WidthThreshold -> {0.}, ConsolidateWidth -> {0}, EdgeFraction -> {0}, SmoothingRadius -> {0}, AreaThreshold -> {0}},
			NonNullFields -> {BaselineFunction},
			NullFields -> {PeakSamples},
			Round -> 12
		]
	],

	Example[{Additional, "Input types","Western data:"},
		PlotObject[Object[Data, Western, "id:qdkmxz0A8xx1"],Peaks->AnalyzePeaks[Object[Data, Western, "id:qdkmxz0A8xx1"],SmoothingRadius->3,Upload->False]],
		ValidGraphicsP[]
	],
	Test["Western data:",
		stripAppendReplaceKeyHeads @ AnalyzePeaks[Object[Data, Western, "id:qdkmxz0A8xrV"], Upload -> False],
		Analysis`Private`validAnalysisPacketP[Object[Analysis, Peaks],
			{
				Position -> {34.2983, 208.0601, 222.0121, 234.569},
				Height -> {2084.811310805501`,216.93941080550098`,361.173310805501`,337.81721080550096`},
				HalfHeightWidth -> {0.963000000000001, 6.976100000000002, 2.7904000000000053, 5.580800000000011},
				Area -> {2130.2692259676032`,3525.133509409695`,4092.5380086783484`,6225.054772783869`},
				PeakRangeStart -> {32.785`,180.1559`,209.4553`,233.1738`},
				PeakRangeEnd -> {36.0868`,209.4553`,223.4073`,269.4492`},
				WidthRangeStart -> {33.748, 202.4792, 220.6169, 233.1738},
				WidthRangeEnd -> {34.711, 209.4553, 223.4073, 238.7546},
				BaselineIntercept -> {4.161289194499013`,4.161289194499013`,4.161289194499013`,4.161289194499013`},
				BaselineSlope -> {0., 0., 0., 0.},
				Reference -> {Link[Object[Data, Western, "id:qdkmxz0A8xrV"], MassSpectrumPeaksAnalyses]},
				ReferenceField -> MassSpectrum
			},
			ResolvedOptions -> {Upload -> False, Baseline -> DomainConstant, Exclude -> {}, ReferenceField -> MassSpectrum, Domain -> {{-57.4644`, 397.8082`}}, AbsoluteThreshold -> {19.4}, RelativeThreshold -> {42.2}, WidthThreshold -> {0.}, ConsolidateWidth -> {0}, EdgeFraction -> {0}, SmoothingRadius -> {0}, AreaThreshold -> {0}},
			NonNullFields -> {BaselineFunction},
			NullFields -> {PeakSamples},
			Round -> 12
		]
	],

	Example[{Additional, "Input types","FluorescenceSpectroscopy data:"},
		PlotObject[Object[Data, FluorescenceSpectroscopy, "id:n0k9mGzR9oo6"],Peaks->AnalyzePeaks[Object[Data, FluorescenceSpectroscopy, "id:n0k9mGzR9oo6"],Upload->False]],
		ValidGraphicsP[]
	],

	Test["FluorescenceSpectroscopy data:",
		stripAppendReplaceKeyHeads @ AnalyzePeaks[Object[Data, FluorescenceSpectroscopy, "id:n0k9mGzR9oo6"], Upload -> False],
		Analysis`Private`validAnalysisPacketP[Object[Analysis, Peaks],
			{
				Position -> {378.`,490.`,550.`},
				Height -> {82.80793749999984`,2731.0299375`,229.06693749999985`},
				HalfHeightWidth -> {19.`,37.`,2.`},
				Area -> {1977.2787499999952`,120818.58131249995`,1023.919062499998`},
				PeakRangeStart -> {367.`,403.`,535.`},
				PeakRangeEnd -> {403.`,534.`,550.`},
				WidthRangeStart -> {372.`,468.`,548.`},
				WidthRangeEnd -> {391.`,505.`,550.`},
				BaselineIntercept -> {199.81806250000014`,199.81806250000014`,199.81806250000014`},
				BaselineSlope -> {0.`,0.`,0.`},
				Reference -> {Link[Object[Data,FluorescenceSpectroscopy,"id:n0k9mGzR9oo6"],EmissionSpectrumPeaksAnalyses]},
				ReferenceField -> EmissionSpectrum
			},
			ResolvedOptions->{Upload->False,Baseline->DomainConstant,ReferenceField->EmissionSpectrum,SmoothingRadius->{3},Domain->{{350.`,550.`}},AbsoluteThreshold->{223.0`},RelativeThreshold->{55.3`},WidthThreshold->{0.`}},
			NonNullFields -> {},
			NullFields -> {},
			Round -> 12
		]
	],

	Example[{Additional, "Input types","CESDS data:"},
		PlotObject[
			Object[Data, CapillaryGelElectrophoresisSDS, "id:E8zoYvNMJpOX"],
			Peaks->AnalyzePeaks[Object[Data, CapillaryGelElectrophoresisSDS, "id:E8zoYvNMJpOX"],
				PeakLabels -> {"Internal Standard", "Target"}
			]
		],
		ValidGraphicsP[]
	],
	Test["Supports CESDS Data and sets parent peak to the first peak instead of the largest peak:",
		Analysis`Private`stripAppendReplaceKeyHeads @ AnalyzePeaks[Object[Data, CapillaryGelElectrophoresisSDS, "id:E8zoYvNMJpOX"], PeakLabels -> {"Internal Standard", "Target"}, Upload -> False],
		Analysis`Private`validAnalysisPacketP[Object[Analysis, Peaks],
			{
				Position -> {855., 1367.},
				Height -> {0.014735617446270544`,0.037161217446270545`},
				HalfHeightWidth -> {11.5, 21.5},
				Area -> {0.1635950012642225`,0.8613832847345133`},
				PeakRangeStart -> {838.5, 1358.},
				PeakRangeEnd -> {861.5, 1456.},
				WidthRangeStart -> {845.5, 1364.5},
				WidthRangeEnd -> {857.,1386.},
				BaselineIntercept -> {0.000016482553729456417`,0.000016482553729456417`},
				BaselineSlope -> {0., 0.},
				Reference -> {Link[Object[Data, CapillaryGelElectrophoresisSDS, "id:E8zoYvNMJpOX"],PeaksAnalyses]},
				ReferenceField -> ProcessedUVAbsorbanceData,
				PeakLabel -> {"Internal Standard","Target"},
				ParentPeak -> {"Internal Standard","Internal Standard"}
			},
			ResolvedOptions->{
				ReferenceField->ProcessedUVAbsorbanceData,
				PeakType->Generic,
				PeakLabels->{"Internal Standard","Target"},
				ParentPeaks->{"Internal Standard","Internal Standard"},
				RelativeLabeling->True,
				Domain->{{0.5, 2100.5}},
				AbsoluteThreshold->{0.0031},
				RelativeThreshold->{0.00149},
				WidthThreshold->{0.},
				AreaThreshold->{0.0976},
				EdgeFraction->{0},
				SmoothingRadius->{0},
				ConsolidateWidth->{0},
				ConsolidateHeight->{0},
				Baseline->DomainConstant,
				SkipTangentFieldCalculation->True
			},
			NullFields -> {
				Wavelength,Name,DataSliceDimension,DataSlice,SliceReductionFunction,SliceReferencePeaks,OperatingFrequency,Nucleus,DeuteratedSolvent,
				MaximumJSplitting,SplittingSpacingTolerance,SplittingRelativeIntegralTolerance,PeakGroupDomains,PeakIntegralNormalizationGroup,PeakGroupMultiplicity,
				TemplateAssignmentTolerance,RelativeLabeling,KnownSpecies,SplittingAssignments,BaselineFeatureWidth,BlankPeaks
			},
			Round -> 12
		]
	],
	Test["Supports CESDS Protocols:",
		AnalyzePeaks[Object[Protocol, CapillaryGelElectrophoresisSDS, "id:D8KAEvGMDdxm"]],
		{ObjectP[Object[Analysis,Peaks]]..}
	],

	Test["Supports FluorescenceSpectroscopy protocols:",
		AnalyzePeaks[Object[Protocol, FluorescenceSpectroscopy, "FluorescenceSpectroscopy Test Protocol for AnalyzePeaks"]],
		{ObjectP[Object[Analysis,Peaks]]},
		SetUp :> Module[{data1},
			$CreatedObjects = {};
			data1=CreateID[Object[Data, FluorescenceSpectroscopy]];
			Upload[{
				<|
					Object->data1,
					EmissionSpectrum->QuantityArray[Table[{x+300,0.25 Exp[-.01 (x-50)^2]},{x,Range[0,100,0.2]}],{Nanometer,RFU}],
					Well->"A1"
				|>,
				<|
					Type->Object[Protocol,FluorescenceSpectroscopy],
					Name->"FluorescenceSpectroscopy Test Protocol for AnalyzePeaks",
					Replace[Data]->Link[data1,Protocol]
				|>
			}]
		],
		TearDown :> (
			EraseObject[$CreatedObjects, Force -> True, Verbose -> False];
			Unset[$CreatedObjects]
		)
	],

	Test["Supports LuminescenceSpectroscopy data:",
		AnalyzePeaks[Object[Data, LuminescenceSpectroscopy, "LuminescenceSpectroscopy Test Data for AnalyzePeaks"]],
		ObjectP[Object[Analysis,Peaks]],
		SetUp :> (
			$CreatedObjects = {};
			Upload[
				<|
					Type->Object[Data,LuminescenceSpectroscopy],
					Name->"LuminescenceSpectroscopy Test Data for AnalyzePeaks",
					EmissionSpectrum->QuantityArray[Table[{x+300,0.25 Exp[-.01 (x-50)^2]},{x,Range[0,100,0.2]}],{Nanometer,RLU}],
					Well->"A1"
				|>
			]
		),
		TearDown :> (
			EraseObject[$CreatedObjects, Force -> True, Verbose -> False];
			Unset[$CreatedObjects]
		)
	],

	Test["Supports LuminescenceSpectroscopy protocols:",
		AnalyzePeaks[Object[Protocol, LuminescenceSpectroscopy, "LuminescenceSpectroscopy Test Protocol for AnalyzePeaks"]],
		{ObjectP[Object[Analysis,Peaks]]},
		SetUp :> Module[{data1},
			$CreatedObjects = {};
			data1=CreateID[Object[Data, LuminescenceSpectroscopy]];
			Upload[{
				<|
					Object->data1,
					EmissionSpectrum->QuantityArray[Table[{x+300,0.25 Exp[-.01 (x-50)^2]},{x,Range[0,100,0.2]}],{Nanometer,RLU}],
					Well->"A1"
				|>,
				<|
					Type->Object[Protocol,LuminescenceSpectroscopy],
					Name->"LuminescenceSpectroscopy Test Protocol for AnalyzePeaks",
					Replace[Data]->Link[data1,Protocol]
				|>
			}]
		],
		TearDown :> (
			EraseObject[$CreatedObjects, Force -> True, Verbose -> False];
			Unset[$CreatedObjects]
		)
	],

	Test["Supports MeltingCurve data:",
		RoundReals[#,3]&/@Download[
			AnalyzePeaks[Object[Data, MeltingCurve, "MeltingCurve Test Data for AnalyzePeaks"],
				ReferenceField->InitialIntensityDistribution,
				DataSetTransformationFunction->LogLinear
			],
			{Position,Area}
		],
		{{0.775, 1.31, 2.66}, {0.00434, 0.0262, 0.00268}},
		SetUp :> (
			$CreatedObjects = {};
			logLinearData=QuantityArray[{{0.0129989,0.},{0.0140472,0.},{0.01518,0.},{0.0164042,0.},{0.017727,0.},{0.0191566,0.},{0.0207015,0.},{0.0223709,0.},{0.0241749,0.},{0.0261245,0.},{0.0282312,0.},{0.0305079,0.},{0.0329681,0.},{0.0356268,0.},{0.0384999,0.},{0.0416046,0.},{0.0449597,0.},{0.0485854,0.},{0.0525035,0.},{0.0567375,0.},{0.061313,0.},{0.0662575,0.},{0.0716007,0.},{0.0773748,0.},{0.0836145,0.},{0.0903575,0.},{0.0976442,0.},{0.105518,0.},{0.114028,0.},{0.123223,0.},{0.13316,0.},{0.143899,0.},{0.155503,0.},{0.168044,0.},{0.181595,0.},{0.19624,0.},{0.212065,0.},{0.229167,0.},{0.247647,0.},{0.267618,0.},{0.2892,0.},{0.312522,0.},{0.337724,0.},{0.36496,0.},{0.394391,0.},{0.426196,0.},{0.460566,0.},{0.497707,0.},{0.537844,0.},{0.581217,0.},{0.628088,0.},{0.678739,0.},{0.733475,0.},{0.792624,0.},{0.856544,0.},{0.925618,0.},{1.00026,0.},{1.08093,0.},{1.1681,0.},{1.2623,0.},{1.36409,0.},{1.4741,0.},{1.59297,0.},{1.72143,0.},{1.86025,0.},{2.01027,0.},{2.17239,0.},{2.34757,0.},{2.53689,0.},{2.74147,0.},{2.96255,0.},{3.20146,0.},{3.45964,0.},{3.73863,0.},{4.04013,0.},{4.36593,0.00357118},{4.71802,0.00982435},{5.09849,0.0152065},{5.50965,0.0184816},{5.95397,0.0197395},{6.43411,0.0195829},{6.95298,0.0187324},{7.51369,0.0178507},{8.11961,0.0174682},{8.7744,0.017955},{9.482,0.0195164},{10.2467,0.0222034},{11.073,0.0259308},{11.9659,0.0305013},{12.9309,0.0356322},{13.9737,0.0409838},{15.1006,0.0461866},{16.3183,0.0508679},{17.6343,0.0546742},{19.0564,0.0572909},{20.5931,0.0584578},{22.2538,0.0579807},{24.0485,0.0557391},{25.9878,0.0516912},{28.0835,0.0458799},{30.3483,0.0384439},{32.7956,0.0296511},{35.4404,0.0199893},{38.2984,0.0103933},{41.3869,0.00271542},{44.7245,0.},{48.3312,0.},{52.2288,0.},{56.4407,0.},{60.9922,0.},{65.9108,0.},{71.226,0.},{76.9699,0.},{83.177,0.},{89.8847,0.},{97.1332,0.},{104.966,0.},{113.431,0.},{122.579,0.},{132.464,0.},{143.146,0.},{154.69,0.},{167.164,0.},{180.645,0.},{195.213,0.},{210.955,0.},{227.967,0.},{246.351,0.},{266.218,0.},{287.687,0.},{310.887,0.000445283},{335.957,0.00385106},{363.05,0.00800808},{392.327,0.0115279},{423.966,0.0137168},{458.156,0.0142341},{495.103,0.0129486},{535.029,0.00995059},{578.176,0.00572952},{624.802,0.00158973},{675.188,0.},{729.637,0.},{788.477,0.},{852.062,0.},{920.775,0.},{995.029,0.},{1075.27,0.},{1161.98,0.},{1255.69,0.},{1356.95,0.},{1466.38,0.},{1584.64,0.},{1712.43,0.},{1850.52,0.},{1999.75,0.},{2161.02,0.},{2335.29,0.},{2523.61,0.},{2727.13,0.},{2947.05,0.},{3184.71,0.},{3441.53,0.},{3719.07,0.},{4018.99,0.},{4343.09,0.},{4693.33,0.},{5071.81,0.},{5480.82,0.},{5922.81,0.},{6400.45,0.},{6916.6,0.},{7474.37,0.},{8077.13,0.},{8728.49,0.},{9432.39,0.},{10193.,0.},{11015.,0.},{11903.3,0.},{12863.2,0.},{13900.6,0.},{15021.6,0.},{16232.9,0.},{17542.,0.},{18956.7,0.},{20485.4,0.},{22137.4,0.},{23922.6,0.},{25851.8,0.},{27936.6,0.},{30189.5,0.},{32624.,0.},{35254.9,0.},{38098.,0.},{41170.4,0.},{44490.5,0.},{48078.3,0.},{51955.5,0.},{56145.3,0.},{60673.1,0.},{65565.9,0.},{70853.4,0.},{76567.2,0.},{82741.8,0.},{89414.4,0.},{96625.,0.},{104417.,0.},{112838.,0.},{121937.,0.},{131771.,0.},{142397.,0.},{153880.,0.},{166290.,0.},{179700.,0.},{194191.,0.},{209852.,0.},{226775.,0.},{245062.,0.},{264825.,0.},{286181.,0.},{309260.,0.},{334199.,0.},{361150.,0.},{390275.,0.},{421748.,0.},{455759.,0.},{492512.,0.},{532230.,0.},{575151.,0.},{621533.,0.},{671655.,0.},{725819.,0.},{784351.,0.},{847604.,0.},{915957.,0.},{989823.,0.},{1.06965*10^6,0.},{1.1559*10^6,0.},{1.24912*10^6,0.},{1.34985*10^6,0.},{1.45871*10^6,0.},{1.57634*10^6,0.},{1.70347*10^6,0.},{1.84084*10^6,0.},{1.98929*10^6,0.},{2.14971*10^6,0.},{2.32307*10^6,0.},{2.51041*10^6,0.},{2.71286*10^6,0.},{2.93163*10^6,0.},{3.16805*10^6,0.},{3.42353*10^6,0.},{3.69961*10^6,0.},{3.99796*10^6,0.},{4.32037*10^6,0.},{4.66877*10^6,0.},{5.04528*10^6,0.}},{Nanometer,ArbitraryUnit}];
			Upload[
				<|
					Type->Object[Data,MeltingCurve],
					Name->"MeltingCurve Test Data for AnalyzePeaks",
					InitialIntensityDistribution->logLinearData
				|>
			]
		),
		TearDown :> (
			EraseObject[$CreatedObjects, Force -> True, Verbose -> False];
			Unset[$CreatedObjects]
		)
	],
    
    Test["Supports AgaroseGelElectrophoresis data with negative sampleElectropherogramData:",
        Download[
            AnalyzePeaks[
                Object[Data, AgaroseGelElectrophoresis, "AgaroseGelElectrophoresis Test Data for AnalyzePeaks"<>$SessionUUID]
            ],
            {Position,Area}
        ],
        {{2.29273386947461`, 5.49721500096489`}, {0.4307082251871538`, 0.291967635281463`}},
        EquivalenceFunction -> RoundMatchQ[10,Force->True],
        SetUp :> (
            $CreatedObjects = {};
            Module[{sampleElectropherogramData},
                sampleElectropherogramData=QuantityArray[
                    {
                        {-2.92913423631004, 0.330195027499277}, {-1.88703492791978, 0.41773644606198906`}, {-0.844935619529525, 0.313742106563199},
                        {0.19716368886067398`, 0.207730038139712}, {1.2409914776889899`, 0.31793295907579}, {2.29273386947461, 0.526387221638745},
                        {3.3525649085713294`, 0.463990768045525}, {4.42066378006044, 0.4190817988198591}, {5.49721500096489, 0.482202626942377},
                        {6.58240862006086, 0.367860701750125}, {7.676440426743319, 0.325849080535597}
                    },
                    {IndependentUnit["Basepairs"], IndependentUnit["Rfus"]}
                ];
                Upload[
                    <|
                        Type->Object[Data,AgaroseGelElectrophoresis],
                        Name->"AgaroseGelElectrophoresis Test Data for AnalyzePeaks"<>$SessionUUID,
                        SampleElectropherogram->sampleElectropherogramData
                    |>
                ]
            ]
        ),
        TearDown :> (
            EraseObject[$CreatedObjects, Force -> True, Verbose -> False];
            Unset[$CreatedObjects]
        )
    ],

	Example[{Additional,"Input types","Raw data as a QuantityArray:"},
		AnalyzePeaks[QuantityArray[xyPts, {Second, Meter}]][Position],
		{_?NumericQ..},
		EquivalenceFunction -> RoundMatchQ[12,Force->True],
		SetUp :> ($CreatedObjects = {};xyPts={{-60.4703`,1.587`},{-59.8914`,-2.9288`},{-59.3126`,-2.8543`},{-58.7337`,-3.6064`},{-58.1548`,-3.5293`},{-57.5759`,-7.4673`},{-56.9971`,0.8248`},{-56.4182`,23.293`},{-55.8393`,0.3193`},{-55.2604`,-13.9593`},{-54.6816`,-12.3607`},{-54.1027`,-3.2422`},{-53.5238`,-4.832`},{-52.9449`,-8.3469`},{-52.3661`,-14.6887`},{-51.7872`,-17.8354`},{-51.2083`,-11.4492`},{-50.6294`,-13.8761`},{-50.0505`,-7.6376`},{-49.4717`,-20.6722`},{-48.8928`,-6.1023`},{-48.3139`,-3.0062`},{-47.735`,6.8016`},{-47.1562`,23.4155`},{-46.5773`,0.9423`},{-45.9984`,19.5976`},{-45.4195`,0.8777`},{-44.8407`,2.3731`},{-44.2618`,16.3106`},{-43.6829`,4.7338`},{-43.104`,7.0143`},{-42.5252`,-0.4604`},{-41.9463`,16.6188`},{-41.3674`,-7.5774`},{-40.7885`,4.786`},{-40.2096`,9.1225`},{-39.6308`,6.0894`},{-39.0519`,8.1521`},{-38.473`,0.7713`},{-37.8941`,24.0671`},{-37.3153`,-5.3851`},{-36.7364`,7.6461`},{-36.1575`,6.2401`},{-35.5786`,5.5707`},{-34.9998`,-3.8426`},{-34.4209`,-8.1403`},{-33.842`,4.7625`},{-33.2631`,-11.033`},{-32.6843`,-10.0288`},{-32.1054`,-9.4915`},{-31.5265`,6.0948`},{-30.9476`,22.7781`},{-30.3687`,-18.0986`},{-29.7899`,-5.7582`},{-29.211`,-7.9967`},{-28.6321`,17.574`},{-28.0532`,9.6356`},{-27.4744`,-12.3885`},{-26.8955`,-9.992`},{-26.3166`,-8.0265`},{-25.7377`,-6.8299`},{-25.1589`,-8.0575`},{-24.58`,9.9059`},{-24.0011`,4.6671`},{-23.4222`,29.4874`},{-22.8434`,-5.0773`},{-22.2645`,3.1678`},{-21.6856`,-3.0654`},{-21.1067`,-4.1394`},{-20.5278`,-12.4577`},{-19.949`,-7.0589`},{-19.3701`,-10.7888`},{-18.7912`,4.4065`},{-18.2123`,5.4024`},{-17.6335`,6.2734`},{-17.0546`,-4.4128`},{-16.4757`,9.1531`},{-15.8968`,-17.4617`},{-15.318`,-5.7665`},{-14.7391`,-8.6346`},{-14.1602`,-1.6776`},{-13.5813`,5.549`},{-13.0025`,-1.2764`},{-12.4236`,1.6277`},{-11.8447`,-6.2084`},{-11.2658`,5.6592`},{-10.6869`,4.7049`},{-10.1081`,8.8459`},{-9.5292`,-5.952`},{-8.9503`,14.4889`},{-8.3714`,23.2175`},{-7.7926`,21.225`},{-7.2137`,15.7654`},{-6.6348`,-2.578`},{-6.0559`,8.965`},{-5.4771`,-9.7285`},{-4.8982`,-2.9533`},{-4.3193`,75.6051`},{-3.7404`,16.4113`},{-3.1616`,14.9865`},{-2.5827`,-11.3331`},{-2.0038`,-2.0928`},{-1.4249`,-0.9202`},{-0.846`,0.2394`},{-0.2672`,6.0783`},{0.3117`,12.7922`},{0.8906`,149.8234`},{1.4695`,137.478`},{2.0483`,73.5309`},{2.6272`,20.1371`},{3.2061`,13.3703`},{3.785`,-1.6624`},{4.3638`,-5.3309`},{4.9427`,6.2866`},{5.5216`,-4.5244`},{6.1005`,-15.892`},{6.6793`,-17.247`},{7.2582`,-3.521`},{7.8371`,47.9696`},{8.416`,48.6575`},{8.9949`,143.0855`},{9.5737`,262.487`},{10.1526`,433.1576`},{10.7315`,655.7522`},{11.3104`,789.8354`},{11.8892`,812.2174`},{12.4681`,768.5621`},{13.047`,657.1636`},{13.6259`,473.0125`},{14.2047`,347.134`},{14.7836`,228.5908`},{15.3625`,146.17`},{15.9414`,77.1921`},{16.5202`,93.6922`},{17.0991`,41.6889`},{17.678`,34.9402`},{18.2569`,24.9377`},{18.8358`,6.303`},{19.4146`,7.6878`},{19.9935`,-0.4913`},{20.5724`,4.309`},{21.1513`,7.6213`},{21.7301`,14.0376`},{22.309`,10.5065`},{22.8879`,-5.2162`},{23.4668`,3.6696`},{24.0456`,-1.3919`},{24.6245`,13.7266`},{25.2034`,26.7292`},{25.7823`,-0.9272`},{26.3611`,-5.163`},{26.94`,-2.0984`},{27.5189`,-4.7001`},{28.0978`,-15.0261`},{28.6767`,-6.6703`},{29.2555`,-4.7324`},{29.8344`,-9.1476`},{30.4133`,-11.197`},{30.9922`,-18.8589`},{31.571`,-18.5209`},{32.1499`,-7.7127`},{32.7288`,-17.283`},{33.3077`,10.2485`},{33.8865`,0.7054`},{34.4654`,17.6433`},{35.0443`,26.3025`},{35.6232`,-4.1029`},{36.202`,9.6538`},{36.7809`,50.4171`},{37.3598`,71.2644`},{37.9387`,193.1155`},{38.5176`,510.2275`},{39.0964`,954.8649`},{39.6753`,1316.5008`},{40.5055`,1341.1692`},{41.6568`,1026.4138`},{42.8081`,549.0985`},{43.9595`,223.7178`},{45.1108`,34.8255`},{46.2621`,-25.6132`},{47.4134`,-69.3664`},{48.5647`,-100.2309`},{49.716`,-90.0365`},{50.8673`,-110.048`},{52.0186`,-89.8928`},{53.1699`,-70.6448`},{54.3212`,-66.6014`},{55.4725`,-7.3808`},{56.6238`,24.2758`},{57.7751`,44.6924`},{58.9264`,89.7889`},{60.0777`,151.1335`},{61.229`,290.8439`},{62.3803`,536.4023`},{63.5317`,956.7083`},{64.683`,1382.7361`},{65.8685`,1552.8259`},{68.4379`,1408.1517`},{71.2857`,1056.4687`},{74.1335`,772.6727`},{76.9813`,502.9082`},{79.8291`,456.0177`},{82.6769`,597.0413`},{85.5247`,933.6729`},{88.3726`,1140.7761`},{91.3774`,1132.9723`},{94.5917`,934.8548`},{97.8059`,695.1553`},{101.0202`,506.9661`},{104.2344`,526.7152`},{107.4487`,886.2472`},{110.6629`,1485.9208`},{113.8772`,1962.2649`},{117.2542`,1986.5373`},{120.9477`,1602.6262`},{124.6412`,1052.4658`},{128.3347`,520.8706`},{132.0283`,237.5131`},{135.7218`,179.6594`},{139.4153`,194.352`},{143.1088`,188.4899`},{146.8023`,193.5516`},{150.4959`,149.3122`},{154.1894`,68.9806`},{157.8829`,26.3029`},{161.5764`,32.2454`},{165.2699`,82.5101`},{168.9635`,171.1333`},{172.657`,342.7152`},{176.3505`,529.9803`},{180.044`,653.1731`},{183.7376`,523.2293`},{187.4311`,361.8707`},{191.1246`,167.4945`},{194.8181`,61.7772`},{198.5116`,60.4075`},{202.2052`,35.8679`},{205.8987`,44.0184`},{209.5922`,65.031`},{213.2857`,95.5418`},{216.9792`,120.0814`},{220.6728`,175.8616`},{224.3663`,244.9024`},{228.0598`,308.0053`},{231.7533`,342.9063`},{235.4469`,388.0488`},{239.1404`,402.7888`},{242.8339`,364.4319`},{246.5274`,337.8086`},{250.2209`,229.8374`},{253.9145`,156.6267`},{257.608`,33.2384`},{261.3015`,-62.4133`},{264.995`,-107.0692`},{268.6885`,-145.7654`},{272.3821`,-167.8836`},{276.0756`,-174.4012`},{279.7691`,-160.7985`},{283.4626`,-94.334`},{287.1562`,-132.8897`},{290.8497`,-88.0442`},{294.5432`,-24.0263`},{298.2367`,17.0242`},{301.9302`,39.8069`},{305.6238`,53.6636`},{309.3173`,58.9873`},{313.0108`,23.7347`},{316.7043`,-15.399`},{320.3978`,-13.7185`},{324.0914`,-29.1139`},{327.7849`,-37.6242`},{331.4784`,-40.0249`},{335.1719`,-26.3684`},{338.8654`,-21.9221`},{342.559`,-23.7979`},{346.2525`,-14.4608`},{349.946`,-0.908`},{353.6395`,-8.8529`},{357.3331`,-8.4405`}}),
		TearDown :> (
			EraseObject[$CreatedObjects, Force -> True, Verbose -> False];
			Unset[$CreatedObjects]
		)
	],

	Example[{Additional,"Input types", "TLC data:"},
		AnalyzePeaks[Object[Data, TLC, "id:Vrbp1jG806vm"]][Position],
		{_?NumericQ..},
		EquivalenceFunction -> RoundMatchQ[1,Force->True]
	],

	Example[{Additional, "Zones","Use different threshold options on different parts of the data by specifying a list of domains and list of parameters:"},
		AnalyzePeaks[xyPts, Domain -> {50;;150,200;;300}, AbsoluteThreshold -> {500,200}][Position],
		{65.8685`,88.3726`,117.2542`,239.1404`},
		EquivalenceFunction -> RoundMatchQ[12,Force->True],
		SetUp :> ($CreatedObjects = {};xyPts={{-60.4703`,1.587`},{-59.8914`,-2.9288`},{-59.3126`,-2.8543`},{-58.7337`,-3.6064`},{-58.1548`,-3.5293`},{-57.5759`,-7.4673`},{-56.9971`,0.8248`},{-56.4182`,23.293`},{-55.8393`,0.3193`},{-55.2604`,-13.9593`},{-54.6816`,-12.3607`},{-54.1027`,-3.2422`},{-53.5238`,-4.832`},{-52.9449`,-8.3469`},{-52.3661`,-14.6887`},{-51.7872`,-17.8354`},{-51.2083`,-11.4492`},{-50.6294`,-13.8761`},{-50.0505`,-7.6376`},{-49.4717`,-20.6722`},{-48.8928`,-6.1023`},{-48.3139`,-3.0062`},{-47.735`,6.8016`},{-47.1562`,23.4155`},{-46.5773`,0.9423`},{-45.9984`,19.5976`},{-45.4195`,0.8777`},{-44.8407`,2.3731`},{-44.2618`,16.3106`},{-43.6829`,4.7338`},{-43.104`,7.0143`},{-42.5252`,-0.4604`},{-41.9463`,16.6188`},{-41.3674`,-7.5774`},{-40.7885`,4.786`},{-40.2096`,9.1225`},{-39.6308`,6.0894`},{-39.0519`,8.1521`},{-38.473`,0.7713`},{-37.8941`,24.0671`},{-37.3153`,-5.3851`},{-36.7364`,7.6461`},{-36.1575`,6.2401`},{-35.5786`,5.5707`},{-34.9998`,-3.8426`},{-34.4209`,-8.1403`},{-33.842`,4.7625`},{-33.2631`,-11.033`},{-32.6843`,-10.0288`},{-32.1054`,-9.4915`},{-31.5265`,6.0948`},{-30.9476`,22.7781`},{-30.3687`,-18.0986`},{-29.7899`,-5.7582`},{-29.211`,-7.9967`},{-28.6321`,17.574`},{-28.0532`,9.6356`},{-27.4744`,-12.3885`},{-26.8955`,-9.992`},{-26.3166`,-8.0265`},{-25.7377`,-6.8299`},{-25.1589`,-8.0575`},{-24.58`,9.9059`},{-24.0011`,4.6671`},{-23.4222`,29.4874`},{-22.8434`,-5.0773`},{-22.2645`,3.1678`},{-21.6856`,-3.0654`},{-21.1067`,-4.1394`},{-20.5278`,-12.4577`},{-19.949`,-7.0589`},{-19.3701`,-10.7888`},{-18.7912`,4.4065`},{-18.2123`,5.4024`},{-17.6335`,6.2734`},{-17.0546`,-4.4128`},{-16.4757`,9.1531`},{-15.8968`,-17.4617`},{-15.318`,-5.7665`},{-14.7391`,-8.6346`},{-14.1602`,-1.6776`},{-13.5813`,5.549`},{-13.0025`,-1.2764`},{-12.4236`,1.6277`},{-11.8447`,-6.2084`},{-11.2658`,5.6592`},{-10.6869`,4.7049`},{-10.1081`,8.8459`},{-9.5292`,-5.952`},{-8.9503`,14.4889`},{-8.3714`,23.2175`},{-7.7926`,21.225`},{-7.2137`,15.7654`},{-6.6348`,-2.578`},{-6.0559`,8.965`},{-5.4771`,-9.7285`},{-4.8982`,-2.9533`},{-4.3193`,75.6051`},{-3.7404`,16.4113`},{-3.1616`,14.9865`},{-2.5827`,-11.3331`},{-2.0038`,-2.0928`},{-1.4249`,-0.9202`},{-0.846`,0.2394`},{-0.2672`,6.0783`},{0.3117`,12.7922`},{0.8906`,149.8234`},{1.4695`,137.478`},{2.0483`,73.5309`},{2.6272`,20.1371`},{3.2061`,13.3703`},{3.785`,-1.6624`},{4.3638`,-5.3309`},{4.9427`,6.2866`},{5.5216`,-4.5244`},{6.1005`,-15.892`},{6.6793`,-17.247`},{7.2582`,-3.521`},{7.8371`,47.9696`},{8.416`,48.6575`},{8.9949`,143.0855`},{9.5737`,262.487`},{10.1526`,433.1576`},{10.7315`,655.7522`},{11.3104`,789.8354`},{11.8892`,812.2174`},{12.4681`,768.5621`},{13.047`,657.1636`},{13.6259`,473.0125`},{14.2047`,347.134`},{14.7836`,228.5908`},{15.3625`,146.17`},{15.9414`,77.1921`},{16.5202`,93.6922`},{17.0991`,41.6889`},{17.678`,34.9402`},{18.2569`,24.9377`},{18.8358`,6.303`},{19.4146`,7.6878`},{19.9935`,-0.4913`},{20.5724`,4.309`},{21.1513`,7.6213`},{21.7301`,14.0376`},{22.309`,10.5065`},{22.8879`,-5.2162`},{23.4668`,3.6696`},{24.0456`,-1.3919`},{24.6245`,13.7266`},{25.2034`,26.7292`},{25.7823`,-0.9272`},{26.3611`,-5.163`},{26.94`,-2.0984`},{27.5189`,-4.7001`},{28.0978`,-15.0261`},{28.6767`,-6.6703`},{29.2555`,-4.7324`},{29.8344`,-9.1476`},{30.4133`,-11.197`},{30.9922`,-18.8589`},{31.571`,-18.5209`},{32.1499`,-7.7127`},{32.7288`,-17.283`},{33.3077`,10.2485`},{33.8865`,0.7054`},{34.4654`,17.6433`},{35.0443`,26.3025`},{35.6232`,-4.1029`},{36.202`,9.6538`},{36.7809`,50.4171`},{37.3598`,71.2644`},{37.9387`,193.1155`},{38.5176`,510.2275`},{39.0964`,954.8649`},{39.6753`,1316.5008`},{40.5055`,1341.1692`},{41.6568`,1026.4138`},{42.8081`,549.0985`},{43.9595`,223.7178`},{45.1108`,34.8255`},{46.2621`,-25.6132`},{47.4134`,-69.3664`},{48.5647`,-100.2309`},{49.716`,-90.0365`},{50.8673`,-110.048`},{52.0186`,-89.8928`},{53.1699`,-70.6448`},{54.3212`,-66.6014`},{55.4725`,-7.3808`},{56.6238`,24.2758`},{57.7751`,44.6924`},{58.9264`,89.7889`},{60.0777`,151.1335`},{61.229`,290.8439`},{62.3803`,536.4023`},{63.5317`,956.7083`},{64.683`,1382.7361`},{65.8685`,1552.8259`},{68.4379`,1408.1517`},{71.2857`,1056.4687`},{74.1335`,772.6727`},{76.9813`,502.9082`},{79.8291`,456.0177`},{82.6769`,597.0413`},{85.5247`,933.6729`},{88.3726`,1140.7761`},{91.3774`,1132.9723`},{94.5917`,934.8548`},{97.8059`,695.1553`},{101.0202`,506.9661`},{104.2344`,526.7152`},{107.4487`,886.2472`},{110.6629`,1485.9208`},{113.8772`,1962.2649`},{117.2542`,1986.5373`},{120.9477`,1602.6262`},{124.6412`,1052.4658`},{128.3347`,520.8706`},{132.0283`,237.5131`},{135.7218`,179.6594`},{139.4153`,194.352`},{143.1088`,188.4899`},{146.8023`,193.5516`},{150.4959`,149.3122`},{154.1894`,68.9806`},{157.8829`,26.3029`},{161.5764`,32.2454`},{165.2699`,82.5101`},{168.9635`,171.1333`},{172.657`,342.7152`},{176.3505`,529.9803`},{180.044`,653.1731`},{183.7376`,523.2293`},{187.4311`,361.8707`},{191.1246`,167.4945`},{194.8181`,61.7772`},{198.5116`,60.4075`},{202.2052`,35.8679`},{205.8987`,44.0184`},{209.5922`,65.031`},{213.2857`,95.5418`},{216.9792`,120.0814`},{220.6728`,175.8616`},{224.3663`,244.9024`},{228.0598`,308.0053`},{231.7533`,342.9063`},{235.4469`,388.0488`},{239.1404`,402.7888`},{242.8339`,364.4319`},{246.5274`,337.8086`},{250.2209`,229.8374`},{253.9145`,156.6267`},{257.608`,33.2384`},{261.3015`,-62.4133`},{264.995`,-107.0692`},{268.6885`,-145.7654`},{272.3821`,-167.8836`},{276.0756`,-174.4012`},{279.7691`,-160.7985`},{283.4626`,-94.334`},{287.1562`,-132.8897`},{290.8497`,-88.0442`},{294.5432`,-24.0263`},{298.2367`,17.0242`},{301.9302`,39.8069`},{305.6238`,53.6636`},{309.3173`,58.9873`},{313.0108`,23.7347`},{316.7043`,-15.399`},{320.3978`,-13.7185`},{324.0914`,-29.1139`},{327.7849`,-37.6242`},{331.4784`,-40.0249`},{335.1719`,-26.3684`},{338.8654`,-21.9221`},{342.559`,-23.7979`},{346.2525`,-14.4608`},{349.946`,-0.908`},{353.6395`,-8.8529`},{357.3331`,-8.4405`}}),
		TearDown :> (
			EraseObject[$CreatedObjects, Force -> True, Verbose -> False];
			Unset[$CreatedObjects]
		)
	],

	Test["Use different threshold options on different parts of the data by specifying a list of domains and list of parameters:",
		stripAppendReplaceKeyHeads @ AnalyzePeaks[xyPts, Upload -> False, Domain -> {List[50,150],List[200,300]}, AbsoluteThreshold -> {500,200}],
		validAnalysisPacketP[Object[Analysis, Peaks],
			{
			},
			ResolvedOptions->{Upload->False,Domain->{{50,150},{200,300}},AbsoluteThreshold->{500,200},Output->Result,Exclude->{},
				Baseline->DomainConstant,ReferenceField->Null,RelativeThreshold -> {41.9`, 11.5`},
				WidthThreshold -> {0.`, 0.`},ConsolidateWidth->{0,0},ConsolidateHeight->{0,0},EdgeFraction->{0,0},
				SmoothingRadius->{0,0},AreaThreshold->{0,0}},
			NonNullFields -> {BaselineFunction},
			NullFields -> { PeakSamples,Reference,ReferenceField},
			Round -> 8
		],
		SetUp :> (xyPts={{-60.4703`,1.587`},{-59.8914`,-2.9288`},{-59.3126`,-2.8543`},{-58.7337`,-3.6064`},{-58.1548`,-3.5293`},{-57.5759`,-7.4673`},{-56.9971`,0.8248`},{-56.4182`,23.293`},{-55.8393`,0.3193`},{-55.2604`,-13.9593`},{-54.6816`,-12.3607`},{-54.1027`,-3.2422`},{-53.5238`,-4.832`},{-52.9449`,-8.3469`},{-52.3661`,-14.6887`},{-51.7872`,-17.8354`},{-51.2083`,-11.4492`},{-50.6294`,-13.8761`},{-50.0505`,-7.6376`},{-49.4717`,-20.6722`},{-48.8928`,-6.1023`},{-48.3139`,-3.0062`},{-47.735`,6.8016`},{-47.1562`,23.4155`},{-46.5773`,0.9423`},{-45.9984`,19.5976`},{-45.4195`,0.8777`},{-44.8407`,2.3731`},{-44.2618`,16.3106`},{-43.6829`,4.7338`},{-43.104`,7.0143`},{-42.5252`,-0.4604`},{-41.9463`,16.6188`},{-41.3674`,-7.5774`},{-40.7885`,4.786`},{-40.2096`,9.1225`},{-39.6308`,6.0894`},{-39.0519`,8.1521`},{-38.473`,0.7713`},{-37.8941`,24.0671`},{-37.3153`,-5.3851`},{-36.7364`,7.6461`},{-36.1575`,6.2401`},{-35.5786`,5.5707`},{-34.9998`,-3.8426`},{-34.4209`,-8.1403`},{-33.842`,4.7625`},{-33.2631`,-11.033`},{-32.6843`,-10.0288`},{-32.1054`,-9.4915`},{-31.5265`,6.0948`},{-30.9476`,22.7781`},{-30.3687`,-18.0986`},{-29.7899`,-5.7582`},{-29.211`,-7.9967`},{-28.6321`,17.574`},{-28.0532`,9.6356`},{-27.4744`,-12.3885`},{-26.8955`,-9.992`},{-26.3166`,-8.0265`},{-25.7377`,-6.8299`},{-25.1589`,-8.0575`},{-24.58`,9.9059`},{-24.0011`,4.6671`},{-23.4222`,29.4874`},{-22.8434`,-5.0773`},{-22.2645`,3.1678`},{-21.6856`,-3.0654`},{-21.1067`,-4.1394`},{-20.5278`,-12.4577`},{-19.949`,-7.0589`},{-19.3701`,-10.7888`},{-18.7912`,4.4065`},{-18.2123`,5.4024`},{-17.6335`,6.2734`},{-17.0546`,-4.4128`},{-16.4757`,9.1531`},{-15.8968`,-17.4617`},{-15.318`,-5.7665`},{-14.7391`,-8.6346`},{-14.1602`,-1.6776`},{-13.5813`,5.549`},{-13.0025`,-1.2764`},{-12.4236`,1.6277`},{-11.8447`,-6.2084`},{-11.2658`,5.6592`},{-10.6869`,4.7049`},{-10.1081`,8.8459`},{-9.5292`,-5.952`},{-8.9503`,14.4889`},{-8.3714`,23.2175`},{-7.7926`,21.225`},{-7.2137`,15.7654`},{-6.6348`,-2.578`},{-6.0559`,8.965`},{-5.4771`,-9.7285`},{-4.8982`,-2.9533`},{-4.3193`,75.6051`},{-3.7404`,16.4113`},{-3.1616`,14.9865`},{-2.5827`,-11.3331`},{-2.0038`,-2.0928`},{-1.4249`,-0.9202`},{-0.846`,0.2394`},{-0.2672`,6.0783`},{0.3117`,12.7922`},{0.8906`,149.8234`},{1.4695`,137.478`},{2.0483`,73.5309`},{2.6272`,20.1371`},{3.2061`,13.3703`},{3.785`,-1.6624`},{4.3638`,-5.3309`},{4.9427`,6.2866`},{5.5216`,-4.5244`},{6.1005`,-15.892`},{6.6793`,-17.247`},{7.2582`,-3.521`},{7.8371`,47.9696`},{8.416`,48.6575`},{8.9949`,143.0855`},{9.5737`,262.487`},{10.1526`,433.1576`},{10.7315`,655.7522`},{11.3104`,789.8354`},{11.8892`,812.2174`},{12.4681`,768.5621`},{13.047`,657.1636`},{13.6259`,473.0125`},{14.2047`,347.134`},{14.7836`,228.5908`},{15.3625`,146.17`},{15.9414`,77.1921`},{16.5202`,93.6922`},{17.0991`,41.6889`},{17.678`,34.9402`},{18.2569`,24.9377`},{18.8358`,6.303`},{19.4146`,7.6878`},{19.9935`,-0.4913`},{20.5724`,4.309`},{21.1513`,7.6213`},{21.7301`,14.0376`},{22.309`,10.5065`},{22.8879`,-5.2162`},{23.4668`,3.6696`},{24.0456`,-1.3919`},{24.6245`,13.7266`},{25.2034`,26.7292`},{25.7823`,-0.9272`},{26.3611`,-5.163`},{26.94`,-2.0984`},{27.5189`,-4.7001`},{28.0978`,-15.0261`},{28.6767`,-6.6703`},{29.2555`,-4.7324`},{29.8344`,-9.1476`},{30.4133`,-11.197`},{30.9922`,-18.8589`},{31.571`,-18.5209`},{32.1499`,-7.7127`},{32.7288`,-17.283`},{33.3077`,10.2485`},{33.8865`,0.7054`},{34.4654`,17.6433`},{35.0443`,26.3025`},{35.6232`,-4.1029`},{36.202`,9.6538`},{36.7809`,50.4171`},{37.3598`,71.2644`},{37.9387`,193.1155`},{38.5176`,510.2275`},{39.0964`,954.8649`},{39.6753`,1316.5008`},{40.5055`,1341.1692`},{41.6568`,1026.4138`},{42.8081`,549.0985`},{43.9595`,223.7178`},{45.1108`,34.8255`},{46.2621`,-25.6132`},{47.4134`,-69.3664`},{48.5647`,-100.2309`},{49.716`,-90.0365`},{50.8673`,-110.048`},{52.0186`,-89.8928`},{53.1699`,-70.6448`},{54.3212`,-66.6014`},{55.4725`,-7.3808`},{56.6238`,24.2758`},{57.7751`,44.6924`},{58.9264`,89.7889`},{60.0777`,151.1335`},{61.229`,290.8439`},{62.3803`,536.4023`},{63.5317`,956.7083`},{64.683`,1382.7361`},{65.8685`,1552.8259`},{68.4379`,1408.1517`},{71.2857`,1056.4687`},{74.1335`,772.6727`},{76.9813`,502.9082`},{79.8291`,456.0177`},{82.6769`,597.0413`},{85.5247`,933.6729`},{88.3726`,1140.7761`},{91.3774`,1132.9723`},{94.5917`,934.8548`},{97.8059`,695.1553`},{101.0202`,506.9661`},{104.2344`,526.7152`},{107.4487`,886.2472`},{110.6629`,1485.9208`},{113.8772`,1962.2649`},{117.2542`,1986.5373`},{120.9477`,1602.6262`},{124.6412`,1052.4658`},{128.3347`,520.8706`},{132.0283`,237.5131`},{135.7218`,179.6594`},{139.4153`,194.352`},{143.1088`,188.4899`},{146.8023`,193.5516`},{150.4959`,149.3122`},{154.1894`,68.9806`},{157.8829`,26.3029`},{161.5764`,32.2454`},{165.2699`,82.5101`},{168.9635`,171.1333`},{172.657`,342.7152`},{176.3505`,529.9803`},{180.044`,653.1731`},{183.7376`,523.2293`},{187.4311`,361.8707`},{191.1246`,167.4945`},{194.8181`,61.7772`},{198.5116`,60.4075`},{202.2052`,35.8679`},{205.8987`,44.0184`},{209.5922`,65.031`},{213.2857`,95.5418`},{216.9792`,120.0814`},{220.6728`,175.8616`},{224.3663`,244.9024`},{228.0598`,308.0053`},{231.7533`,342.9063`},{235.4469`,388.0488`},{239.1404`,402.7888`},{242.8339`,364.4319`},{246.5274`,337.8086`},{250.2209`,229.8374`},{253.9145`,156.6267`},{257.608`,33.2384`},{261.3015`,-62.4133`},{264.995`,-107.0692`},{268.6885`,-145.7654`},{272.3821`,-167.8836`},{276.0756`,-174.4012`},{279.7691`,-160.7985`},{283.4626`,-94.334`},{287.1562`,-132.8897`},{290.8497`,-88.0442`},{294.5432`,-24.0263`},{298.2367`,17.0242`},{301.9302`,39.8069`},{305.6238`,53.6636`},{309.3173`,58.9873`},{313.0108`,23.7347`},{316.7043`,-15.399`},{320.3978`,-13.7185`},{324.0914`,-29.1139`},{327.7849`,-37.6242`},{331.4784`,-40.0249`},{335.1719`,-26.3684`},{338.8654`,-21.9221`},{342.559`,-23.7979`},{346.2525`,-14.4608`},{349.946`,-0.908`},{353.6395`,-8.8529`},{357.3331`,-8.4405`}})
	],

	Test["Use Span to specify Domain:",
		stripAppendReplaceKeyHeads @ AnalyzePeaks[xyPts, Upload -> False, Domain -> {50;;150,200;;300}, AbsoluteThreshold -> {500,200}],
		validAnalysisPacketP[Object[Analysis, Peaks],
			{
			},
			ResolvedOptions->{Upload->False,Domain->{{50,150},{200,300}},AbsoluteThreshold->{500,200},Output->Result,Exclude->{},
				Baseline->DomainConstant,ReferenceField->Null,RelativeThreshold -> {41.9`, 11.5`},
				WidthThreshold -> {0.`, 0.`},ConsolidateWidth->{0,0},ConsolidateHeight->{0,0},EdgeFraction->{0,0},
				SmoothingRadius->{0,0},AreaThreshold->{0,0}},
			NonNullFields -> {BaselineFunction},
			NullFields -> { PeakSamples,Reference,ReferenceField},
			Round -> 8
		],
		SetUp :> (xyPts={{-60.4703`,1.587`},{-59.8914`,-2.9288`},{-59.3126`,-2.8543`},{-58.7337`,-3.6064`},{-58.1548`,-3.5293`},{-57.5759`,-7.4673`},{-56.9971`,0.8248`},{-56.4182`,23.293`},{-55.8393`,0.3193`},{-55.2604`,-13.9593`},{-54.6816`,-12.3607`},{-54.1027`,-3.2422`},{-53.5238`,-4.832`},{-52.9449`,-8.3469`},{-52.3661`,-14.6887`},{-51.7872`,-17.8354`},{-51.2083`,-11.4492`},{-50.6294`,-13.8761`},{-50.0505`,-7.6376`},{-49.4717`,-20.6722`},{-48.8928`,-6.1023`},{-48.3139`,-3.0062`},{-47.735`,6.8016`},{-47.1562`,23.4155`},{-46.5773`,0.9423`},{-45.9984`,19.5976`},{-45.4195`,0.8777`},{-44.8407`,2.3731`},{-44.2618`,16.3106`},{-43.6829`,4.7338`},{-43.104`,7.0143`},{-42.5252`,-0.4604`},{-41.9463`,16.6188`},{-41.3674`,-7.5774`},{-40.7885`,4.786`},{-40.2096`,9.1225`},{-39.6308`,6.0894`},{-39.0519`,8.1521`},{-38.473`,0.7713`},{-37.8941`,24.0671`},{-37.3153`,-5.3851`},{-36.7364`,7.6461`},{-36.1575`,6.2401`},{-35.5786`,5.5707`},{-34.9998`,-3.8426`},{-34.4209`,-8.1403`},{-33.842`,4.7625`},{-33.2631`,-11.033`},{-32.6843`,-10.0288`},{-32.1054`,-9.4915`},{-31.5265`,6.0948`},{-30.9476`,22.7781`},{-30.3687`,-18.0986`},{-29.7899`,-5.7582`},{-29.211`,-7.9967`},{-28.6321`,17.574`},{-28.0532`,9.6356`},{-27.4744`,-12.3885`},{-26.8955`,-9.992`},{-26.3166`,-8.0265`},{-25.7377`,-6.8299`},{-25.1589`,-8.0575`},{-24.58`,9.9059`},{-24.0011`,4.6671`},{-23.4222`,29.4874`},{-22.8434`,-5.0773`},{-22.2645`,3.1678`},{-21.6856`,-3.0654`},{-21.1067`,-4.1394`},{-20.5278`,-12.4577`},{-19.949`,-7.0589`},{-19.3701`,-10.7888`},{-18.7912`,4.4065`},{-18.2123`,5.4024`},{-17.6335`,6.2734`},{-17.0546`,-4.4128`},{-16.4757`,9.1531`},{-15.8968`,-17.4617`},{-15.318`,-5.7665`},{-14.7391`,-8.6346`},{-14.1602`,-1.6776`},{-13.5813`,5.549`},{-13.0025`,-1.2764`},{-12.4236`,1.6277`},{-11.8447`,-6.2084`},{-11.2658`,5.6592`},{-10.6869`,4.7049`},{-10.1081`,8.8459`},{-9.5292`,-5.952`},{-8.9503`,14.4889`},{-8.3714`,23.2175`},{-7.7926`,21.225`},{-7.2137`,15.7654`},{-6.6348`,-2.578`},{-6.0559`,8.965`},{-5.4771`,-9.7285`},{-4.8982`,-2.9533`},{-4.3193`,75.6051`},{-3.7404`,16.4113`},{-3.1616`,14.9865`},{-2.5827`,-11.3331`},{-2.0038`,-2.0928`},{-1.4249`,-0.9202`},{-0.846`,0.2394`},{-0.2672`,6.0783`},{0.3117`,12.7922`},{0.8906`,149.8234`},{1.4695`,137.478`},{2.0483`,73.5309`},{2.6272`,20.1371`},{3.2061`,13.3703`},{3.785`,-1.6624`},{4.3638`,-5.3309`},{4.9427`,6.2866`},{5.5216`,-4.5244`},{6.1005`,-15.892`},{6.6793`,-17.247`},{7.2582`,-3.521`},{7.8371`,47.9696`},{8.416`,48.6575`},{8.9949`,143.0855`},{9.5737`,262.487`},{10.1526`,433.1576`},{10.7315`,655.7522`},{11.3104`,789.8354`},{11.8892`,812.2174`},{12.4681`,768.5621`},{13.047`,657.1636`},{13.6259`,473.0125`},{14.2047`,347.134`},{14.7836`,228.5908`},{15.3625`,146.17`},{15.9414`,77.1921`},{16.5202`,93.6922`},{17.0991`,41.6889`},{17.678`,34.9402`},{18.2569`,24.9377`},{18.8358`,6.303`},{19.4146`,7.6878`},{19.9935`,-0.4913`},{20.5724`,4.309`},{21.1513`,7.6213`},{21.7301`,14.0376`},{22.309`,10.5065`},{22.8879`,-5.2162`},{23.4668`,3.6696`},{24.0456`,-1.3919`},{24.6245`,13.7266`},{25.2034`,26.7292`},{25.7823`,-0.9272`},{26.3611`,-5.163`},{26.94`,-2.0984`},{27.5189`,-4.7001`},{28.0978`,-15.0261`},{28.6767`,-6.6703`},{29.2555`,-4.7324`},{29.8344`,-9.1476`},{30.4133`,-11.197`},{30.9922`,-18.8589`},{31.571`,-18.5209`},{32.1499`,-7.7127`},{32.7288`,-17.283`},{33.3077`,10.2485`},{33.8865`,0.7054`},{34.4654`,17.6433`},{35.0443`,26.3025`},{35.6232`,-4.1029`},{36.202`,9.6538`},{36.7809`,50.4171`},{37.3598`,71.2644`},{37.9387`,193.1155`},{38.5176`,510.2275`},{39.0964`,954.8649`},{39.6753`,1316.5008`},{40.5055`,1341.1692`},{41.6568`,1026.4138`},{42.8081`,549.0985`},{43.9595`,223.7178`},{45.1108`,34.8255`},{46.2621`,-25.6132`},{47.4134`,-69.3664`},{48.5647`,-100.2309`},{49.716`,-90.0365`},{50.8673`,-110.048`},{52.0186`,-89.8928`},{53.1699`,-70.6448`},{54.3212`,-66.6014`},{55.4725`,-7.3808`},{56.6238`,24.2758`},{57.7751`,44.6924`},{58.9264`,89.7889`},{60.0777`,151.1335`},{61.229`,290.8439`},{62.3803`,536.4023`},{63.5317`,956.7083`},{64.683`,1382.7361`},{65.8685`,1552.8259`},{68.4379`,1408.1517`},{71.2857`,1056.4687`},{74.1335`,772.6727`},{76.9813`,502.9082`},{79.8291`,456.0177`},{82.6769`,597.0413`},{85.5247`,933.6729`},{88.3726`,1140.7761`},{91.3774`,1132.9723`},{94.5917`,934.8548`},{97.8059`,695.1553`},{101.0202`,506.9661`},{104.2344`,526.7152`},{107.4487`,886.2472`},{110.6629`,1485.9208`},{113.8772`,1962.2649`},{117.2542`,1986.5373`},{120.9477`,1602.6262`},{124.6412`,1052.4658`},{128.3347`,520.8706`},{132.0283`,237.5131`},{135.7218`,179.6594`},{139.4153`,194.352`},{143.1088`,188.4899`},{146.8023`,193.5516`},{150.4959`,149.3122`},{154.1894`,68.9806`},{157.8829`,26.3029`},{161.5764`,32.2454`},{165.2699`,82.5101`},{168.9635`,171.1333`},{172.657`,342.7152`},{176.3505`,529.9803`},{180.044`,653.1731`},{183.7376`,523.2293`},{187.4311`,361.8707`},{191.1246`,167.4945`},{194.8181`,61.7772`},{198.5116`,60.4075`},{202.2052`,35.8679`},{205.8987`,44.0184`},{209.5922`,65.031`},{213.2857`,95.5418`},{216.9792`,120.0814`},{220.6728`,175.8616`},{224.3663`,244.9024`},{228.0598`,308.0053`},{231.7533`,342.9063`},{235.4469`,388.0488`},{239.1404`,402.7888`},{242.8339`,364.4319`},{246.5274`,337.8086`},{250.2209`,229.8374`},{253.9145`,156.6267`},{257.608`,33.2384`},{261.3015`,-62.4133`},{264.995`,-107.0692`},{268.6885`,-145.7654`},{272.3821`,-167.8836`},{276.0756`,-174.4012`},{279.7691`,-160.7985`},{283.4626`,-94.334`},{287.1562`,-132.8897`},{290.8497`,-88.0442`},{294.5432`,-24.0263`},{298.2367`,17.0242`},{301.9302`,39.8069`},{305.6238`,53.6636`},{309.3173`,58.9873`},{313.0108`,23.7347`},{316.7043`,-15.399`},{320.3978`,-13.7185`},{324.0914`,-29.1139`},{327.7849`,-37.6242`},{331.4784`,-40.0249`},{335.1719`,-26.3684`},{338.8654`,-21.9221`},{342.559`,-23.7979`},{346.2525`,-14.4608`},{349.946`,-0.908`},{353.6395`,-8.8529`},{357.3331`,-8.4405`}})
	],

	Example[{Additional,"NMR Peak Splitting","Automatically identify peak splittings in NMR data:"},
		PlotNMR[
			Object[Data,NMR,"id:3em6ZvL0KNeM"],
			Peaks->AnalyzePeaks[
				Object[Data,NMR,"id:3em6ZvL0KNeM"]
			],
			PlotRange->{{-0.5,3.0},Automatic}
		],
		ValidGraphicsP[]
	],
	Example[{Additional,"NMR Peak Splitting","Override the automatic assignment of Peak Group 3 as a sextet by explicitly setting it as a generic multiplet:"},
		PlotNMR[
			Object[Data,NMR,"id:3em6ZvL0KNeM"],
			Peaks->AnalyzePeaks[
				Object[Data,NMR,"id:3em6ZvL0KNeM"],
				PeakGroupMultiplicity->{"Singlet (s)", "Triplet (t)", "Multiplet (m)", "Singlet (s)", "Triplet (t)"}
			],
			PlotRange->{{-0.5,3.0},Automatic}
		],
		ValidGraphicsP[]
	],
	Example[{Additional,"NMR Peak Splitting","Normalize peak areas by fixing peak group 3 to a relative area of 4.0:"},
		PlotNMR[
			Object[Data,NMR,"id:3em6ZvL0KNeM"],
			Peaks->AnalyzePeaks[
				Object[Data,NMR,"id:3em6ZvL0KNeM"],
				PeakIntegralNormalizationGroup->{3,4.0}
			],
			PlotRange->{{-0.5,3.0},Automatic}
		],
		ValidGraphicsP[]
	],
	Example[{Additional,"NMR Peak Splitting","Adjust splitting tolerances to determine how peak groups are automatically assigned. If the tolerances are reduced to zero, all grouped peaks will be labeled as generic multiplets:"},
		PlotNMR[
			Object[Data,NMR,"id:3em6ZvL0KNeM"],
			Peaks->AnalyzePeaks[
				Object[Data,NMR,"id:3em6ZvL0KNeM"],
				SplittingSpacingTolerance -> 0.0,
				SplittingRelativeIntegralTolerance -> 0.0
			],
			PlotRange->{{-0.5,3.0},Automatic}
		],
		ValidGraphicsP[]
	],
	Example[{Additional,"NMR Peak Splitting","Provide a molecule or molecule(s) in KnownSpecies to automatially assign peaks to atoms in each molecule:"},
		PlotNMR[
			Object[Data,NMR,"id:3em6ZvL0KNeM"],
			Peaks->AnalyzePeaks[
				Object[Data,NMR,"id:3em6ZvL0KNeM"],
				KnownSpecies->{Molecule["CCCC(C)=O"]}
			],
			PlotRange->{{-0.5,5.0},Automatic}
		],
		ValidGraphicsP[]
	],
	Example[{Additional,"NMR Peak Splitting","Explicitly specify SplittingAssignments to override automatic assignments:"},
		PlotNMR[
			Object[Data,NMR,"id:3em6ZvL0KNeM"],
			Peaks->AnalyzePeaks[
				Object[Data,NMR,"id:3em6ZvL0KNeM"],
				KnownSpecies->{Molecule["CCCC(C)=O"]},
				SplittingAssignments->{{1.61PPM,Molecule["CCCC(C)=O"],{10,12}},{2.41PPM,Molecule["CCCC(C)=O"],{11,13}}}
			],
			PlotRange->{{-0.5,5.0},Automatic}
		],
		ValidGraphicsP[]
	],
	Example[{Additional,"NMR Peak Splitting","Adjust peak-picking options to exclude solvent peak and ensure all peaks are selected:"},
		PlotNMR[
			Object[Data, NMR, "tryptophan NMR data for unit testing"],
			Peaks->AnalyzePeaks[
				Object[Data, NMR, "tryptophan NMR data for unit testing"],
				Exclude->{4.77,4.8},
				SmoothingRadius->1.0,
				AbsoluteThreshold->6,
				WidthThreshold->0.004,
				RelativeThreshold->0.00001
			],
			PlotRange->{{-0.1,9.0},{0,80}},
			AspectRatio->0.4
		],
		ValidGraphicsP[]
	],
	Example[{Additional,"NMR Peak Splitting","Adjust the MaximumJSplitting and specify PeakGroupDomains to determine how peaks are automatically grouped:"},
		PlotNMR[
			Object[Data, NMR, "tryptophan NMR data for unit testing"],
			Peaks->AnalyzePeaks[
				Object[Data, NMR, "tryptophan NMR data for unit testing"],
				Exclude->{4.77,4.8},
				SmoothingRadius->1.0,
				AbsoluteThreshold->6,
				WidthThreshold->0.004,
				RelativeThreshold->0.00001,
				MaximumJSplitting->18 Hertz,
				PeakGroupDomains->{7.24 PPM;;7.295 PPM,7.297 PPM;;7.308 PPM}
			],
			PlotRange->{{-0.1,9.0},{0,80}},
			AspectRatio->0.4
		],
		ValidGraphicsP[]
	],
	Test["Use an outer List for adjusting SmoothingRadius, AbsoluteThreshold, WidthThreshold, and RelativeThreshold:",
		PlotNMR[
			Object[Data, NMR, "tryptophan NMR data for unit testing"],
			Peaks->AnalyzePeaks[
				Object[Data, NMR, "tryptophan NMR data for unit testing"],
				Exclude->{4.77,4.8},
				SmoothingRadius->{1.0},
				AbsoluteThreshold->{6},
				WidthThreshold->{0.004},
				RelativeThreshold->{0.00001},
				MaximumJSplitting->18 Hertz,
				PeakGroupDomains->{7.24 PPM;;7.295 PPM,7.297 PPM;;7.308 PPM}
			],
			PlotRange->{{-0.1,9.0},{0,80}},
			AspectRatio->0.4
		],
		ValidGraphicsP[]
	],

	Example[{Additional,"Analyze Peaks Preview on an AgaroseGelElectrophoresis data object which will show up on a loglinear plot:"},
		AnalyzePeaksPreview[Object[Data, AgaroseGelElectrophoresis, "Data object for PlotAgarose testing"]],
		ValidGraphicsP[]
	],



	(* ------------------
			OPTIONS
	--------------------- *)


	Example[{Options, AbsoluteThreshold, "Set minimum absolute height requirement for peaks:"},
		Module[{xy, pksAbsTh, pks},
			xy = Table[{x,Exp[-(x-5)^2]+2` Exp[-2 (x-7)^2]},{x,0,10,0.01`}];
			pks = AnalyzePeaks[xy,Upload->False];
			pksAbsTh = AnalyzePeaks[xy, AbsoluteThreshold -> 1.5,Upload->False];
			Grid[{{EmeraldListLinePlot[xy, Peaks -> pksAbsTh, PlotLabel -> "Ignore peaks with absolute height under threshold"], EmeraldListLinePlot[xy, Peaks -> pks, PlotLabel -> "No absolute height threshold"]}}]
		],
		Grid[{{ValidGraphicsP[], ValidGraphicsP[]}}]
	],

	Test["Set minimum absolute height requirement for peaks:",
		Module[{xy, pksAbsTh, pks},
			xy = Table[{x,Exp[-(x-5)^2]+2` Exp[-2 (x-7)^2]},{x,0,10,0.01`}];
			pks = AnalyzePeaks[xy, Upload -> False];
			pksAbsTh = AnalyzePeaks[xy, Upload -> False, AbsoluteThreshold -> {1.5}];
			{pks, pksAbsTh}
		],
		{
			_?(SubsetQ[#,<|Position -> {5., 6.99}, Height -> {0.7931094334039772`,1.8110997562210005`}, HalfHeightWidth -> {1.2400000000000002`,1.0499999999999998`}, Area -> {1.1168808200455411`,2.1566378298973694`}, PeakRangeStart -> {3.75`,5.91`}, PeakRangeEnd -> {5.91`,8.06`}, WidthRangeStart -> {4.41`,6.45`}, WidthRangeEnd -> {5.65`,7.5`}, BaselineIntercept -> {0.20756149185182776`,0.20756149185182776`}, BaselineSlope -> {0., 0.}|>]&),
			_?(SubsetQ[#,<|Position -> {6.99}, Height -> {1.7426647195289422`}, HalfHeightWidth -> {1.0300000000000002`}, Area -> {2.0116456972387926`}, PeakRangeStart -> {5.91`}, PeakRangeEnd -> {7.99`}, WidthRangeStart -> {6.46`}, WidthRangeEnd -> {7.49`}, BaselineIntercept -> {0.275996528543886`}, BaselineSlope -> {0.}|>]&)
		},
		EquivalenceFunction -> RoundMatchQ[12,Force->True]
	],

	Example[{Options, RelativeThreshold, "Set minimum relative height above baseline requirement for peaks:"},
		Module[{xy, pksRelTh, pks},
			xy = Table[{x,1.75Exp[-(x-3.5)^2]+2 Exp[-(x-5.5)^2]+ 1.65 Exp[-2 (x-7)^2]},{x,0,10,0.01`}];
			pks = AnalyzePeaks[xy,Upload->False];
			pksRelTh = AnalyzePeaks[xy, RelativeThreshold -> 0.68,Upload->False];
			Grid[{{EmeraldListLinePlot[xy, Peaks -> pksRelTh, PlotLabel->"Ignore peaks with relative height under threshold"],EmeraldListLinePlot[xy, Peaks -> pks, PlotLabel -> "No relative height threshold"]}}]
		],
		Grid[{{ValidGraphicsP[], ValidGraphicsP[]}}]
	],

	Test["Set minimum relative height above baseline requirement for peaks:",
		Module[{xy, pksRelTh, pks},
			xy = Table[{x,1.75Exp[-(x-3.5)^2]+2 Exp[-(x-5.5)^2]+ 1.65 Exp[-2 (x-7)^2]},{x,0,10,0.01`}];
			pks = AnalyzePeaks[xy, Upload -> False];
			pksRelTh = AnalyzePeaks[xy, Upload -> False, RelativeThreshold -> {0.68}];
			{pks, pksRelTh}
		],
		{
			_?(SubsetQ[#,<|Position -> {3.5500000000000003, 5.49, 6.87}, Height -> {1.0283362626568155`,1.2884920380858367`,1.139386145035284`}, HalfHeightWidth -> {1.1699999999999995`,0.96`,0.9500000000000002`}, Area -> {1.3310900326627244`,1.8821816155585727`,1.1346228152663795`}, PeakRangeStart -> {2.59`,4.43`,6.29`}, PeakRangeEnd -> {4.43`,6.29`,7.63`}, WidthRangeStart -> {3.0500000000000003`,5.04`,6.29`}, WidthRangeEnd -> {4.22`,6.`,7.24`}, BaselineIntercept -> {0.7619240311683739`,0.7619240311683739`,0.7619240311683739`}, BaselineSlope -> {0., 0., 0.}|>]&),
			_?(SubsetQ[#,<|Position -> {3.5500000000000003, 6.87}, Height -> {0.03650429585344628`,0.14755417823191475`}, HalfHeightWidth -> {0.2200000000000002`,0.3799999999999999`}, Area -> {0.007768489760867794`,0.05481309918246426`}, PeakRangeStart -> {3.4`,6.54`}, PeakRangeEnd -> {3.71`,7.11`}, WidthRangeStart -> {3.44`,6.66`}, WidthRangeEnd -> {3.66`,7.04`}, BaselineIntercept -> {1.7537559979717432`,1.7537559979717432`}, BaselineSlope -> {0., 0.}|>]&)
		},
		EquivalenceFunction -> RoundMatchQ[12,Force->True]
	],

	Example[{Options, WidthThreshold, "Set minimum width requirement for peaks:"},
		Module[{xy, pksWidTh, pks},
			xy = Table[{x,2 Exp[-50 (x-2)^2]+Exp[-0.5 (x- 6)^2]},{x,0,10,0.01`}];
			pks = AnalyzePeaks[xy,Upload->False];
			pksWidTh = AnalyzePeaks[xy, WidthThreshold -> {3}, Upload->False];
			Grid[{{EmeraldListLinePlot[xy, Peaks -> pksWidTh, PlotLabel->"Ignore peaks with width under threshold"], EmeraldListLinePlot[xy, Peaks -> pks, PlotLabel -> "No width threshold"]}}]
		],
		Grid[{{ValidGraphicsP[], ValidGraphicsP[]}}]
	],

	Test["Set minimum width requirement for peaks:",
		Module[{xy, pksWidTh, pks},
			xy = Table[{x,2 Exp[-50 (x-2)^2]+Exp[-0.5 (x- 6)^2]},{x,0,10,0.01`}];
			pks = AnalyzePeaks[xy, Upload -> False];
			pksWidTh = AnalyzePeaks[xy, Upload -> False, WidthThreshold -> {3}];
			{pks, pksWidTh}
		],
		{
			_?(SubsetQ[#,<|Position -> {2., 6.}, Height -> {1.9995919699904707`,0.9992565073625684`}, HalfHeightWidth -> {0.24`,2.3599999999999994`}, Area -> {0.5011320031962476`,2.5005126804754934`}, PeakRangeStart -> {1.61`,2.44`}, PeakRangeEnd -> {2.44`,9.790000000000001`}, WidthRangeStart -> {1.8800000000000001`,4.82`}, WidthRangeEnd -> {2.12`,7.18`}, BaselineIntercept -> {0.0007434926374315704`,0.0007434926374315704`}, BaselineSlope -> {0., 0.}|>]&),
			_?(SubsetQ[#,<|Position -> {6.}, Height -> {0.7960160272164669`}, HalfHeightWidth -> {2.0199999999999996`}, Area -> {1.5922517207111575`}, PeakRangeStart -> {4.22`}, PeakRangeEnd -> {7.78`}, WidthRangeStart -> {4.99`}, WidthRangeEnd -> {7.01`}, BaselineIntercept -> {0.20398397278353314`}, BaselineSlope -> {0.}|>]&)
		},
		EquivalenceFunction -> RoundMatchQ[12,Force->True]
	],

	Example[{Options, AreaThreshold, "Set minimum area requirement for peaks:"},
		Module[{xy, pksAreaTh, pks},
			xy = Table[{x,2 Exp[-50 (x-1)^2]+1.15Exp[-0.5 (x-4)^2]+0.6Exp[-20 (x-5.5)^2]+Exp[-0.2 (x- 7.5)^2]},{x,0,10,0.01`}];
			pks = AnalyzePeaks[xy,Upload->False];
			pksAreaTh = AnalyzePeaks[xy, AreaThreshold -> 1, Upload->False];
			Grid[{{EmeraldListLinePlot[xy, Peaks -> pksAreaTh, PlotLabel->"Ignore peaks with area under threshold"],EmeraldListLinePlot[xy, Peaks -> pks, PlotLabel -> "No area threshold"]}}]
		],
		Grid[{{ValidGraphicsP[], ValidGraphicsP[]}}]
	],

	Test["Set minimum area requirement for peaks:",
		Module[{xy, pksAreaTh, pks},
			xy = Table[{x,2 Exp[-50 (x-1)^2]+1.15Exp[-0.5 (x-4)^2]+0.6Exp[-20 (x-5.5)^2]+Exp[-0.2 (x- 7.5)^2]},{x,0,10,0.01`}];
			pks = AnalyzePeaks[xy, Upload -> False];
			pksAreaTh = AnalyzePeaks[xy, Upload -> False, AreaThreshold -> {1}];
			{pks, pksAreaTh}
		],
		{
			_?(SubsetQ[#,<|Position -> {1., 4.12, 5.49, 7.48}, Height -> {1.5946871155248619`,0.8252338814064399`,1.00521268214151`,0.5843153501796721`}, HalfHeightWidth -> {0.20000000000000007`,1.7200000000000002`,0.34999999999999964`,2.410000000000001`}, Area -> {0.3188728835604876`,1.4665914532681756`,0.6126302077691261`,1.4752755506443962`}, PeakRangeStart -> {0.8300000000000001`,2.57`,5.1000000000000005`,6.01`}, PeakRangeEnd -> {1.17`,5.1000000000000005`,6.01`,9.58`}, WidthRangeStart -> {0.9`,3.36`,5.3100000000000005`,6.13`}, WidthRangeEnd -> {1.1`,5.08`,5.66`,8.540000000000001`}, BaselineIntercept -> {0.4183021309094846`,0.4183021309094846`,0.4183021309094846`,0.4183021309094846`}, BaselineSlope -> {0., 0., 0., 0.}|>]&),
			_?(SubsetQ[#,<|Position -> {4.12, 7.48}, Height -> {0.583327719510175`,0.34240918828340716`}, HalfHeightWidth -> {1.4299999999999997`,1.8699999999999992`}, Area -> {0.8981124439017035`,0.6892045603083097`}, PeakRangeStart -> {2.93`,6.01`}, PeakRangeEnd -> {5.1000000000000005`,8.94`}, WidthRangeStart -> {3.46`,6.48`}, WidthRangeEnd -> {4.89`,8.35`}, BaselineIntercept -> {0.6602082928057494`,0.6602082928057494`}, BaselineSlope -> {0., 0.}|>]&)
		},
		EquivalenceFunction -> RoundMatchQ[12,Force->True]
	],

	Example[{Options, SmoothingRadius, "Smooth data before splitting into peaks:"},
		Module[{xy,pksSmoothed,pks},
			xy=Table[{x,RandomVariate[NormalDistribution[.5Exp[-1(x-3.0)^2]+Exp[-2(x-5)^2]+Exp[-.5(x-7)^2],0.0075]]},{x,0,10,.05}];
			pks=AnalyzePeaks[xy];
			pksSmoothed=AnalyzePeaks[xy,SmoothingRadius->5,Upload->False];
			Grid[{{EmeraldListLinePlot[xy,Peaks->pksSmoothed,PlotLabel->"Smooth data before peak picking"],EmeraldListLinePlot[xy,Peaks->pks,PlotLabel->"No smoothing"]}}]
		],
		Grid[{{ValidGraphicsP[], ValidGraphicsP[]}}]
	],

	Test["Smooth data before splitting into peaks:",
		Module[{xy,pksSmoothed,pks},
			xy={{0.`,0.01204929286997012`},{0.05`,0.003262460242778249`},{0.1`,-0.007602112001128424`},{0.15000000000000002`,0.0029968598629011053`},{0.2`,-0.007138591404058151`},{0.25`,-0.0037899925380844622`},{0.30000000000000004`,-0.0018723976603467912`},{0.35000000000000003`,0.00025898862611345875`},{0.4`,-0.00216075292453452`},{0.45`,0.0031509988914369654`},{0.5`,-0.002850512073393896`},{0.55`,0.0029230859941244123`},{0.6000000000000001`,-0.0015420814607656744`},{0.65`,0.0139151819443929`},{0.7000000000000001`,-0.004128160127954844`},{0.75`,-0.005900920169259326`},{0.8`,0.002625374420743828`},{0.8500000000000001`,0.012881238858734385`},{0.9`,0.0017917624453167675`},{0.9500000000000001`,0.018081645105546548`},{1.`,0.002471038227398443`},{1.05`,0.002035893639838535`},{1.1`,0.015057847249512191`},{1.1500000000000001`,0.02015361961504105`},{1.2000000000000002`,0.0243856101709286`},{1.25`,0.035542203753594466`},{1.3`,0.03115200782387794`},{1.35`,0.04014765878351332`},{1.4000000000000001`,0.03631961115935858`},{1.4500000000000002`,0.03832597756557743`},{1.5`,0.06473303248083317`},{1.55`,0.053739707662102766`},{1.6`,0.07907738675971389`},{1.6500000000000001`,0.09355576180633896`},{1.7000000000000002`,0.08861794806774213`},{1.75`,0.10805497728439024`},{1.8`,0.12383015952429675`},{1.85`,0.12543018106541146`},{1.9000000000000001`,0.15055822479633416`},{1.9500000000000002`,0.16054056019326074`},{2.`,0.1963533843146791`},{2.0500000000000003`,0.20294471642703427`},{2.1`,0.22145019466520222`},{2.15`,0.2515527984916871`},{2.2`,0.2493263731084004`},{2.25`,0.3035769250494137`},{2.3000000000000003`,0.3185603337049455`},{2.35`,0.3299852934278379`},{2.4000000000000004`,0.3621120897873411`},{2.45`,0.3756814796334587`},{2.5`,0.37370560196254876`},{2.5500000000000003`,0.4103031978107312`},{2.6`,0.4267672484383715`},{2.6500000000000004`,0.4531131626692018`},{2.7`,0.46062335445190117`},{2.75`,0.46718514133378397`},{2.8000000000000003`,0.47313778785288396`},{2.85`,0.4885792401449277`},{2.9000000000000004`,0.49506810431721615`},{2.95`,0.5092962196012983`},{3.`,0.502572502464409`},{3.0500000000000003`,0.4959763376769934`},{3.1`,0.49063958668551344`},{3.1500000000000004`,0.4867602694114962`},{3.2`,0.48100346063985966`},{3.25`,0.4707797326934023`},{3.3000000000000003`,0.4637997286996007`},{3.35`,0.4490714774505953`},{3.4000000000000004`,0.4382530352998243`},{3.45`,0.4357994797932307`},{3.5`,0.4116337130084864`},{3.5500000000000003`,0.37862033066363104`},{3.6`,0.36839828639333266`},{3.6500000000000004`,0.34703870988432794`},{3.7`,0.3336865761669923`},{3.75`,0.330217521492071`},{3.8000000000000003`,0.31322480131551317`},{3.85`,0.3106373108439661`},{3.9000000000000004`,0.31516195357767374`},{3.95`,0.32647709505969813`},{4.`,0.32528614338099665`},{4.05`,0.32788125158122344`},{4.1000000000000005`,0.36336767074198734`},{4.15`,0.38216048657862844`},{4.2`,0.4099678227331222`},{4.25`,0.4624218554375127`},{4.3`,0.4896986621467061`},{4.3500000000000005`,0.5435154430294067`},{4.4`,0.5953711072748823`},{4.45`,0.64101049927536`},{4.5`,0.711596707260242`},{4.55`,0.7508726237276746`},{4.6000000000000005`,0.8218259634803973`},{4.65`,0.8773493079986283`},{4.7`,0.9417667874260848`},{4.75`,0.977685353839592`},{4.800000000000001`,1.0324229201365243`},{4.8500000000000005`,1.0608280662326306`},{4.9`,1.1046101412086877`},{4.95`,1.1294772667404251`},{5.`,1.1447005970045545`},{5.050000000000001`,1.1640057512918391`},{5.1000000000000005`,1.14353696377391`},{5.15`,1.1476911730970465`},{5.2`,1.128282280856936`},{5.25`,1.1064228915941767`},{5.300000000000001`,1.0726381849949302`},{5.3500000000000005`,1.0545624184404798`},{5.4`,0.9987468977267806`},{5.45`,0.9642258111945546`},{5.5`,0.928517541636311`},{5.550000000000001`,0.8977786071970131`},{5.6000000000000005`,0.853988174940823`},{5.65`,0.8345917521620941`},{5.7`,0.7991813922828017`},{5.75`,0.7862126441082053`},{5.800000000000001`,0.7689251547715583`},{5.8500000000000005`,0.7484182868642447`},{5.9`,0.7480268632394046`},{5.95`,0.7329044769374976`},{6.`,0.7321867994303367`},{6.050000000000001`,0.7393866214472932`},{6.1000000000000005`,0.759679865451887`},{6.15`,0.7690295346831405`},{6.2`,0.7930650278504328`},{6.25`,0.7942080866495536`},{6.300000000000001`,0.8227190536924263`},{6.3500000000000005`,0.8293589437716945`},{6.4`,0.8509264721062348`},{6.45`,0.8809358774514271`},{6.5`,0.892387912889557`},{6.550000000000001`,0.9271730997731907`},{6.6000000000000005`,0.9328100176258882`},{6.65`,0.9358645286426602`},{6.7`,0.9621701813233753`},{6.75`,0.9734584344307016`},{6.800000000000001`,0.9854450849368506`},{6.8500000000000005`,0.9977876984532886`},{6.9`,1.0007205706199158`},{6.95`,0.9980273790987788`},{7.`,0.9999973065318557`},{7.050000000000001`,0.989573163901923`},{7.1000000000000005`,0.9897595723386199`},{7.15`,0.9825348468551465`},{7.2`,0.9817341919709692`},{7.25`,0.9760510595068713`},{7.300000000000001`,0.9610393218252419`},{7.3500000000000005`,0.9312779915392008`},{7.4`,0.9243692313076903`},{7.45`,0.8896954886439867`},{7.5`,0.8797086951913389`},{7.550000000000001`,0.8672380148801242`},{7.6000000000000005`,0.8406847085524419`},{7.65`,0.810597029206865`},{7.7`,0.7867945396185358`},{7.75`,0.746564634421257`},{7.800000000000001`,0.7253699200243116`},{7.8500000000000005`,0.7018703073622995`},{7.9`,0.6643130140210547`},{7.95`,0.6563176411881168`},{8.`,0.6083190500780762`},{8.05`,0.5791688973052719`},{8.1`,0.5485724311643673`},{8.15`,0.5142135042358216`},{8.200000000000001`,0.4880897258104884`},{8.25`,0.4645642049757784`},{8.3`,0.4319718792192669`},{8.35`,0.4126850314099408`},{8.4`,0.4047388858846391`},{8.450000000000001`,0.34764508463981236`},{8.5`,0.323679034960106`},{8.55`,0.29553740795343336`},{8.6`,0.2819156069461245`},{8.65`,0.24518393246068243`},{8.700000000000001`,0.23958835333030085`},{8.75`,0.2085646660177466`},{8.8`,0.18742304955252317`},{8.85`,0.18391923839687224`},{8.9`,0.16309024328887914`},{8.950000000000001`,0.14745432671636996`},{9.`,0.13931458721274717`},{9.05`,0.11852397303599231`},{9.1`,0.11318656629101145`},{9.15`,0.1000009469469239`},{9.200000000000001`,0.09261597072940576`},{9.25`,0.08156135409199043`},{9.3`,0.07306265205953451`},{9.35`,0.06940798793243594`},{9.4`,0.04651886430017605`},{9.450000000000001`,0.06690189760782181`},{9.5`,0.04860503938934134`},{9.55`,0.035906559554708214`},{9.600000000000001`,0.04368994124214723`},{9.65`,0.02834783340874366`},{9.700000000000001`,0.020726014111688073`},{9.75`,0.025514920269885808`},{9.8`,0.027591784115225195`},{9.850000000000001`,0.018915905467715665`},{9.9`,0.018794528498273066`},{9.950000000000001`,0.014253849203496271`},{10.`,0.015951050814389172`}};
			pks=(stripAppendReplaceKeyHeads @ AnalyzePeaks[xy,Upload -> False])[Position];
			pksSmoothed=(stripAppendReplaceKeyHeads @ AnalyzePeaks[xy,Upload -> False,SmoothingRadius->{5}])[Position];
			{pksSmoothed,pks}
		],
		{
			{2.95`,5.050000000000001`,6.9`},
			{2.15`,2.45`,2.95`,5.050000000000001`,5.15`,6.9`,7.1000000000000005`}
		}
	],

	Example[{Options, SmoothingRadius, "Smooth different regions with different parameters:"},
		Module[{xy,pks},
			xy=Join[Table[{x,Sin[x*Pi]+0.03*Sin[x*20*Pi]},{x,0,1,0.01}],Table[{x,Sin[x*Pi-Pi]+0.03*Sin[x*20*Pi]},{x,1,2,0.02}]];
			pks=AnalyzePeaks[xy,Domain->{0;;1,1;;2},SmoothingRadius->{6,0},Upload->False];
			EmeraldListLinePlot[xy,Peaks->pks]
		],
		_?ValidGraphicsQ
	],

	Test["Smooth different regions with different parameters with Span:",
		Module[{xy},
			xy=Join[Table[{x,Sin[x*Pi]+0.03*Sin[x*20*Pi]},{x,0,1,0.01}],Table[{x,Sin[x*Pi-Pi]+0.03*Sin[x*20*Pi]},{x,1,2,0.02}]];
			stripAppendReplaceKeyHeads @ AnalyzePeaks[xy,Upload -> False,Domain->{0;;1,1;;2},SmoothingRadius->{6,0}]
		],
		KeyValuePattern[{Position->{0.52`,1.34`,1.44`,1.52`,1.62`}
			,Height->{1.0265584239171262`,0.4278169053665644`,0.5337974760513899`,0.5604350916710528`,0.4921848491310327`}
			,HalfHeightWidth->{0.6599999999999999`,0.05999999999999983`,0.08000000000000007`,0.040000000000000036`,0.08000000000000007`}
			,Area->{0.6365674116287159`,0.04974378756249079`,0.059108447715941925`,0.052502339280390484`,0.07898048785322666`}
			,PeakRangeStart->{0.`,1.18`,1.3599999999999999`,1.48`,1.58`}
			,PeakRangeEnd->{1.`,1.3599999999999999`,1.48`,1.58`,1.8399999999999999`}
			,WidthRangeStart->{0.18`,1.3`,1.4`,1.5`,1.58`}
			,WidthRangeEnd->{0.84`,1.3599999999999999`,1.48`,1.54`,1.6600000000000001`}
			,BaselineIntercept->{-8.16431199431569`*^-18,0.46612333224607333`,0.46612333224607333`,0.46612333224607333`,0.46612333224607333`}
			,BaselineSlope->{0.`,0.`,0.`,0.`,0.`}
			,UnresolvedOptions->{Domain->{0;;1,1;;2},SmoothingRadius->{6,0},Upload->False}
		}/. num_Real :>PatternTest[_Real, num - 1.0*^-12 < # < num + 1.0*^-12 &]]
	],

	Test["Smooth different regions with different parameters with List:",
		Module[{xy},
			xy=Join[Table[{x,Sin[x*Pi]+0.03*Sin[x*20*Pi]},{x,0,1,0.01}],Table[{x,Sin[x*Pi-Pi]+0.03*Sin[x*20*Pi]},{x,1,2,0.02}]];
			stripAppendReplaceKeyHeads @ AnalyzePeaks[xy,Upload -> False,Domain->{{0,1},{1,2}},SmoothingRadius->{6,0}]
		],
		KeyValuePattern[{Position->{0.52`,1.34`,1.44`,1.52`,1.62`}
			,Height->{1.0265584239171262`,0.4278169053665644`,0.5337974760513899`,0.5604350916710528`,0.4921848491310327`}
			,HalfHeightWidth->{0.6599999999999999`,0.05999999999999983`,0.08000000000000007`,0.040000000000000036`,0.08000000000000007`}
			,Area->{0.6365674116287159`,0.04974378756249079`,0.059108447715941925`,0.052502339280390484`,0.07898048785322666`}
			,PeakRangeStart->{0.`,1.18`,1.3599999999999999`,1.48`,1.58`}
			,PeakRangeEnd->{1.`,1.3599999999999999`,1.48`,1.58`,1.8399999999999999`}
			,WidthRangeStart->{0.18`,1.3`,1.4`,1.5`,1.58`}
			,WidthRangeEnd->{0.84`,1.3599999999999999`,1.48`,1.54`,1.6600000000000001`}
			,BaselineIntercept->{-8.16431199431569`*^-18,0.46612333224607333`,0.46612333224607333`,0.46612333224607333`,0.46612333224607333`}
			,BaselineSlope->{0.`,0.`,0.`,0.`,0.`}
			,UnresolvedOptions->{Domain->{{0,1},{1,2}},SmoothingRadius->{6,0},Upload->False}
		}/. num_Real :>PatternTest[_Real, num - 1.0*^-12 < # < num + 1.0*^-12 &]]
	],

	Example[{Options,Domain,"Exclude any peaks outside Domain:"},
		With[{peaks=AnalyzePeaks[xyPts,Domain->{25;;125},Upload->False]},
			EmeraldListLinePlot[xyPts,Peaks->peaks]
		],
		_?ValidGraphicsQ,
		SetUp :> ($CreatedObjects = {};xyPts={{-60.4703`,1.587`},{-59.8914`,-2.9288`},{-59.3126`,-2.8543`},{-58.7337`,-3.6064`},{-58.1548`,-3.5293`},{-57.5759`,-7.4673`},{-56.9971`,0.8248`},{-56.4182`,23.293`},{-55.8393`,0.3193`},{-55.2604`,-13.9593`},{-54.6816`,-12.3607`},{-54.1027`,-3.2422`},{-53.5238`,-4.832`},{-52.9449`,-8.3469`},{-52.3661`,-14.6887`},{-51.7872`,-17.8354`},{-51.2083`,-11.4492`},{-50.6294`,-13.8761`},{-50.0505`,-7.6376`},{-49.4717`,-20.6722`},{-48.8928`,-6.1023`},{-48.3139`,-3.0062`},{-47.735`,6.8016`},{-47.1562`,23.4155`},{-46.5773`,0.9423`},{-45.9984`,19.5976`},{-45.4195`,0.8777`},{-44.8407`,2.3731`},{-44.2618`,16.3106`},{-43.6829`,4.7338`},{-43.104`,7.0143`},{-42.5252`,-0.4604`},{-41.9463`,16.6188`},{-41.3674`,-7.5774`},{-40.7885`,4.786`},{-40.2096`,9.1225`},{-39.6308`,6.0894`},{-39.0519`,8.1521`},{-38.473`,0.7713`},{-37.8941`,24.0671`},{-37.3153`,-5.3851`},{-36.7364`,7.6461`},{-36.1575`,6.2401`},{-35.5786`,5.5707`},{-34.9998`,-3.8426`},{-34.4209`,-8.1403`},{-33.842`,4.7625`},{-33.2631`,-11.033`},{-32.6843`,-10.0288`},{-32.1054`,-9.4915`},{-31.5265`,6.0948`},{-30.9476`,22.7781`},{-30.3687`,-18.0986`},{-29.7899`,-5.7582`},{-29.211`,-7.9967`},{-28.6321`,17.574`},{-28.0532`,9.6356`},{-27.4744`,-12.3885`},{-26.8955`,-9.992`},{-26.3166`,-8.0265`},{-25.7377`,-6.8299`},{-25.1589`,-8.0575`},{-24.58`,9.9059`},{-24.0011`,4.6671`},{-23.4222`,29.4874`},{-22.8434`,-5.0773`},{-22.2645`,3.1678`},{-21.6856`,-3.0654`},{-21.1067`,-4.1394`},{-20.5278`,-12.4577`},{-19.949`,-7.0589`},{-19.3701`,-10.7888`},{-18.7912`,4.4065`},{-18.2123`,5.4024`},{-17.6335`,6.2734`},{-17.0546`,-4.4128`},{-16.4757`,9.1531`},{-15.8968`,-17.4617`},{-15.318`,-5.7665`},{-14.7391`,-8.6346`},{-14.1602`,-1.6776`},{-13.5813`,5.549`},{-13.0025`,-1.2764`},{-12.4236`,1.6277`},{-11.8447`,-6.2084`},{-11.2658`,5.6592`},{-10.6869`,4.7049`},{-10.1081`,8.8459`},{-9.5292`,-5.952`},{-8.9503`,14.4889`},{-8.3714`,23.2175`},{-7.7926`,21.225`},{-7.2137`,15.7654`},{-6.6348`,-2.578`},{-6.0559`,8.965`},{-5.4771`,-9.7285`},{-4.8982`,-2.9533`},{-4.3193`,75.6051`},{-3.7404`,16.4113`},{-3.1616`,14.9865`},{-2.5827`,-11.3331`},{-2.0038`,-2.0928`},{-1.4249`,-0.9202`},{-0.846`,0.2394`},{-0.2672`,6.0783`},{0.3117`,12.7922`},{0.8906`,149.8234`},{1.4695`,137.478`},{2.0483`,73.5309`},{2.6272`,20.1371`},{3.2061`,13.3703`},{3.785`,-1.6624`},{4.3638`,-5.3309`},{4.9427`,6.2866`},{5.5216`,-4.5244`},{6.1005`,-15.892`},{6.6793`,-17.247`},{7.2582`,-3.521`},{7.8371`,47.9696`},{8.416`,48.6575`},{8.9949`,143.0855`},{9.5737`,262.487`},{10.1526`,433.1576`},{10.7315`,655.7522`},{11.3104`,789.8354`},{11.8892`,812.2174`},{12.4681`,768.5621`},{13.047`,657.1636`},{13.6259`,473.0125`},{14.2047`,347.134`},{14.7836`,228.5908`},{15.3625`,146.17`},{15.9414`,77.1921`},{16.5202`,93.6922`},{17.0991`,41.6889`},{17.678`,34.9402`},{18.2569`,24.9377`},{18.8358`,6.303`},{19.4146`,7.6878`},{19.9935`,-0.4913`},{20.5724`,4.309`},{21.1513`,7.6213`},{21.7301`,14.0376`},{22.309`,10.5065`},{22.8879`,-5.2162`},{23.4668`,3.6696`},{24.0456`,-1.3919`},{24.6245`,13.7266`},{25.2034`,26.7292`},{25.7823`,-0.9272`},{26.3611`,-5.163`},{26.94`,-2.0984`},{27.5189`,-4.7001`},{28.0978`,-15.0261`},{28.6767`,-6.6703`},{29.2555`,-4.7324`},{29.8344`,-9.1476`},{30.4133`,-11.197`},{30.9922`,-18.8589`},{31.571`,-18.5209`},{32.1499`,-7.7127`},{32.7288`,-17.283`},{33.3077`,10.2485`},{33.8865`,0.7054`},{34.4654`,17.6433`},{35.0443`,26.3025`},{35.6232`,-4.1029`},{36.202`,9.6538`},{36.7809`,50.4171`},{37.3598`,71.2644`},{37.9387`,193.1155`},{38.5176`,510.2275`},{39.0964`,954.8649`},{39.6753`,1316.5008`},{40.5055`,1341.1692`},{41.6568`,1026.4138`},{42.8081`,549.0985`},{43.9595`,223.7178`},{45.1108`,34.8255`},{46.2621`,-25.6132`},{47.4134`,-69.3664`},{48.5647`,-100.2309`},{49.716`,-90.0365`},{50.8673`,-110.048`},{52.0186`,-89.8928`},{53.1699`,-70.6448`},{54.3212`,-66.6014`},{55.4725`,-7.3808`},{56.6238`,24.2758`},{57.7751`,44.6924`},{58.9264`,89.7889`},{60.0777`,151.1335`},{61.229`,290.8439`},{62.3803`,536.4023`},{63.5317`,956.7083`},{64.683`,1382.7361`},{65.8685`,1552.8259`},{68.4379`,1408.1517`},{71.2857`,1056.4687`},{74.1335`,772.6727`},{76.9813`,502.9082`},{79.8291`,456.0177`},{82.6769`,597.0413`},{85.5247`,933.6729`},{88.3726`,1140.7761`},{91.3774`,1132.9723`},{94.5917`,934.8548`},{97.8059`,695.1553`},{101.0202`,506.9661`},{104.2344`,526.7152`},{107.4487`,886.2472`},{110.6629`,1485.9208`},{113.8772`,1962.2649`},{117.2542`,1986.5373`},{120.9477`,1602.6262`},{124.6412`,1052.4658`},{128.3347`,520.8706`},{132.0283`,237.5131`},{135.7218`,179.6594`},{139.4153`,194.352`},{143.1088`,188.4899`},{146.8023`,193.5516`},{150.4959`,149.3122`},{154.1894`,68.9806`},{157.8829`,26.3029`},{161.5764`,32.2454`},{165.2699`,82.5101`},{168.9635`,171.1333`},{172.657`,342.7152`},{176.3505`,529.9803`},{180.044`,653.1731`},{183.7376`,523.2293`},{187.4311`,361.8707`},{191.1246`,167.4945`},{194.8181`,61.7772`},{198.5116`,60.4075`},{202.2052`,35.8679`},{205.8987`,44.0184`},{209.5922`,65.031`},{213.2857`,95.5418`},{216.9792`,120.0814`},{220.6728`,175.8616`},{224.3663`,244.9024`},{228.0598`,308.0053`},{231.7533`,342.9063`},{235.4469`,388.0488`},{239.1404`,402.7888`},{242.8339`,364.4319`},{246.5274`,337.8086`},{250.2209`,229.8374`},{253.9145`,156.6267`},{257.608`,33.2384`},{261.3015`,-62.4133`},{264.995`,-107.0692`},{268.6885`,-145.7654`},{272.3821`,-167.8836`},{276.0756`,-174.4012`},{279.7691`,-160.7985`},{283.4626`,-94.334`},{287.1562`,-132.8897`},{290.8497`,-88.0442`},{294.5432`,-24.0263`},{298.2367`,17.0242`},{301.9302`,39.8069`},{305.6238`,53.6636`},{309.3173`,58.9873`},{313.0108`,23.7347`},{316.7043`,-15.399`},{320.3978`,-13.7185`},{324.0914`,-29.1139`},{327.7849`,-37.6242`},{331.4784`,-40.0249`},{335.1719`,-26.3684`},{338.8654`,-21.9221`},{342.559`,-23.7979`},{346.2525`,-14.4608`},{349.946`,-0.908`},{353.6395`,-8.8529`},{357.3331`,-8.4405`}}),
		TearDown :> (
			EraseObject[$CreatedObjects, Force -> True, Verbose -> False];
			Unset[$CreatedObjects]
		)
	],
	Example[{Options,Domain,"Specify multiple domains, and use different thresholding options for each domain:"},
		EmeraldListLinePlot[xyPts,
			Peaks->AnalyzePeaks[xyPts,
				Domain->{0;;90,100;;200,250;;350},
				AbsoluteThreshold->{500,0,0},
				WidthThreshold->{5,30,400},
				Upload->False
			]
		],
		_?ValidGraphicsQ,
		SetUp :> ($CreatedObjects = {};xyPts={{-60.4703`,1.587`},{-59.8914`,-2.9288`},{-59.3126`,-2.8543`},{-58.7337`,-3.6064`},{-58.1548`,-3.5293`},{-57.5759`,-7.4673`},{-56.9971`,0.8248`},{-56.4182`,23.293`},{-55.8393`,0.3193`},{-55.2604`,-13.9593`},{-54.6816`,-12.3607`},{-54.1027`,-3.2422`},{-53.5238`,-4.832`},{-52.9449`,-8.3469`},{-52.3661`,-14.6887`},{-51.7872`,-17.8354`},{-51.2083`,-11.4492`},{-50.6294`,-13.8761`},{-50.0505`,-7.6376`},{-49.4717`,-20.6722`},{-48.8928`,-6.1023`},{-48.3139`,-3.0062`},{-47.735`,6.8016`},{-47.1562`,23.4155`},{-46.5773`,0.9423`},{-45.9984`,19.5976`},{-45.4195`,0.8777`},{-44.8407`,2.3731`},{-44.2618`,16.3106`},{-43.6829`,4.7338`},{-43.104`,7.0143`},{-42.5252`,-0.4604`},{-41.9463`,16.6188`},{-41.3674`,-7.5774`},{-40.7885`,4.786`},{-40.2096`,9.1225`},{-39.6308`,6.0894`},{-39.0519`,8.1521`},{-38.473`,0.7713`},{-37.8941`,24.0671`},{-37.3153`,-5.3851`},{-36.7364`,7.6461`},{-36.1575`,6.2401`},{-35.5786`,5.5707`},{-34.9998`,-3.8426`},{-34.4209`,-8.1403`},{-33.842`,4.7625`},{-33.2631`,-11.033`},{-32.6843`,-10.0288`},{-32.1054`,-9.4915`},{-31.5265`,6.0948`},{-30.9476`,22.7781`},{-30.3687`,-18.0986`},{-29.7899`,-5.7582`},{-29.211`,-7.9967`},{-28.6321`,17.574`},{-28.0532`,9.6356`},{-27.4744`,-12.3885`},{-26.8955`,-9.992`},{-26.3166`,-8.0265`},{-25.7377`,-6.8299`},{-25.1589`,-8.0575`},{-24.58`,9.9059`},{-24.0011`,4.6671`},{-23.4222`,29.4874`},{-22.8434`,-5.0773`},{-22.2645`,3.1678`},{-21.6856`,-3.0654`},{-21.1067`,-4.1394`},{-20.5278`,-12.4577`},{-19.949`,-7.0589`},{-19.3701`,-10.7888`},{-18.7912`,4.4065`},{-18.2123`,5.4024`},{-17.6335`,6.2734`},{-17.0546`,-4.4128`},{-16.4757`,9.1531`},{-15.8968`,-17.4617`},{-15.318`,-5.7665`},{-14.7391`,-8.6346`},{-14.1602`,-1.6776`},{-13.5813`,5.549`},{-13.0025`,-1.2764`},{-12.4236`,1.6277`},{-11.8447`,-6.2084`},{-11.2658`,5.6592`},{-10.6869`,4.7049`},{-10.1081`,8.8459`},{-9.5292`,-5.952`},{-8.9503`,14.4889`},{-8.3714`,23.2175`},{-7.7926`,21.225`},{-7.2137`,15.7654`},{-6.6348`,-2.578`},{-6.0559`,8.965`},{-5.4771`,-9.7285`},{-4.8982`,-2.9533`},{-4.3193`,75.6051`},{-3.7404`,16.4113`},{-3.1616`,14.9865`},{-2.5827`,-11.3331`},{-2.0038`,-2.0928`},{-1.4249`,-0.9202`},{-0.846`,0.2394`},{-0.2672`,6.0783`},{0.3117`,12.7922`},{0.8906`,149.8234`},{1.4695`,137.478`},{2.0483`,73.5309`},{2.6272`,20.1371`},{3.2061`,13.3703`},{3.785`,-1.6624`},{4.3638`,-5.3309`},{4.9427`,6.2866`},{5.5216`,-4.5244`},{6.1005`,-15.892`},{6.6793`,-17.247`},{7.2582`,-3.521`},{7.8371`,47.9696`},{8.416`,48.6575`},{8.9949`,143.0855`},{9.5737`,262.487`},{10.1526`,433.1576`},{10.7315`,655.7522`},{11.3104`,789.8354`},{11.8892`,812.2174`},{12.4681`,768.5621`},{13.047`,657.1636`},{13.6259`,473.0125`},{14.2047`,347.134`},{14.7836`,228.5908`},{15.3625`,146.17`},{15.9414`,77.1921`},{16.5202`,93.6922`},{17.0991`,41.6889`},{17.678`,34.9402`},{18.2569`,24.9377`},{18.8358`,6.303`},{19.4146`,7.6878`},{19.9935`,-0.4913`},{20.5724`,4.309`},{21.1513`,7.6213`},{21.7301`,14.0376`},{22.309`,10.5065`},{22.8879`,-5.2162`},{23.4668`,3.6696`},{24.0456`,-1.3919`},{24.6245`,13.7266`},{25.2034`,26.7292`},{25.7823`,-0.9272`},{26.3611`,-5.163`},{26.94`,-2.0984`},{27.5189`,-4.7001`},{28.0978`,-15.0261`},{28.6767`,-6.6703`},{29.2555`,-4.7324`},{29.8344`,-9.1476`},{30.4133`,-11.197`},{30.9922`,-18.8589`},{31.571`,-18.5209`},{32.1499`,-7.7127`},{32.7288`,-17.283`},{33.3077`,10.2485`},{33.8865`,0.7054`},{34.4654`,17.6433`},{35.0443`,26.3025`},{35.6232`,-4.1029`},{36.202`,9.6538`},{36.7809`,50.4171`},{37.3598`,71.2644`},{37.9387`,193.1155`},{38.5176`,510.2275`},{39.0964`,954.8649`},{39.6753`,1316.5008`},{40.5055`,1341.1692`},{41.6568`,1026.4138`},{42.8081`,549.0985`},{43.9595`,223.7178`},{45.1108`,34.8255`},{46.2621`,-25.6132`},{47.4134`,-69.3664`},{48.5647`,-100.2309`},{49.716`,-90.0365`},{50.8673`,-110.048`},{52.0186`,-89.8928`},{53.1699`,-70.6448`},{54.3212`,-66.6014`},{55.4725`,-7.3808`},{56.6238`,24.2758`},{57.7751`,44.6924`},{58.9264`,89.7889`},{60.0777`,151.1335`},{61.229`,290.8439`},{62.3803`,536.4023`},{63.5317`,956.7083`},{64.683`,1382.7361`},{65.8685`,1552.8259`},{68.4379`,1408.1517`},{71.2857`,1056.4687`},{74.1335`,772.6727`},{76.9813`,502.9082`},{79.8291`,456.0177`},{82.6769`,597.0413`},{85.5247`,933.6729`},{88.3726`,1140.7761`},{91.3774`,1132.9723`},{94.5917`,934.8548`},{97.8059`,695.1553`},{101.0202`,506.9661`},{104.2344`,526.7152`},{107.4487`,886.2472`},{110.6629`,1485.9208`},{113.8772`,1962.2649`},{117.2542`,1986.5373`},{120.9477`,1602.6262`},{124.6412`,1052.4658`},{128.3347`,520.8706`},{132.0283`,237.5131`},{135.7218`,179.6594`},{139.4153`,194.352`},{143.1088`,188.4899`},{146.8023`,193.5516`},{150.4959`,149.3122`},{154.1894`,68.9806`},{157.8829`,26.3029`},{161.5764`,32.2454`},{165.2699`,82.5101`},{168.9635`,171.1333`},{172.657`,342.7152`},{176.3505`,529.9803`},{180.044`,653.1731`},{183.7376`,523.2293`},{187.4311`,361.8707`},{191.1246`,167.4945`},{194.8181`,61.7772`},{198.5116`,60.4075`},{202.2052`,35.8679`},{205.8987`,44.0184`},{209.5922`,65.031`},{213.2857`,95.5418`},{216.9792`,120.0814`},{220.6728`,175.8616`},{224.3663`,244.9024`},{228.0598`,308.0053`},{231.7533`,342.9063`},{235.4469`,388.0488`},{239.1404`,402.7888`},{242.8339`,364.4319`},{246.5274`,337.8086`},{250.2209`,229.8374`},{253.9145`,156.6267`},{257.608`,33.2384`},{261.3015`,-62.4133`},{264.995`,-107.0692`},{268.6885`,-145.7654`},{272.3821`,-167.8836`},{276.0756`,-174.4012`},{279.7691`,-160.7985`},{283.4626`,-94.334`},{287.1562`,-132.8897`},{290.8497`,-88.0442`},{294.5432`,-24.0263`},{298.2367`,17.0242`},{301.9302`,39.8069`},{305.6238`,53.6636`},{309.3173`,58.9873`},{313.0108`,23.7347`},{316.7043`,-15.399`},{320.3978`,-13.7185`},{324.0914`,-29.1139`},{327.7849`,-37.6242`},{331.4784`,-40.0249`},{335.1719`,-26.3684`},{338.8654`,-21.9221`},{342.559`,-23.7979`},{346.2525`,-14.4608`},{349.946`,-0.908`},{353.6395`,-8.8529`},{357.3331`,-8.4405`}}),
		TearDown :> (
			EraseObject[$CreatedObjects, Force -> True, Verbose -> False];
			Unset[$CreatedObjects]
		)
	],

	Test["Specify multiple domains using List, and use different thresholding options for each domain:",
		EmeraldListLinePlot[xyPts,
			Peaks->AnalyzePeaks[xyPts,
				Domain->{{0,90},{100,200},{250,350}},
				AbsoluteThreshold->{500,0,0},
				WidthThreshold->{5,30,400},
				Upload->False
			]
		],
		_?ValidGraphicsQ,
		SetUp :> ($CreatedObjects = {};xyPts={{-60.4703`,1.587`},{-59.8914`,-2.9288`},{-59.3126`,-2.8543`},{-58.7337`,-3.6064`},{-58.1548`,-3.5293`},{-57.5759`,-7.4673`},{-56.9971`,0.8248`},{-56.4182`,23.293`},{-55.8393`,0.3193`},{-55.2604`,-13.9593`},{-54.6816`,-12.3607`},{-54.1027`,-3.2422`},{-53.5238`,-4.832`},{-52.9449`,-8.3469`},{-52.3661`,-14.6887`},{-51.7872`,-17.8354`},{-51.2083`,-11.4492`},{-50.6294`,-13.8761`},{-50.0505`,-7.6376`},{-49.4717`,-20.6722`},{-48.8928`,-6.1023`},{-48.3139`,-3.0062`},{-47.735`,6.8016`},{-47.1562`,23.4155`},{-46.5773`,0.9423`},{-45.9984`,19.5976`},{-45.4195`,0.8777`},{-44.8407`,2.3731`},{-44.2618`,16.3106`},{-43.6829`,4.7338`},{-43.104`,7.0143`},{-42.5252`,-0.4604`},{-41.9463`,16.6188`},{-41.3674`,-7.5774`},{-40.7885`,4.786`},{-40.2096`,9.1225`},{-39.6308`,6.0894`},{-39.0519`,8.1521`},{-38.473`,0.7713`},{-37.8941`,24.0671`},{-37.3153`,-5.3851`},{-36.7364`,7.6461`},{-36.1575`,6.2401`},{-35.5786`,5.5707`},{-34.9998`,-3.8426`},{-34.4209`,-8.1403`},{-33.842`,4.7625`},{-33.2631`,-11.033`},{-32.6843`,-10.0288`},{-32.1054`,-9.4915`},{-31.5265`,6.0948`},{-30.9476`,22.7781`},{-30.3687`,-18.0986`},{-29.7899`,-5.7582`},{-29.211`,-7.9967`},{-28.6321`,17.574`},{-28.0532`,9.6356`},{-27.4744`,-12.3885`},{-26.8955`,-9.992`},{-26.3166`,-8.0265`},{-25.7377`,-6.8299`},{-25.1589`,-8.0575`},{-24.58`,9.9059`},{-24.0011`,4.6671`},{-23.4222`,29.4874`},{-22.8434`,-5.0773`},{-22.2645`,3.1678`},{-21.6856`,-3.0654`},{-21.1067`,-4.1394`},{-20.5278`,-12.4577`},{-19.949`,-7.0589`},{-19.3701`,-10.7888`},{-18.7912`,4.4065`},{-18.2123`,5.4024`},{-17.6335`,6.2734`},{-17.0546`,-4.4128`},{-16.4757`,9.1531`},{-15.8968`,-17.4617`},{-15.318`,-5.7665`},{-14.7391`,-8.6346`},{-14.1602`,-1.6776`},{-13.5813`,5.549`},{-13.0025`,-1.2764`},{-12.4236`,1.6277`},{-11.8447`,-6.2084`},{-11.2658`,5.6592`},{-10.6869`,4.7049`},{-10.1081`,8.8459`},{-9.5292`,-5.952`},{-8.9503`,14.4889`},{-8.3714`,23.2175`},{-7.7926`,21.225`},{-7.2137`,15.7654`},{-6.6348`,-2.578`},{-6.0559`,8.965`},{-5.4771`,-9.7285`},{-4.8982`,-2.9533`},{-4.3193`,75.6051`},{-3.7404`,16.4113`},{-3.1616`,14.9865`},{-2.5827`,-11.3331`},{-2.0038`,-2.0928`},{-1.4249`,-0.9202`},{-0.846`,0.2394`},{-0.2672`,6.0783`},{0.3117`,12.7922`},{0.8906`,149.8234`},{1.4695`,137.478`},{2.0483`,73.5309`},{2.6272`,20.1371`},{3.2061`,13.3703`},{3.785`,-1.6624`},{4.3638`,-5.3309`},{4.9427`,6.2866`},{5.5216`,-4.5244`},{6.1005`,-15.892`},{6.6793`,-17.247`},{7.2582`,-3.521`},{7.8371`,47.9696`},{8.416`,48.6575`},{8.9949`,143.0855`},{9.5737`,262.487`},{10.1526`,433.1576`},{10.7315`,655.7522`},{11.3104`,789.8354`},{11.8892`,812.2174`},{12.4681`,768.5621`},{13.047`,657.1636`},{13.6259`,473.0125`},{14.2047`,347.134`},{14.7836`,228.5908`},{15.3625`,146.17`},{15.9414`,77.1921`},{16.5202`,93.6922`},{17.0991`,41.6889`},{17.678`,34.9402`},{18.2569`,24.9377`},{18.8358`,6.303`},{19.4146`,7.6878`},{19.9935`,-0.4913`},{20.5724`,4.309`},{21.1513`,7.6213`},{21.7301`,14.0376`},{22.309`,10.5065`},{22.8879`,-5.2162`},{23.4668`,3.6696`},{24.0456`,-1.3919`},{24.6245`,13.7266`},{25.2034`,26.7292`},{25.7823`,-0.9272`},{26.3611`,-5.163`},{26.94`,-2.0984`},{27.5189`,-4.7001`},{28.0978`,-15.0261`},{28.6767`,-6.6703`},{29.2555`,-4.7324`},{29.8344`,-9.1476`},{30.4133`,-11.197`},{30.9922`,-18.8589`},{31.571`,-18.5209`},{32.1499`,-7.7127`},{32.7288`,-17.283`},{33.3077`,10.2485`},{33.8865`,0.7054`},{34.4654`,17.6433`},{35.0443`,26.3025`},{35.6232`,-4.1029`},{36.202`,9.6538`},{36.7809`,50.4171`},{37.3598`,71.2644`},{37.9387`,193.1155`},{38.5176`,510.2275`},{39.0964`,954.8649`},{39.6753`,1316.5008`},{40.5055`,1341.1692`},{41.6568`,1026.4138`},{42.8081`,549.0985`},{43.9595`,223.7178`},{45.1108`,34.8255`},{46.2621`,-25.6132`},{47.4134`,-69.3664`},{48.5647`,-100.2309`},{49.716`,-90.0365`},{50.8673`,-110.048`},{52.0186`,-89.8928`},{53.1699`,-70.6448`},{54.3212`,-66.6014`},{55.4725`,-7.3808`},{56.6238`,24.2758`},{57.7751`,44.6924`},{58.9264`,89.7889`},{60.0777`,151.1335`},{61.229`,290.8439`},{62.3803`,536.4023`},{63.5317`,956.7083`},{64.683`,1382.7361`},{65.8685`,1552.8259`},{68.4379`,1408.1517`},{71.2857`,1056.4687`},{74.1335`,772.6727`},{76.9813`,502.9082`},{79.8291`,456.0177`},{82.6769`,597.0413`},{85.5247`,933.6729`},{88.3726`,1140.7761`},{91.3774`,1132.9723`},{94.5917`,934.8548`},{97.8059`,695.1553`},{101.0202`,506.9661`},{104.2344`,526.7152`},{107.4487`,886.2472`},{110.6629`,1485.9208`},{113.8772`,1962.2649`},{117.2542`,1986.5373`},{120.9477`,1602.6262`},{124.6412`,1052.4658`},{128.3347`,520.8706`},{132.0283`,237.5131`},{135.7218`,179.6594`},{139.4153`,194.352`},{143.1088`,188.4899`},{146.8023`,193.5516`},{150.4959`,149.3122`},{154.1894`,68.9806`},{157.8829`,26.3029`},{161.5764`,32.2454`},{165.2699`,82.5101`},{168.9635`,171.1333`},{172.657`,342.7152`},{176.3505`,529.9803`},{180.044`,653.1731`},{183.7376`,523.2293`},{187.4311`,361.8707`},{191.1246`,167.4945`},{194.8181`,61.7772`},{198.5116`,60.4075`},{202.2052`,35.8679`},{205.8987`,44.0184`},{209.5922`,65.031`},{213.2857`,95.5418`},{216.9792`,120.0814`},{220.6728`,175.8616`},{224.3663`,244.9024`},{228.0598`,308.0053`},{231.7533`,342.9063`},{235.4469`,388.0488`},{239.1404`,402.7888`},{242.8339`,364.4319`},{246.5274`,337.8086`},{250.2209`,229.8374`},{253.9145`,156.6267`},{257.608`,33.2384`},{261.3015`,-62.4133`},{264.995`,-107.0692`},{268.6885`,-145.7654`},{272.3821`,-167.8836`},{276.0756`,-174.4012`},{279.7691`,-160.7985`},{283.4626`,-94.334`},{287.1562`,-132.8897`},{290.8497`,-88.0442`},{294.5432`,-24.0263`},{298.2367`,17.0242`},{301.9302`,39.8069`},{305.6238`,53.6636`},{309.3173`,58.9873`},{313.0108`,23.7347`},{316.7043`,-15.399`},{320.3978`,-13.7185`},{324.0914`,-29.1139`},{327.7849`,-37.6242`},{331.4784`,-40.0249`},{335.1719`,-26.3684`},{338.8654`,-21.9221`},{342.559`,-23.7979`},{346.2525`,-14.4608`},{349.946`,-0.908`},{353.6395`,-8.8529`},{357.3331`,-8.4405`}}),
		TearDown :> (
			EraseObject[$CreatedObjects, Force -> True, Verbose -> False];
			Unset[$CreatedObjects]
		)
	],

	Test["Exclude any peaks containing specified x-values:",
		stripAppendReplaceKeyHeads @ AnalyzePeaks[xyPts,Exclude->{12,65,125,175},Upload -> False],
		Analysis`Private`validAnalysisPacketP[Object[Analysis, Peaks],
			{
				Position -> {0.8906`, 40.5055`,88.3726`,146.8023`,239.1404`},
				Height -> {11.289263414634092`, 1202.6350634146343`,1002.2419634146341`,55.01746341463411`,264.2546634146341`},
				HalfHeightWidth -> {1.1578`, 3.7117000000000004`,12.281199999999998`,7.387100000000004`,18.467600000000004`},
				Area -> {6.535354590731677`, 4268.892814576828`,14988.222130880853`,315.37048559524374`,5681.245839105243`},
				PeakRangeStart -> {0.3117`, 37.9387`,79.8291`,143.1088`,220.6728`},
				PeakRangeEnd -> {1.4695`, 43.9595`,101.0202`,150.4959`,253.9145`},
				WidthRangeStart -> {0.3117`, 39.0964`,85.5247`,143.1088`,228.0598`},
				WidthRangeEnd -> {1.4695`, 42.8081`,97.8059`,150.4959`,246.5274`},
				BaselineIntercept -> {138.5341365853659`, 138.5341365853659`,138.5341365853659`,138.5341365853659`,138.5341365853659`},
				BaselineSlope -> {0.`,0.`,0.`,0.`,0.`}
			},
			ResolvedOptions -> {Exclude->{12,65,125,175}},
			NonNullFields -> {BaselineFunction},
			NullFields -> {PeakSamples},
			Round -> 12
		],
		SetUp :> (xyPts={{-60.4703`,1.587`},{-59.8914`,-2.9288`},{-59.3126`,-2.8543`},{-58.7337`,-3.6064`},{-58.1548`,-3.5293`},{-57.5759`,-7.4673`},{-56.9971`,0.8248`},{-56.4182`,23.293`},{-55.8393`,0.3193`},{-55.2604`,-13.9593`},{-54.6816`,-12.3607`},{-54.1027`,-3.2422`},{-53.5238`,-4.832`},{-52.9449`,-8.3469`},{-52.3661`,-14.6887`},{-51.7872`,-17.8354`},{-51.2083`,-11.4492`},{-50.6294`,-13.8761`},{-50.0505`,-7.6376`},{-49.4717`,-20.6722`},{-48.8928`,-6.1023`},{-48.3139`,-3.0062`},{-47.735`,6.8016`},{-47.1562`,23.4155`},{-46.5773`,0.9423`},{-45.9984`,19.5976`},{-45.4195`,0.8777`},{-44.8407`,2.3731`},{-44.2618`,16.3106`},{-43.6829`,4.7338`},{-43.104`,7.0143`},{-42.5252`,-0.4604`},{-41.9463`,16.6188`},{-41.3674`,-7.5774`},{-40.7885`,4.786`},{-40.2096`,9.1225`},{-39.6308`,6.0894`},{-39.0519`,8.1521`},{-38.473`,0.7713`},{-37.8941`,24.0671`},{-37.3153`,-5.3851`},{-36.7364`,7.6461`},{-36.1575`,6.2401`},{-35.5786`,5.5707`},{-34.9998`,-3.8426`},{-34.4209`,-8.1403`},{-33.842`,4.7625`},{-33.2631`,-11.033`},{-32.6843`,-10.0288`},{-32.1054`,-9.4915`},{-31.5265`,6.0948`},{-30.9476`,22.7781`},{-30.3687`,-18.0986`},{-29.7899`,-5.7582`},{-29.211`,-7.9967`},{-28.6321`,17.574`},{-28.0532`,9.6356`},{-27.4744`,-12.3885`},{-26.8955`,-9.992`},{-26.3166`,-8.0265`},{-25.7377`,-6.8299`},{-25.1589`,-8.0575`},{-24.58`,9.9059`},{-24.0011`,4.6671`},{-23.4222`,29.4874`},{-22.8434`,-5.0773`},{-22.2645`,3.1678`},{-21.6856`,-3.0654`},{-21.1067`,-4.1394`},{-20.5278`,-12.4577`},{-19.949`,-7.0589`},{-19.3701`,-10.7888`},{-18.7912`,4.4065`},{-18.2123`,5.4024`},{-17.6335`,6.2734`},{-17.0546`,-4.4128`},{-16.4757`,9.1531`},{-15.8968`,-17.4617`},{-15.318`,-5.7665`},{-14.7391`,-8.6346`},{-14.1602`,-1.6776`},{-13.5813`,5.549`},{-13.0025`,-1.2764`},{-12.4236`,1.6277`},{-11.8447`,-6.2084`},{-11.2658`,5.6592`},{-10.6869`,4.7049`},{-10.1081`,8.8459`},{-9.5292`,-5.952`},{-8.9503`,14.4889`},{-8.3714`,23.2175`},{-7.7926`,21.225`},{-7.2137`,15.7654`},{-6.6348`,-2.578`},{-6.0559`,8.965`},{-5.4771`,-9.7285`},{-4.8982`,-2.9533`},{-4.3193`,75.6051`},{-3.7404`,16.4113`},{-3.1616`,14.9865`},{-2.5827`,-11.3331`},{-2.0038`,-2.0928`},{-1.4249`,-0.9202`},{-0.846`,0.2394`},{-0.2672`,6.0783`},{0.3117`,12.7922`},{0.8906`,149.8234`},{1.4695`,137.478`},{2.0483`,73.5309`},{2.6272`,20.1371`},{3.2061`,13.3703`},{3.785`,-1.6624`},{4.3638`,-5.3309`},{4.9427`,6.2866`},{5.5216`,-4.5244`},{6.1005`,-15.892`},{6.6793`,-17.247`},{7.2582`,-3.521`},{7.8371`,47.9696`},{8.416`,48.6575`},{8.9949`,143.0855`},{9.5737`,262.487`},{10.1526`,433.1576`},{10.7315`,655.7522`},{11.3104`,789.8354`},{11.8892`,812.2174`},{12.4681`,768.5621`},{13.047`,657.1636`},{13.6259`,473.0125`},{14.2047`,347.134`},{14.7836`,228.5908`},{15.3625`,146.17`},{15.9414`,77.1921`},{16.5202`,93.6922`},{17.0991`,41.6889`},{17.678`,34.9402`},{18.2569`,24.9377`},{18.8358`,6.303`},{19.4146`,7.6878`},{19.9935`,-0.4913`},{20.5724`,4.309`},{21.1513`,7.6213`},{21.7301`,14.0376`},{22.309`,10.5065`},{22.8879`,-5.2162`},{23.4668`,3.6696`},{24.0456`,-1.3919`},{24.6245`,13.7266`},{25.2034`,26.7292`},{25.7823`,-0.9272`},{26.3611`,-5.163`},{26.94`,-2.0984`},{27.5189`,-4.7001`},{28.0978`,-15.0261`},{28.6767`,-6.6703`},{29.2555`,-4.7324`},{29.8344`,-9.1476`},{30.4133`,-11.197`},{30.9922`,-18.8589`},{31.571`,-18.5209`},{32.1499`,-7.7127`},{32.7288`,-17.283`},{33.3077`,10.2485`},{33.8865`,0.7054`},{34.4654`,17.6433`},{35.0443`,26.3025`},{35.6232`,-4.1029`},{36.202`,9.6538`},{36.7809`,50.4171`},{37.3598`,71.2644`},{37.9387`,193.1155`},{38.5176`,510.2275`},{39.0964`,954.8649`},{39.6753`,1316.5008`},{40.5055`,1341.1692`},{41.6568`,1026.4138`},{42.8081`,549.0985`},{43.9595`,223.7178`},{45.1108`,34.8255`},{46.2621`,-25.6132`},{47.4134`,-69.3664`},{48.5647`,-100.2309`},{49.716`,-90.0365`},{50.8673`,-110.048`},{52.0186`,-89.8928`},{53.1699`,-70.6448`},{54.3212`,-66.6014`},{55.4725`,-7.3808`},{56.6238`,24.2758`},{57.7751`,44.6924`},{58.9264`,89.7889`},{60.0777`,151.1335`},{61.229`,290.8439`},{62.3803`,536.4023`},{63.5317`,956.7083`},{64.683`,1382.7361`},{65.8685`,1552.8259`},{68.4379`,1408.1517`},{71.2857`,1056.4687`},{74.1335`,772.6727`},{76.9813`,502.9082`},{79.8291`,456.0177`},{82.6769`,597.0413`},{85.5247`,933.6729`},{88.3726`,1140.7761`},{91.3774`,1132.9723`},{94.5917`,934.8548`},{97.8059`,695.1553`},{101.0202`,506.9661`},{104.2344`,526.7152`},{107.4487`,886.2472`},{110.6629`,1485.9208`},{113.8772`,1962.2649`},{117.2542`,1986.5373`},{120.9477`,1602.6262`},{124.6412`,1052.4658`},{128.3347`,520.8706`},{132.0283`,237.5131`},{135.7218`,179.6594`},{139.4153`,194.352`},{143.1088`,188.4899`},{146.8023`,193.5516`},{150.4959`,149.3122`},{154.1894`,68.9806`},{157.8829`,26.3029`},{161.5764`,32.2454`},{165.2699`,82.5101`},{168.9635`,171.1333`},{172.657`,342.7152`},{176.3505`,529.9803`},{180.044`,653.1731`},{183.7376`,523.2293`},{187.4311`,361.8707`},{191.1246`,167.4945`},{194.8181`,61.7772`},{198.5116`,60.4075`},{202.2052`,35.8679`},{205.8987`,44.0184`},{209.5922`,65.031`},{213.2857`,95.5418`},{216.9792`,120.0814`},{220.6728`,175.8616`},{224.3663`,244.9024`},{228.0598`,308.0053`},{231.7533`,342.9063`},{235.4469`,388.0488`},{239.1404`,402.7888`},{242.8339`,364.4319`},{246.5274`,337.8086`},{250.2209`,229.8374`},{253.9145`,156.6267`},{257.608`,33.2384`},{261.3015`,-62.4133`},{264.995`,-107.0692`},{268.6885`,-145.7654`},{272.3821`,-167.8836`},{276.0756`,-174.4012`},{279.7691`,-160.7985`},{283.4626`,-94.334`},{287.1562`,-132.8897`},{290.8497`,-88.0442`},{294.5432`,-24.0263`},{298.2367`,17.0242`},{301.9302`,39.8069`},{305.6238`,53.6636`},{309.3173`,58.9873`},{313.0108`,23.7347`},{316.7043`,-15.399`},{320.3978`,-13.7185`},{324.0914`,-29.1139`},{327.7849`,-37.6242`},{331.4784`,-40.0249`},{335.1719`,-26.3684`},{338.8654`,-21.9221`},{342.559`,-23.7979`},{346.2525`,-14.4608`},{349.946`,-0.908`},{353.6395`,-8.8529`},{357.3331`,-8.4405`}})
	],

	Example[{Options,Exclude,"Exclude any peaks containing specified x-values:"},
		With[{peaks=AnalyzePeaks[xyPts,Exclude->{12,65,125,175},Upload->False]},
			EmeraldListLinePlot[xyPts,Peaks->peaks]
		],
		_?ValidGraphicsQ,
		SetUp :> ($CreatedObjects = {};xyPts={{-60.4703`,1.587`},{-59.8914`,-2.9288`},{-59.3126`,-2.8543`},{-58.7337`,-3.6064`},{-58.1548`,-3.5293`},{-57.5759`,-7.4673`},{-56.9971`,0.8248`},{-56.4182`,23.293`},{-55.8393`,0.3193`},{-55.2604`,-13.9593`},{-54.6816`,-12.3607`},{-54.1027`,-3.2422`},{-53.5238`,-4.832`},{-52.9449`,-8.3469`},{-52.3661`,-14.6887`},{-51.7872`,-17.8354`},{-51.2083`,-11.4492`},{-50.6294`,-13.8761`},{-50.0505`,-7.6376`},{-49.4717`,-20.6722`},{-48.8928`,-6.1023`},{-48.3139`,-3.0062`},{-47.735`,6.8016`},{-47.1562`,23.4155`},{-46.5773`,0.9423`},{-45.9984`,19.5976`},{-45.4195`,0.8777`},{-44.8407`,2.3731`},{-44.2618`,16.3106`},{-43.6829`,4.7338`},{-43.104`,7.0143`},{-42.5252`,-0.4604`},{-41.9463`,16.6188`},{-41.3674`,-7.5774`},{-40.7885`,4.786`},{-40.2096`,9.1225`},{-39.6308`,6.0894`},{-39.0519`,8.1521`},{-38.473`,0.7713`},{-37.8941`,24.0671`},{-37.3153`,-5.3851`},{-36.7364`,7.6461`},{-36.1575`,6.2401`},{-35.5786`,5.5707`},{-34.9998`,-3.8426`},{-34.4209`,-8.1403`},{-33.842`,4.7625`},{-33.2631`,-11.033`},{-32.6843`,-10.0288`},{-32.1054`,-9.4915`},{-31.5265`,6.0948`},{-30.9476`,22.7781`},{-30.3687`,-18.0986`},{-29.7899`,-5.7582`},{-29.211`,-7.9967`},{-28.6321`,17.574`},{-28.0532`,9.6356`},{-27.4744`,-12.3885`},{-26.8955`,-9.992`},{-26.3166`,-8.0265`},{-25.7377`,-6.8299`},{-25.1589`,-8.0575`},{-24.58`,9.9059`},{-24.0011`,4.6671`},{-23.4222`,29.4874`},{-22.8434`,-5.0773`},{-22.2645`,3.1678`},{-21.6856`,-3.0654`},{-21.1067`,-4.1394`},{-20.5278`,-12.4577`},{-19.949`,-7.0589`},{-19.3701`,-10.7888`},{-18.7912`,4.4065`},{-18.2123`,5.4024`},{-17.6335`,6.2734`},{-17.0546`,-4.4128`},{-16.4757`,9.1531`},{-15.8968`,-17.4617`},{-15.318`,-5.7665`},{-14.7391`,-8.6346`},{-14.1602`,-1.6776`},{-13.5813`,5.549`},{-13.0025`,-1.2764`},{-12.4236`,1.6277`},{-11.8447`,-6.2084`},{-11.2658`,5.6592`},{-10.6869`,4.7049`},{-10.1081`,8.8459`},{-9.5292`,-5.952`},{-8.9503`,14.4889`},{-8.3714`,23.2175`},{-7.7926`,21.225`},{-7.2137`,15.7654`},{-6.6348`,-2.578`},{-6.0559`,8.965`},{-5.4771`,-9.7285`},{-4.8982`,-2.9533`},{-4.3193`,75.6051`},{-3.7404`,16.4113`},{-3.1616`,14.9865`},{-2.5827`,-11.3331`},{-2.0038`,-2.0928`},{-1.4249`,-0.9202`},{-0.846`,0.2394`},{-0.2672`,6.0783`},{0.3117`,12.7922`},{0.8906`,149.8234`},{1.4695`,137.478`},{2.0483`,73.5309`},{2.6272`,20.1371`},{3.2061`,13.3703`},{3.785`,-1.6624`},{4.3638`,-5.3309`},{4.9427`,6.2866`},{5.5216`,-4.5244`},{6.1005`,-15.892`},{6.6793`,-17.247`},{7.2582`,-3.521`},{7.8371`,47.9696`},{8.416`,48.6575`},{8.9949`,143.0855`},{9.5737`,262.487`},{10.1526`,433.1576`},{10.7315`,655.7522`},{11.3104`,789.8354`},{11.8892`,812.2174`},{12.4681`,768.5621`},{13.047`,657.1636`},{13.6259`,473.0125`},{14.2047`,347.134`},{14.7836`,228.5908`},{15.3625`,146.17`},{15.9414`,77.1921`},{16.5202`,93.6922`},{17.0991`,41.6889`},{17.678`,34.9402`},{18.2569`,24.9377`},{18.8358`,6.303`},{19.4146`,7.6878`},{19.9935`,-0.4913`},{20.5724`,4.309`},{21.1513`,7.6213`},{21.7301`,14.0376`},{22.309`,10.5065`},{22.8879`,-5.2162`},{23.4668`,3.6696`},{24.0456`,-1.3919`},{24.6245`,13.7266`},{25.2034`,26.7292`},{25.7823`,-0.9272`},{26.3611`,-5.163`},{26.94`,-2.0984`},{27.5189`,-4.7001`},{28.0978`,-15.0261`},{28.6767`,-6.6703`},{29.2555`,-4.7324`},{29.8344`,-9.1476`},{30.4133`,-11.197`},{30.9922`,-18.8589`},{31.571`,-18.5209`},{32.1499`,-7.7127`},{32.7288`,-17.283`},{33.3077`,10.2485`},{33.8865`,0.7054`},{34.4654`,17.6433`},{35.0443`,26.3025`},{35.6232`,-4.1029`},{36.202`,9.6538`},{36.7809`,50.4171`},{37.3598`,71.2644`},{37.9387`,193.1155`},{38.5176`,510.2275`},{39.0964`,954.8649`},{39.6753`,1316.5008`},{40.5055`,1341.1692`},{41.6568`,1026.4138`},{42.8081`,549.0985`},{43.9595`,223.7178`},{45.1108`,34.8255`},{46.2621`,-25.6132`},{47.4134`,-69.3664`},{48.5647`,-100.2309`},{49.716`,-90.0365`},{50.8673`,-110.048`},{52.0186`,-89.8928`},{53.1699`,-70.6448`},{54.3212`,-66.6014`},{55.4725`,-7.3808`},{56.6238`,24.2758`},{57.7751`,44.6924`},{58.9264`,89.7889`},{60.0777`,151.1335`},{61.229`,290.8439`},{62.3803`,536.4023`},{63.5317`,956.7083`},{64.683`,1382.7361`},{65.8685`,1552.8259`},{68.4379`,1408.1517`},{71.2857`,1056.4687`},{74.1335`,772.6727`},{76.9813`,502.9082`},{79.8291`,456.0177`},{82.6769`,597.0413`},{85.5247`,933.6729`},{88.3726`,1140.7761`},{91.3774`,1132.9723`},{94.5917`,934.8548`},{97.8059`,695.1553`},{101.0202`,506.9661`},{104.2344`,526.7152`},{107.4487`,886.2472`},{110.6629`,1485.9208`},{113.8772`,1962.2649`},{117.2542`,1986.5373`},{120.9477`,1602.6262`},{124.6412`,1052.4658`},{128.3347`,520.8706`},{132.0283`,237.5131`},{135.7218`,179.6594`},{139.4153`,194.352`},{143.1088`,188.4899`},{146.8023`,193.5516`},{150.4959`,149.3122`},{154.1894`,68.9806`},{157.8829`,26.3029`},{161.5764`,32.2454`},{165.2699`,82.5101`},{168.9635`,171.1333`},{172.657`,342.7152`},{176.3505`,529.9803`},{180.044`,653.1731`},{183.7376`,523.2293`},{187.4311`,361.8707`},{191.1246`,167.4945`},{194.8181`,61.7772`},{198.5116`,60.4075`},{202.2052`,35.8679`},{205.8987`,44.0184`},{209.5922`,65.031`},{213.2857`,95.5418`},{216.9792`,120.0814`},{220.6728`,175.8616`},{224.3663`,244.9024`},{228.0598`,308.0053`},{231.7533`,342.9063`},{235.4469`,388.0488`},{239.1404`,402.7888`},{242.8339`,364.4319`},{246.5274`,337.8086`},{250.2209`,229.8374`},{253.9145`,156.6267`},{257.608`,33.2384`},{261.3015`,-62.4133`},{264.995`,-107.0692`},{268.6885`,-145.7654`},{272.3821`,-167.8836`},{276.0756`,-174.4012`},{279.7691`,-160.7985`},{283.4626`,-94.334`},{287.1562`,-132.8897`},{290.8497`,-88.0442`},{294.5432`,-24.0263`},{298.2367`,17.0242`},{301.9302`,39.8069`},{305.6238`,53.6636`},{309.3173`,58.9873`},{313.0108`,23.7347`},{316.7043`,-15.399`},{320.3978`,-13.7185`},{324.0914`,-29.1139`},{327.7849`,-37.6242`},{331.4784`,-40.0249`},{335.1719`,-26.3684`},{338.8654`,-21.9221`},{342.559`,-23.7979`},{346.2525`,-14.4608`},{349.946`,-0.908`},{353.6395`,-8.8529`},{357.3331`,-8.4405`}}),
		TearDown :> (
			EraseObject[$CreatedObjects, Force -> True, Verbose -> False];
			Unset[$CreatedObjects]
		)
	],

	Example[{Options,Include,"Include any peaks containing specified x-values:"},
		AnalyzePeaks[xyPts, Include -> {50, 100}, AbsoluteThreshold -> 1500][Position],
		{_?NumericQ..},
		EquivalenceFunction->(RoundMatchQ[3][Normal[#1],Normal[#2]]& ),
		SetUp :> ($CreatedObjects = {};xyPts={{-60.4703`,1.587`},{-59.8914`,-2.9288`},{-59.3126`,-2.8543`},{-58.7337`,-3.6064`},{-58.1548`,-3.5293`},{-57.5759`,-7.4673`},{-56.9971`,0.8248`},{-56.4182`,23.293`},{-55.8393`,0.3193`},{-55.2604`,-13.9593`},{-54.6816`,-12.3607`},{-54.1027`,-3.2422`},{-53.5238`,-4.832`},{-52.9449`,-8.3469`},{-52.3661`,-14.6887`},{-51.7872`,-17.8354`},{-51.2083`,-11.4492`},{-50.6294`,-13.8761`},{-50.0505`,-7.6376`},{-49.4717`,-20.6722`},{-48.8928`,-6.1023`},{-48.3139`,-3.0062`},{-47.735`,6.8016`},{-47.1562`,23.4155`},{-46.5773`,0.9423`},{-45.9984`,19.5976`},{-45.4195`,0.8777`},{-44.8407`,2.3731`},{-44.2618`,16.3106`},{-43.6829`,4.7338`},{-43.104`,7.0143`},{-42.5252`,-0.4604`},{-41.9463`,16.6188`},{-41.3674`,-7.5774`},{-40.7885`,4.786`},{-40.2096`,9.1225`},{-39.6308`,6.0894`},{-39.0519`,8.1521`},{-38.473`,0.7713`},{-37.8941`,24.0671`},{-37.3153`,-5.3851`},{-36.7364`,7.6461`},{-36.1575`,6.2401`},{-35.5786`,5.5707`},{-34.9998`,-3.8426`},{-34.4209`,-8.1403`},{-33.842`,4.7625`},{-33.2631`,-11.033`},{-32.6843`,-10.0288`},{-32.1054`,-9.4915`},{-31.5265`,6.0948`},{-30.9476`,22.7781`},{-30.3687`,-18.0986`},{-29.7899`,-5.7582`},{-29.211`,-7.9967`},{-28.6321`,17.574`},{-28.0532`,9.6356`},{-27.4744`,-12.3885`},{-26.8955`,-9.992`},{-26.3166`,-8.0265`},{-25.7377`,-6.8299`},{-25.1589`,-8.0575`},{-24.58`,9.9059`},{-24.0011`,4.6671`},{-23.4222`,29.4874`},{-22.8434`,-5.0773`},{-22.2645`,3.1678`},{-21.6856`,-3.0654`},{-21.1067`,-4.1394`},{-20.5278`,-12.4577`},{-19.949`,-7.0589`},{-19.3701`,-10.7888`},{-18.7912`,4.4065`},{-18.2123`,5.4024`},{-17.6335`,6.2734`},{-17.0546`,-4.4128`},{-16.4757`,9.1531`},{-15.8968`,-17.4617`},{-15.318`,-5.7665`},{-14.7391`,-8.6346`},{-14.1602`,-1.6776`},{-13.5813`,5.549`},{-13.0025`,-1.2764`},{-12.4236`,1.6277`},{-11.8447`,-6.2084`},{-11.2658`,5.6592`},{-10.6869`,4.7049`},{-10.1081`,8.8459`},{-9.5292`,-5.952`},{-8.9503`,14.4889`},{-8.3714`,23.2175`},{-7.7926`,21.225`},{-7.2137`,15.7654`},{-6.6348`,-2.578`},{-6.0559`,8.965`},{-5.4771`,-9.7285`},{-4.8982`,-2.9533`},{-4.3193`,75.6051`},{-3.7404`,16.4113`},{-3.1616`,14.9865`},{-2.5827`,-11.3331`},{-2.0038`,-2.0928`},{-1.4249`,-0.9202`},{-0.846`,0.2394`},{-0.2672`,6.0783`},{0.3117`,12.7922`},{0.8906`,149.8234`},{1.4695`,137.478`},{2.0483`,73.5309`},{2.6272`,20.1371`},{3.2061`,13.3703`},{3.785`,-1.6624`},{4.3638`,-5.3309`},{4.9427`,6.2866`},{5.5216`,-4.5244`},{6.1005`,-15.892`},{6.6793`,-17.247`},{7.2582`,-3.521`},{7.8371`,47.9696`},{8.416`,48.6575`},{8.9949`,143.0855`},{9.5737`,262.487`},{10.1526`,433.1576`},{10.7315`,655.7522`},{11.3104`,789.8354`},{11.8892`,812.2174`},{12.4681`,768.5621`},{13.047`,657.1636`},{13.6259`,473.0125`},{14.2047`,347.134`},{14.7836`,228.5908`},{15.3625`,146.17`},{15.9414`,77.1921`},{16.5202`,93.6922`},{17.0991`,41.6889`},{17.678`,34.9402`},{18.2569`,24.9377`},{18.8358`,6.303`},{19.4146`,7.6878`},{19.9935`,-0.4913`},{20.5724`,4.309`},{21.1513`,7.6213`},{21.7301`,14.0376`},{22.309`,10.5065`},{22.8879`,-5.2162`},{23.4668`,3.6696`},{24.0456`,-1.3919`},{24.6245`,13.7266`},{25.2034`,26.7292`},{25.7823`,-0.9272`},{26.3611`,-5.163`},{26.94`,-2.0984`},{27.5189`,-4.7001`},{28.0978`,-15.0261`},{28.6767`,-6.6703`},{29.2555`,-4.7324`},{29.8344`,-9.1476`},{30.4133`,-11.197`},{30.9922`,-18.8589`},{31.571`,-18.5209`},{32.1499`,-7.7127`},{32.7288`,-17.283`},{33.3077`,10.2485`},{33.8865`,0.7054`},{34.4654`,17.6433`},{35.0443`,26.3025`},{35.6232`,-4.1029`},{36.202`,9.6538`},{36.7809`,50.4171`},{37.3598`,71.2644`},{37.9387`,193.1155`},{38.5176`,510.2275`},{39.0964`,954.8649`},{39.6753`,1316.5008`},{40.5055`,1341.1692`},{41.6568`,1026.4138`},{42.8081`,549.0985`},{43.9595`,223.7178`},{45.1108`,34.8255`},{46.2621`,-25.6132`},{47.4134`,-69.3664`},{48.5647`,-100.2309`},{49.716`,-90.0365`},{50.8673`,-110.048`},{52.0186`,-89.8928`},{53.1699`,-70.6448`},{54.3212`,-66.6014`},{55.4725`,-7.3808`},{56.6238`,24.2758`},{57.7751`,44.6924`},{58.9264`,89.7889`},{60.0777`,151.1335`},{61.229`,290.8439`},{62.3803`,536.4023`},{63.5317`,956.7083`},{64.683`,1382.7361`},{65.8685`,1552.8259`},{68.4379`,1408.1517`},{71.2857`,1056.4687`},{74.1335`,772.6727`},{76.9813`,502.9082`},{79.8291`,456.0177`},{82.6769`,597.0413`},{85.5247`,933.6729`},{88.3726`,1140.7761`},{91.3774`,1132.9723`},{94.5917`,934.8548`},{97.8059`,695.1553`},{101.0202`,506.9661`},{104.2344`,526.7152`},{107.4487`,886.2472`},{110.6629`,1485.9208`},{113.8772`,1962.2649`},{117.2542`,1986.5373`},{120.9477`,1602.6262`},{124.6412`,1052.4658`},{128.3347`,520.8706`},{132.0283`,237.5131`},{135.7218`,179.6594`},{139.4153`,194.352`},{143.1088`,188.4899`},{146.8023`,193.5516`},{150.4959`,149.3122`},{154.1894`,68.9806`},{157.8829`,26.3029`},{161.5764`,32.2454`},{165.2699`,82.5101`},{168.9635`,171.1333`},{172.657`,342.7152`},{176.3505`,529.9803`},{180.044`,653.1731`},{183.7376`,523.2293`},{187.4311`,361.8707`},{191.1246`,167.4945`},{194.8181`,61.7772`},{198.5116`,60.4075`},{202.2052`,35.8679`},{205.8987`,44.0184`},{209.5922`,65.031`},{213.2857`,95.5418`},{216.9792`,120.0814`},{220.6728`,175.8616`},{224.3663`,244.9024`},{228.0598`,308.0053`},{231.7533`,342.9063`},{235.4469`,388.0488`},{239.1404`,402.7888`},{242.8339`,364.4319`},{246.5274`,337.8086`},{250.2209`,229.8374`},{253.9145`,156.6267`},{257.608`,33.2384`},{261.3015`,-62.4133`},{264.995`,-107.0692`},{268.6885`,-145.7654`},{272.3821`,-167.8836`},{276.0756`,-174.4012`},{279.7691`,-160.7985`},{283.4626`,-94.334`},{287.1562`,-132.8897`},{290.8497`,-88.0442`},{294.5432`,-24.0263`},{298.2367`,17.0242`},{301.9302`,39.8069`},{305.6238`,53.6636`},{309.3173`,58.9873`},{313.0108`,23.7347`},{316.7043`,-15.399`},{320.3978`,-13.7185`},{324.0914`,-29.1139`},{327.7849`,-37.6242`},{331.4784`,-40.0249`},{335.1719`,-26.3684`},{338.8654`,-21.9221`},{342.559`,-23.7979`},{346.2525`,-14.4608`},{349.946`,-0.908`},{353.6395`,-8.8529`},{357.3331`,-8.4405`}}),
		TearDown :> (
			EraseObject[$CreatedObjects, Force -> True, Verbose -> False];
			Unset[$CreatedObjects]
		)
	],


	Example[{Options,ReferenceField,"Specify field containing data to be analyzed:"},
		AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],ReferenceField->Absorbance][Position],
		{20.193333`,25.366667`},
		Stubs:>{
			AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],ReferenceField->Absorbance]=stripAppendReplaceKeyHeads@AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],ReferenceField->Absorbance,Upload->False]
		}
	],

	Example[{Options, ConsolidateHeight, "Consolidate shallow shoulder peaks:"},
		Module[{xy,pksConsol,pks},
			xy=Table[{x,Exp[-(x-5)^2]+.33*Exp[-10(x-4)^2]+.5Exp[-2(x-7)^2]},{x,0,10,.01}];
			pks=AnalyzePeaks[xy,Upload->False];
			pksConsol=AnalyzePeaks[xy,ConsolidateHeight->{0.1},Upload->False];
			Grid[{{EmeraldListLinePlot[xy,Peaks->pksConsol,PlotLabel->"Consolidated shoulder peaks"],EmeraldListLinePlot[xy,Peaks->pks,PlotLabel->"No consolidation"]}}]
		],
		Grid[{{ValidGraphicsP[], ValidGraphicsP[]}}]
	],
	Test["Consolidate shoulder peaks:",
		Module[{xy,pksConsol,pks},
			xy=Table[{x,Exp[-(x-5)^2]+.33*Exp[-10(x-4)^2]+.5Exp[-2(x-7)^2]},{x,0,10,.01}];
			pks=(stripAppendReplaceKeyHeads @ AnalyzePeaks[xy,Upload -> False])[Position];
			pksConsol=(stripAppendReplaceKeyHeads @ AnalyzePeaks[xy,Upload -> False,ConsolidateHeight->{0.1}])[Position];
			{pksConsol,pks}
		],
		{
			{5.`,6.96`},
			{4.17`,5.`,6.96`}
		},
		EquivalenceFunction -> RoundMatchQ[12,Force->True]
	],

	Example[{Options, ConsolidateWidth, "Consolidate narrow noisy peaks:"},
		Module[{xy,pksConsol,pks},
			xy=Table[{x,Exp[-.5(x-5)^2]+.2*Exp[-200(x-6)^2]+.5Exp[-2(x-3)^2]+.75Exp[-.5(x-8)^2]},{x,0,10,.01}];
			pks=AnalyzePeaks[xy,Upload->False];
			pksConsol=AnalyzePeaks[xy,ConsolidateWidth->1,Upload->False];
			Grid[{{EmeraldListLinePlot[xy,Peaks->pksConsol,PlotLabel->"Consolidated narrow noisy peaks"],EmeraldListLinePlot[xy,Peaks->pks,PlotLabel->"No consolidation"]}}]
		],
		Grid[{{ValidGraphicsP[], ValidGraphicsP[]}}]
	],
	Test["Consolidate narrow noisy peaks:",
		Module[{xy,pksConsol,pks},
			xy=Table[{x,Exp[-.5(x-5)^2]+.2*Exp[-200(x-6)^2]+.5Exp[-2(x-3)^2]+.75Exp[-.5(x-8)^2]},{x,0,10,.01}];
			pks=(stripAppendReplaceKeyHeads @ AnalyzePeaks[xy,Upload -> False])[Position];
			pksConsol=(stripAppendReplaceKeyHeads @ AnalyzePeaks[xy,Upload -> False,ConsolidateWidth->{1}])[Position];
			{pksConsol,pks}
		],
		{
			{3.19`,5.03`,7.95`},
			{3.19`,5.03`,5.99`,7.95`}
		},
		EquivalenceFunction -> RoundMatchQ[12,Force->True]
	],


	Example[{Options, EdgeFraction, "Shrink peak by bringing in its edges until their height is 3% of max peak height:"},
		Module[{xy,pksTrimmed,pks},
			xy=Table[{x,Exp[-10(x-5)^2]+.15Exp[-.01(x-5)^2]},{x,0,10,.01}];
			pks=AnalyzePeaks[xy,Upload->False];
			pksTrimmed=AnalyzePeaks[xy,EdgeFraction->.03,Upload->False];
			Grid[{{EmeraldListLinePlot[xy,Peaks->pksTrimmed,PlotLabel->"Trimmed peak edges"],EmeraldListLinePlot[xy,Peaks->pks,PlotLabel->"No trimming"]}}]
		],
		Grid[{{ValidGraphicsP[], ValidGraphicsP[]}}]
	],
	Test["Shrink peak by bringing in its edges until their height is 3% of max peak height:",
		Module[{xy,pksTrimmed,pks},
			xy=Table[{x,Exp[-10(x-5)^2]+.15Exp[-.01(x-5)^2]},{x,0,10,.01}];
			pks=(stripAppendReplaceKeyHeads @ AnalyzePeaks[xy,Upload -> False])[Position];
			pksTrimmed=(stripAppendReplaceKeyHeads @ AnalyzePeaks[xy,Upload -> False,EdgeFraction->{.03}])[Position];
			{pksTrimmed,pks}
		],
		{
			{5.`},
			{5.`}
		},
		EquivalenceFunction -> RoundMatchQ[12,Force->True]
	],

	(*Show baseline points*)
	Example[{Options, HighlightBaselinePoints, "Fit locally linear baselines, obtained by connecting the edges of each peak:"},
 		AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],
  		Baseline -> DomainLinear, AbsoluteThreshold -> {150},
  		Output -> Preview, HighlightBaselinePoints -> True],
		_?ValidGraphicsQ
	],

	(* Baseline *)
	Example[{Options,Baseline,"Fit a globally constant baseline:"},
		AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],Baseline->DomainConstant,Output -> Preview,AbsoluteThreshold -> {150}],
		_
	],
	Example[{Options,Baseline,"Fit a globally linear baseline:"},
		AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],Baseline->DomainLinear,Output -> Preview,AbsoluteThreshold -> {150}],
		_
	],
	Example[{Options,Baseline,"Fit locally constant baselines, obtained from the minimum edge of each peak:"},
		AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],Baseline->LocalConstant,Output -> Preview,AbsoluteThreshold -> {150}],
		_
	],
	Example[{Options,Baseline,"Fit locally linear baselines, obtained by connecting the edges of each peak:"},
		AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],Baseline->LocalLinear,Output -> Preview,AbsoluteThreshold -> {150}],
		_
	],
	Example[{Options,Baseline,"Fit endpoint linear baselines, obtained by connecting the first and last point of the domain:"},
		AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],Baseline->EndpointLinear,Output -> Preview,AbsoluteThreshold -> {150}],
		_
	],
	Example[{Options,Baseline,"Fit globally nonlinear baselines, obtained using statistics-sensitive nonlinear iterative peak clipping algorithm:"},
		AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],Baseline->DomainNonlinear,Output -> Preview,AbsoluteThreshold -> {150}],
		_
	],

	Example[{Options,BaselineFeatureWidth,"Specify width of features to include in nonlinear baseline:"},
		AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],Baseline->DomainNonlinear,BaselineFeatureWidth->6,Output -> Preview,AbsoluteThreshold -> {150}],
		_
	],
	Example[{Options,BaselineFeatureWidth,"Smaller BaselineFeatureWidth includes more features in baseline and makes baseline curvier:"},
		AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],Baseline->DomainNonlinear,BaselineFeatureWidth->3,Output -> Preview,AbsoluteThreshold -> {150}],
		_
	],
	Example[{Options,BaselineFeatureWidth,"Larger BaselineFeatureWidth prunes more features from the baseline and makes it flatter:"},
		AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],Baseline->DomainNonlinear,BaselineFeatureWidth->10,Output -> Preview,AbsoluteThreshold -> {150}],
		_
	],

	Example[{Options,PeakLabels,"Specify labels for the peaks:"},
		AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],	AbsoluteThreshold -> 500,PeakLabels -> {"Adam","Bob","Charlie"}][PeakLabel],
		{"Adam","Bob","Charlie"},
		Stubs:>{
			AnalyzePeaks[
				Object[Data, Chromatography, "id:XnlV5jmbk0rn"],
				AbsoluteThreshold -> 500,
				PeakLabels -> {"Adam","Bob","Charlie"}
			]=stripAppendReplaceKeyHeads@AnalyzePeaks[
				Object[Data, Chromatography, "id:XnlV5jmbk0rn"],
				AbsoluteThreshold -> 500,
				PeakLabels -> {"Adam","Bob","Charlie"},
				Upload->False
			]
		}
	],
	Example[{Options,PeakLabels,"Labels are aligned starting with the first peak.  If more peaks are found than labels are specified, then the remaining peaks are given default labels:"},
		AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],	AbsoluteThreshold -> 200,PeakLabels -> {"A", "B"}][PeakLabel],
		{"A","B","3","4","5","6"},
		Stubs:>{
			AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],	AbsoluteThreshold -> 200,PeakLabels -> {"A", "B"}]=stripAppendReplaceKeyHeads@AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],	AbsoluteThreshold -> {200},PeakLabels -> {"A", "B"},Upload->False]
		},
		Messages:>{Warning::PeakLabelsMismatch}
	],

	Example[{Options,PeakLabels,"Labels with Listed Absolute Threshold:"},
		AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],	AbsoluteThreshold -> {200},PeakLabels -> {"A", "B"}][PeakLabel],
		{"A","B","3","4","5","6"},
		Stubs:>{
			AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],	AbsoluteThreshold -> {200},PeakLabels -> {"A", "B"}]=stripAppendReplaceKeyHeads@AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],	AbsoluteThreshold -> {200},PeakLabels -> {"A", "B"},Upload->False]
		},
		Messages:>{Warning::PeakLabelsMismatch}
	],

	Example[{Options,PeakLabels,"Unused labels are dropped:"},
		AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],	AbsoluteThreshold -> 500,PeakLabels -> {"A", "B", "C", "D", "E"}][PeakLabel],
		{"A","B","C"},
		Stubs :> {
			AnalyzePeaks[
				Object[Data, Chromatography, "id:XnlV5jmbk0rn"],
				AbsoluteThreshold -> 500,
				PeakLabels -> {"A", "B", "C", "D", "E"}
			]=stripAppendReplaceKeyHeads@AnalyzePeaks[
				Object[Data, Chromatography, "id:XnlV5jmbk0rn"],
				AbsoluteThreshold -> 500,
				PeakLabels -> {"A", "B", "C", "D", "E"},
				Upload->False
			]
		},
		Messages :> {Warning::PeakLabelsMismatch}
	],
	Test["Correctly handles single PeakLabels list with multiple input objects:",
		Lookup[AnalyzePeaks[{Object[Data, Chromatography, "id:XnlV5jmbk0rn"],
			Object[Data, Chromatography, "id:XnlV5jmbk0rn"]},
			PeakLabels -> {"A"}, Upload -> False], Replace[PeakLabel]],
		{{"A", "2"}, {"A", "2"}},
		Messages :> {Warning::PeakLabelsMismatch}
	],
	Test["Correctly handles multiple PeakLabels list with multiple input objects:",
		Lookup[AnalyzePeaks[{Object[Data, Chromatography, "id:XnlV5jmbk0rn"],
			Object[Data, Chromatography, "id:XnlV5jmbk0rn"]},
			PeakLabels -> {{"A"},{"B"}}, Upload -> False], Replace[PeakLabel]],
		{{"A", "2"}, {"B", "2"}},
		Messages :> {Warning::PeakLabelsMismatch}
	],


	Example[{Options,Template,"Use options from previous peaks analysis:"},
		AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],Template->Object[Analysis,Peaks,"id:jLq9jXvYqopq"]][Position],
		{13.366667`,20.193333`,23.153333`,25.366667`},
		EquivalenceFunction->RoundMatchQ[10,Force->True],
		Stubs:>{
			AnalyzePeaks[
				Object[Data, Chromatography, "id:XnlV5jmbk0rn"],
				Template->Object[Analysis,Peaks,"id:jLq9jXvYqopq"]
			]=stripAppendReplaceKeyHeads@AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],
				Template->Object[Analysis,Peaks,"id:jLq9jXvYqopq"],
				Upload->False
			]
		},
		Messages :> {Warning::DeprecatedBaseline}
	],
	Example[{Options,Template,"PeakLabels option attempts to align based on position:"},
		AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],
			AbsoluteThreshold -> 200,
			Template -> <|Type -> Object[Analysis, Peaks], Position -> {20, 25},
				PeakLabel->{"Adam", "Bob"}, PeakAssignmentLibrary->{}, ResolvedOptions->{}|>
		][PeakLabel],
		{"1", "2", "3", "Adam", "5", "Bob"},
		Stubs:>{
			AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],
				AbsoluteThreshold -> 200,
				Template -> <|Type -> Object[Analysis, Peaks], Position -> {20, 25},
					PeakLabel->{"Adam", "Bob"}, PeakAssignmentLibrary->{}, ResolvedOptions->{}|>
			]=stripAppendReplaceKeyHeads@AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],
				AbsoluteThreshold -> 200,
				Template -> <|Type -> Object[Analysis, Peaks], Position -> {20, 25},
					PeakLabel->{"Adam", "Bob"}, PeakAssignmentLibrary->{}, ResolvedOptions->{}|>,
				Upload->False
			]
		}
	],

	Example[{Options,Template,"Specified PeakLabels override template labels if there is a conflict:"},
		AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],
			AbsoluteThreshold -> {200},
			PeakLabels -> {"A", "B", "C", "D","E","F"},
			Template -> <|Type -> Object[Analysis, Peaks], Position -> {20, 25},
				PeakLabel -> {"Adam", "Bob"}, PeakAssignmentLibrary->{}, ResolvedOptions -> {}|>
		][PeakLabel],
		{"A", "B", "C", "D", "E", "F"}
	],

	Test["Template alignment, no assignments:",
		Lookup[AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],
			AbsoluteThreshold -> 200,
			Template -> <|Type -> Object[Analysis, Peaks], Position -> {20, 25},
				PeakLabel -> {"Adam", "Bob"}, ResolvedOptions -> {},
				PeakAssignmentLibrary -> {}|>, Upload -> False],{Replace[PeakLabel],Replace[PeakAssignmentLibrary]}],
		{{"1", "2", "3", "Adam", "5", "Bob"}, {}}
	],
	Test["Template alignment, listed AbsoluteThreshold, no assignments:",
		Lookup[AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],
			AbsoluteThreshold -> {200},
			Template -> <|Type -> Object[Analysis, Peaks], Position -> {20, 25},
				PeakLabel -> {"Adam", "Bob"}, ResolvedOptions -> {},
				PeakAssignmentLibrary -> {}|>, Upload -> False],{Replace[PeakLabel],Replace[PeakAssignmentLibrary]}],
		{{"1", "2", "3", "Adam", "5", "Bob"}, {}}
	],
	Test["Template alignment, with assignments:",
		Lookup[
			AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],
				AbsoluteThreshold -> 200,
				Template -> <|Type -> Object[Analysis, Peaks], Position -> {20, 25},
				PeakLabel->{"Adam","Bob"},
				PeakAssignmentLibrary -> {
					{Label->"Adam", Model->Link[Model[Molecule, "id:jLq9jXvvOYnE"]],Position->20.,Tolerance->Null},
					{Label->"Bob", Model->Link[Model[Molecule, "id:WNa4ZjKKMRDZ"]],Position->25.,Tolerance->Null}
				},
				ResolvedOptions -> {}|>,
				Upload -> False
			],
			{Replace[PeakLabel],Replace[PeakAssignmentLibrary]}
		],
		{
			{"1", "2", "3", "Adam", "5", "Bob"},
			{
					{Label->"Adam",Model->Link[Model[Molecule, "id:jLq9jXvvOYnE"]],Position->20.,Tolerance->Null},
					{Label->"Bob",Model->Link[Model[Molecule, "id:WNa4ZjKKMRDZ"]],Position->25.,Tolerance->Null}
			}
		}
	],


	Test["RelativeLabels not inherited:",
		AnalyzePeaks[
			Table[{x,0.25 Exp[-(x-10)^2]+0.5 Exp[-(x-20)^2]+0.8 Exp[-(x-30)^2]+0.6 Exp[-(x-40)^2]},{x,Range[0,55,0.2]}],
			RelativeLabeling->True,TemplateAssignmentTolerance->2,Upload->False,
			Template-><|
				Type->Object[Analysis,Peaks],
				Position->{10,20,30},
				PeakAssignmentLibrary->{{Label->"Biggest",Model->Link[Model[Molecule, "id:jLq9jXvvOYnE"]],Position->30.0,Tolerance->1.0}},
				PeakLabel->{"RRT 0.33","RRT 0.67","Biggest"},
				ResolvedOptions->{}
			|>
		][Replace[PeakLabel]],
		{"RRT 0.33", "RRT 0.67", "Biggest", "RRT 1.33"}
	],
	Test["RelativeLabels not inherited, no RelativeLabeling:",
		AnalyzePeaks[
			Table[{x,0.25 Exp[-(x-10)^2]+0.5 Exp[-(x-20)^2]+0.8 Exp[-(x-30)^2]+0.6 Exp[-(x-40)^2]},{x,Range[0,55,0.2]}],
			RelativeLabeling->False,TemplateAssignmentTolerance->2,Upload->False,
			Template-><|
				Type->Object[Analysis,Peaks],
				Position->{10,20,30},
				PeakAssignmentLibrary->{{Label->"Biggest",Model->Link[Model[Molecule, "id:jLq9jXvvOYnE"]],Position->30.0,Tolerance->1.0}},
				PeakLabel->{"RRT0.33","RRT0.67","Biggest"},
				ResolvedOptions->{}
			|>][Replace[PeakLabel]],
		{"1","2","Biggest","4"}
	],
	Test["Template with exact matching positions works:",
		AnalyzePeaks[
			Table[{x,0.25 Exp[-(x-10)^2]+0.5 Exp[-(x-20)^2]+0.8 Exp[-(x-30)^2]+0.6 Exp[-(x-40)^2]},{x,Range[0,55,0.2]}],
			RelativeLabeling->False,TemplateAssignmentTolerance->2,Upload->False,
			Template-><|Type->Object[Analysis,Peaks],Position->{10,20,30},PeakAssignmentLibrary->{},PeakLabel->{"A1","B2","C3"},ResolvedOptions->{}|>][Replace[PeakLabel]],
		{"A1","B2","C3","4"}
	],
	Test["Template with exact matching positions works, with RelativeLabeling:",
		AnalyzePeaks[
			Table[{x,0.25 Exp[-(x-10)^2]+0.5 Exp[-(x-20)^2]+0.8 Exp[-(x-30)^2]+0.6 Exp[-(x-40)^2]},{x,Range[0,55,0.2]}],
			RelativeLabeling->True,TemplateAssignmentTolerance->2,Upload->False,
			Template-><|Type->Object[Analysis,Peaks],Position->{10,20,30},PeakAssignmentLibrary->{},PeakLabel->{"A1","B2","C3"},ResolvedOptions->{}|>][Replace[PeakLabel]],
		{"A1","B2","C3","RRT 1.33"}
	],
	Test["Template copies PeakAssignmentLibrary:",
		AnalyzePeaks[
			Table[{x,0.25 Exp[-(x-10)^2]+0.5 Exp[-(x-20)^2]+0.8 Exp[-(x-30)^2]+0.6 Exp[-(x-40)^2]},{x,Range[0,55,0.2]}],
			RelativeLabeling->True,TemplateAssignmentTolerance->2,Upload->False,
			Template-><|
				Type->Object[Analysis,Peaks],
				Position->{10,20,30},
				PeakAssignmentLibrary->{{Label->"Biggest",Model->Link[Model[Molecule, "id:jLq9jXvvOYnE"]],Position->30.0,Tolerance->1.0}},
				PeakLabel->{"RRT0.33","RRT0.67","Biggest"},
				ResolvedOptions->{}
		|>][Replace[PeakAssignmentLibrary]],
		{{Label->"Biggest",Model->Link[Model[Molecule, "id:jLq9jXvvOYnE"]],Position->30.0,Tolerance->1.0}}
	],
	Test["Template copies PeakAssignmentLibrary with units:",
		With[
			{
				testData=QuantityArray[Table[{x, 0.8 Exp[-(x - 30)^2] + 0.6 Exp[-(x - 40)^2]}, {x, Range[0, 55, 0.2]}], {Minute, AbsorbanceUnit}]
			},
			Normal@AnalyzePeaks[
				testData,
				Template->AnalyzePeaks[
					testData,
					PeakAssignments->{{28;;32, Model[Molecule, "Caffeine"]}, {38;;42, Model[Molecule, "Uracil"]}}
				]
			][PeakAssignmentLibrary]
		]/.{lnk:_Link:>lnk[Object]},
		{
			{Label->"Caffeine", Model->Model[Molecule, "id:E8zoYvN6m61A"], Position -> 30., Tolerance -> Null},
			{Label->"Uracil", Model->Model[Molecule, "id:eGakldJvLvbB"], Position -> 40., Tolerance -> Null}
		}
	],
	Test["Relative PeakAssignments overrides default label in mixture case:",
		AnalyzePeaks[
			Table[{x,
				0.25 Exp[-(x - 10)^2] + 0.5 Exp[-(x - 20)^2] +
						0.8 Exp[-(x - 30)^2] + 0.6 Exp[-(x - 40)^2]}, {x,
				Range[0, 55, 0.2]}], RelativeLabeling -> True,
			TemplateAssignmentTolerance -> 2, Upload -> False,
			PeakAssignments -> {{.67 RRT, Model[Molecule, "id:xRO9n3BPmKb5"], .1 RRT}},
			Template -> <|Type -> Object[Analysis, Peaks], Position -> {10, 30},
				PeakAssignmentLibrary -> {}, PeakLabel -> {"A1", "C3"},
				ResolvedOptions -> {}|>][Replace[PeakLabel]],
		{"A1", "Boc-Lys(Z)-OH", "C3", "RRT 1.33"}
	],

	Test["PeakAssignments are index-matched to input data:",
		Lookup[AnalyzePeaks[{Object[Data, Chromatography, "id:dORYzZJlaZkq"],
			Object[Data, Chromatography, "id:rea9jlaYkrPb"]}, PeakAssignments ->
			{{}, {{28.35 Minute, Model[Molecule, Oligomer, "id:dORYzZJ3GdqR"],
				1.63 Minute}}}, AbsoluteThreshold -> {{3}, {15}},
			Output -> Options], {PeakLabels, PeakAssignments}],

		{{{"1", "2", "3", "4", "5", "6", "7", "8"}, {"1", "2", "3", "4", "5", "Enkephalin-M", "7", "8", "9", "10", "11", "12"}},
			{{}, {{Quantity[28.35, "Minutes"], Model[Molecule, Oligomer, "id:dORYzZJ3GdqR"], Quantity[1.63, "Minutes"]}}}}
	],

	Test["Template alignment with full specification:",
		Lookup[AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],
			AbsoluteThreshold -> {200},
			Template -> Association[Type -> Object[Analysis, Peaks],
						Position -> {20, 25, 4.2, 3.5, 3.1, 23.1},
						PeakLabel -> {"Adam", "Bob", "Chuck", "Dave", "Ed", "Frank"},
						PeakAssignmentLibrary -> {}, ResolvedOptions -> {}],
			Upload -> False],Replace[PeakLabel]],
		{"Ed", "Dave", "Chuck", "Adam", "Frank", "Bob"}
	],
	Test["Template alignment with full specification with default label name:",
		Lookup[AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],
			AbsoluteThreshold -> {200},
			Template -> Association[Type -> Object[Analysis, Peaks],
				Position -> {20, 25, 4.2, 3.5, 3.1, 23.1},
				PeakLabel -> {"Adam", "Bob", "3", "Dave", "Ed", "Frank"},
				PeakAssignmentLibrary -> {}, ResolvedOptions -> {}],
			Upload -> False],Replace[PeakLabel]],
		{"Ed", "Dave", "3", "Adam", "Frank", "Bob"}
	],

	Test["This should mix non-default PeakLabels option with templates:",
		Lookup[AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],
			AbsoluteThreshold -> {200},
			PeakLabels -> {"1", "2", "Steve", "4", "Ursula", "6"},
			Template ->	Association[Type -> Object[Analysis, Peaks],
				Position -> {20, 25, 4.2, 3.5, 3.1, 23.1},
				PeakLabel -> {"Adam", "Bob", "Chuck", "Dave", "Ed", "Frank"},
				PeakAssignmentLibrary -> {}, ResolvedOptions -> {}],
			Upload -> False], Replace[PeakLabel]],
		{"Ed", "Dave", "Steve", "Adam", "Ursula", "Bob"}
	],

	Example[{Options,TemplateAssignmentTolerance,"Only align peaks within 1Minute of template peaks:"},
		AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],
			AbsoluteThreshold -> 200,
			Template -> <|Type -> Object[Analysis, Peaks],
				Position -> {7, 20, 25}, PeakLabel -> {"John", "Adam", "Bob"},
				PeakAssignmentLibrary -> {}, ResolvedOptions -> {}|>,
			TemplateAssignmentTolerance -> 1 Minute][PeakLabel],
		{"1", "2", "3", "Adam", "5", "Bob"}
	],
	Example[{Options,TemplateAssignmentTolerance,"Loosen tolerance to allow more alignment matches:"},
		AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],
			AbsoluteThreshold -> 200,
			Template -> <|Type -> Object[Analysis, Peaks],
				Position -> {7, 20, 25}, PeakLabel -> {"John", "Adam", "Bob"},
				PeakAssignmentLibrary -> {}, ResolvedOptions -> {}|>,
			TemplateAssignmentTolerance -> 5 Minute][PeakLabel],
		{"1", "2", "John", "Adam", "5", "Bob"}
	],
	Example[{Options,TemplateAssignmentTolerance,"Tighten tolerance to allow fewer matches:"},
		AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],
			AbsoluteThreshold -> 200,
			Template -> <|Type -> Object[Analysis, Peaks],
				Position -> {7, 20, 25}, PeakLabel -> {"John", "Adam", "Bob"},
				PeakAssignmentLibrary -> {}, ResolvedOptions -> {}|>,
			TemplateAssignmentTolerance -> .25 Minute][PeakLabel],
		{"1", "2", "3", "Adam", "5", "6"}
	],

	Test["Only align peaks within 1Minute of template peaks (listed AbsoluteThreshold):",
		AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],
			AbsoluteThreshold -> {200},
			Template -> <|Type -> Object[Analysis, Peaks],
				Position -> {7, 20, 25}, PeakLabel -> {"John", "Adam", "Bob"},
				PeakAssignmentLibrary -> {}, ResolvedOptions -> {}|>,
			TemplateAssignmentTolerance -> 1 Minute][PeakLabel],
		{"1", "2", "3", "Adam", "5", "Bob"}
	],
	Test["Loosen tolerance to allow more alignment matches (listed AbsoluteThreshold):",
		AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],
			AbsoluteThreshold -> {200},
			Template -> <|Type -> Object[Analysis, Peaks],
				Position -> {7, 20, 25}, PeakLabel -> {"John", "Adam", "Bob"},
				PeakAssignmentLibrary -> {}, ResolvedOptions -> {}|>,
			TemplateAssignmentTolerance -> 5 Minute][PeakLabel],
		{"1", "2", "John", "Adam", "5", "Bob"}
	],
	Test["Tighten tolerance to allow fewer matches (listed AbsoluteThreshold):",
		AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],
			AbsoluteThreshold -> {200},
			Template -> <|Type -> Object[Analysis, Peaks],
				Position -> {7, 20, 25}, PeakLabel -> {"John", "Adam", "Bob"},
				PeakAssignmentLibrary -> {}, ResolvedOptions -> {}|>,
			TemplateAssignmentTolerance -> .25 Minute][PeakLabel],
		{"1", "2", "3", "Adam", "5", "6"}
	],

	Example[{Options,BlankPeaks,"Exclude peaks from Blank data peaks analysis:"},
		AnalyzePeaks[Object[Data,Chromatography,"id:GmzlKjPY3Xde"], BlankPeaks -> {Object[Analysis,Peaks,"BlankPeaks Test"]}][Position],
		{}
	],


	Example[{Options, Wavelength, "Specify Wavelength for 3D Chromatography data to reduce dimension to 2D then perform peak picking:"},
		AnalyzePeaks[Object[Data,Chromatography,"id:lYq9jRxnrP9l"], Wavelength -> 280 Nanometer][Position],
		{_?NumericQ..},
		TimeConstraint -> 200
	],

	Test["In 3D Chromatography data, different wavelengths slice different data from Absorbance3D:",
		{
			AnalyzePeaks[Object[Data,Chromatography,"id:XnlV5jKRMMro"],Wavelength->320 Nanometer,Upload->False][Replace[Position]],
			AnalyzePeaks[Object[Data,Chromatography,"id:XnlV5jKRMMro"],Wavelength->250 Nanometer,Upload->False][Replace[Position]]
		},
		{{3.9174306392669678`}, {3.911597728729248`}}
	],

	Example[{Options, Name, "Name to be used as the name of Object[Analysis, Peaks] generated by the analysis:"},
		randomPeaksStr = CreateUUID[];
		AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],Upload->False,Name->randomPeaksStr][Name],
		_String,
		Stubs :> {
			AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],Upload->False,Name->randomPeaksStr] =
			AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],Upload->False,Name->randomPeaksStr]
		}
	],

	Example[{Options,ParentPeaks,"Specify parent peaks from using either peak labels or peak indices:"},
		AnalyzePeaks[Object[Data, Chromatography, "id:BYDOjvGo8z9q"],
			Domain->{0.5;;1.5},
			AbsoluteThreshold->50,
			PeakAssignments->{
				{0.88 Minute,Model[Molecule,"Caffeine"],10 Second},
				{1.04 Minute,Model[Molecule,"Uracil"],10 Second}
			},
			ParentPeaks -> {"Caffeine", 1}
		][ParentPeak],
		{"Caffeine","Caffeine"}
	],

	Example[{"Specify parent peaks from using either peak labels or peak indices, using List for Domain and AbsoluteThreshold:"},
		AnalyzePeaks[Object[Data, Chromatography, "id:BYDOjvGo8z9q"],
			Domain->{{0.5,1.5}},
			AbsoluteThreshold->{50},
			PeakAssignments->{
				{0.88 Minute,Model[Molecule,"Caffeine"],10 Second},
				{1.04 Minute,Model[Molecule,"Uracil"],10 Second}
			},
			ParentPeaks -> {"Caffeine", 1}
		][ParentPeak],
		{"Caffeine","Caffeine"}
	],

	Example[{Options,PeakAssignments, "Assign peaks to putative molecules:"},
		AnalyzePeaks[Object[Data,Chromatography,"id:XnlV5jmbk0rn"],
			PeakAssignments -> {{20Minute,Model[Molecule,"id:xRO9n3BPmKb5"],1Minute}, {25Minute,Model[Molecule,Oligomer,"id:L8kPEjn6rOaW"],1 Minute}}][PeakAssignment],
		{
			LinkP[Model[Molecule, "id:xRO9n3BPmKb5"]],
			LinkP[Model[Molecule,Oligomer,"id:L8kPEjn6rOaW"]]
		},
		TimeConstraint -> 200
	],
	Example[{Options,PeakAssignments,"Interconvert between compatible units, or use dimensionless input to automatically match data units:"},
		AnalyzePeaks[Object[Data,Chromatography,"id:XnlV5jmbk0rn"],
			PeakAssignments -> {{20,Model[Molecule,"id:xRO9n3BPmKb5"],1}, {0.417 Hour,Model[Molecule,Oligomer,"id:L8kPEjn6rOaW"],60 Second}}][PeakAssignment],
		{
			LinkP[Model[Molecule, "id:xRO9n3BPmKb5"]],
			LinkP[Model[Molecule,Oligomer,"id:L8kPEjn6rOaW"]]
		},
		TimeConstraint -> 200
	],
	Test["PeakAssignments works when the x-unit is not time, e.g. for PAGE data:",
		Analysis`Private`stripAppendReplaceKeyHeads[AnalyzePeaks[Object[Data,PAGE,"id:mnk9jO3qAB8b"],
			PeakAssignments->{
			{12.6 Millimeter, Model[Molecule,"Caffeine"], 0.2 Millimeter},
				{16.9, Model[Molecule,"L-Tyrosine"], 0.2},
				{2.62 Centimeter, Model[Molecule,"Glycine"], 200 Micrometer}
			},
			Upload->False
		]][PeakAssignment],
		{
			Null,
			Link[Model[Molecule, "Caffeine"]],
			Null,
			Null,
			Link[Model[Molecule,"L-Tyrosine"]],
			Null,
			Null,
			Null,
			Link[Model[Molecule,"Glycine"]],
			Null
		}
	],
	Example[{Options, PeakAssignments, "Assign peaks to putative molecules based on relative retention time:"},
		AnalyzePeaksPreview[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],
			AbsoluteThreshold -> 250,
			PeakAssignments -> {
				{.8 RRT, Model[Molecule, "id:xRO9n3BPmKb5"],.1 RRT},
				{.15 RRT, Model[Molecule,"Caffeine"],.05 RRT}
			},
			RelativeLabeling -> True
		],
		ValidGraphicsP[],
		TimeConstraint -> 200
	],
	Test["Relative retention time alignment works:",
		Lookup[AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],
			AbsoluteThreshold -> {250}, RelativeLabeling -> True,
			PeakAssignments -> {
				{.8 RRT,	Model[Molecule, "id:xRO9n3BPmKb5"], .1 RRT},
				{.15 RRT,	Model[Molecule,Oligomer,"id:L8kPEjn6rOaW"], .05 RRT}
			},Upload -> False], {Replace[PeakLabel],Replace[PeakAssignment],Replace[PeakAssignmentLibrary]}],
		{
			{
				"RRT 0.12",
				"10bp DNA Ladder Strand",
				"Boc-Lys(Z)-OH",
				"RRT 1."
			},
			{
				Null,
				Link[Model[Molecule,Oligomer,"id:L8kPEjn6rOaW"]],
				Link[Model[Molecule,"id:xRO9n3BPmKb5"]],
				Null
			},
			{
				<|Label->"10bp DNA Ladder Strand",Model->Link[Model[Molecule,Oligomer,"id:L8kPEjn6rOaW"]],Position->4.293333`,Tolerance->1.26833335`|>,
				<|Label->"Boc-Lys(Z)-OH",Model->Link[Model[Molecule, "id:xRO9n3BPmKb5"]],Position->20.193333`,Tolerance->2.5366667`|>
			}
		}
	],
	Test["Ensure that the fields PeakAssignment and PeakAssignmentLibrary have correct upload format:",
		Lookup[
			AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],
				AbsoluteThreshold -> {250},
				RelativeLabeling -> True,
				PeakAssignments -> {
					{.8 RRT,	Model[Molecule, "id:xRO9n3BPmKb5"], .1 RRT},
					{.15 RRT,	Model[Molecule,Oligomer,"id:L8kPEjn6rOaW"], .05 RRT}
				},
				Upload -> False
			],
			{Replace[PeakLabel],Replace[PeakAssignment],Replace[PeakAssignmentLibrary]}
		],
		{
			{
				"RRT 0.12",
				"10bp DNA Ladder Strand",
				"Boc-Lys(Z)-OH",
				"RRT 1."
			},
			{
				Null,
				Link[Model[Molecule,Oligomer,"id:L8kPEjn6rOaW"]],
				Link[Model[Molecule, "id:xRO9n3BPmKb5"]],
				Null
			},
			{
				<|Label->"10bp DNA Ladder Strand",Model->Link[Model[Molecule,Oligomer,"id:L8kPEjn6rOaW"]],Position->4.293333,Tolerance->1.26833335`|>,
				<|Label->"Boc-Lys(Z)-OH",Model->Link[Model[Molecule,"id:xRO9n3BPmKb5"]],Position->20.193333`,Tolerance->2.5366667`|>
			}
		}
	],
	Example[{Options,PeakAssignments, "Assign a putative molecule to the largest peak found in a range:"},
		EmeraldListLinePlot[xyPtsUnits,
			Peaks->AnalyzePeaks[xyPtsUnits,
				PeakAssignments->{
					{0;;50,Model[Molecule,"Water"]},
					{50;;150,Model[Molecule,"Caffeine"]},
					{190;;210,Model[Molecule,"Glycine"]}
				}
			]
		],
		ValidGraphicsP[]
	],
	Test["Peak assignment by maximal area in range works as intended:",
		Download[
			AnalyzePeaks[xyPtsUnits,
				PeakAssignments->{
					{0;;50,Model[Molecule,"Water"]},
					{50;;150,Model[Molecule,"Caffeine"]},
					{190;;210,Model[Molecule,"Glycine"]}
				}
			],
			{PeakAssignment,PeakLabel}
		]/.{obj:ObjectP[]:>obj[Object]},
		{
			{Null, Null, Null, Null, Null, Model[Molecule, "id:vXl9j57PmP5D"], Null, Null, Model[Molecule, "id:E8zoYvN6m61A"], Null, Null, Null, Null},
			{"1", "2", "3", "4", "5", "Water", "7", "8", "Caffeine", "10", "11", "12", "13"}
		}
	],
	Example[{Messages,"ConflictingPeakAssignments","If multiple assignments by max-area peak in a range map to the same peak, a warning will be shown:"},
		AnalyzePeaks[xyPtsUnits,
			PeakAssignments->{
				{0;;50,Model[Molecule,"Water"]},
				{51;;149,Model[Molecule,"Water"]},
				{50;;150,Model[Molecule,"Caffeine"]},
				{190;;210,Model[Molecule,"Glycine"]}
			}
		][PeakLabel],
		{"1","2","3","4","5","Water","7","8","Caffeine","10","11","12","13"},
		Messages:>{Warning::ConflictingPeakAssignments}
	],

	Example[{Messages, DeprecatedBaseline, "If a deprecated baseline option is used, a warning will be issued:"},
		AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"], Baseline->GlobalConstant][Position],
		{20.193333`,25.366667`},
		EquivalenceFunction -> RoundMatchQ[12,Force->True],
		Stubs:>{
			AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"], Baseline->GlobalConstant]=stripAppendReplaceKeyHeads@AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"], Baseline->GlobalConstant, Upload->False]
		},
		Messages:>{Warning::DeprecatedBaseline}
	],

	Example[{Options,PeakType,"Use PeakType to select the type of peak analysis that should be conducted. PeakType is automatically set by the input data type:"},
		PlotObject[
			Object[Data,NMR,"id:3em6ZvL0KNeM"],
			Peaks->AnalyzePeaks[
				Object[Data,NMR,"id:3em6ZvL0KNeM"],
				PeakType -> NMR,
				Upload->False
			],
			PlotRange->{{-0.5,5.0},Automatic}
		],
		ValidGraphicsP[]
	],
	Example[{Options,PeakType,"Set the PeakType option to Generic to disable specialized analysis, e.g. disable peak splitting analysis for NMR data:"},
		PlotObject[
			Object[Data,NMR,"id:3em6ZvL0KNeM"],
			Peaks->AnalyzePeaks[
				Object[Data,NMR,"id:3em6ZvL0KNeM"],
				PeakType -> Generic,
				Upload->False
			],
			PlotRange->{{-0.5,5.0},Automatic}
		],
		ValidGraphicsP[]
	],
	Test["The RelativeLabeling option is hidden (Null) if PeakType is not chromatography:",
		{
			Lookup[AnalyzePeaks[Object[Data,NMR,"id:3em6ZvL0KNeM"],Output->Options],RelativeLabeling],
 			Lookup[AnalyzePeaks[Object[Data,Chromatography,"id:XnlV5jmbk0rn"],Output->Options],RelativeLabeling]},
		{Null,False}
	],
	Test["All NMR splitting options are hidden if the PeakType is not NMR:",
		Lookup[
			AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],Output->Options],
			{
				OperatingFrequency, Nucleus, KnownSpecies, MaximumJSplitting,
				PeakGroupDomains, PeakIntegralNormalizationGroup, PeakGroupMultiplicity, SplittingAssignments,
				SplittingSpacingTolerance, SplittingRelativeIntegralTolerance
			}
		],
		{Null..}
	],
	Test["Make sure that all the splitting fields are empty when PeakType->Generic:",
		Lookup[
			stripAppendReplaceKeyHeads@AnalyzePeaks[
				Object[Data,NMR,"id:3em6ZvL0KNeM"],
				PeakType->Generic,
				Upload->False
			],
			{NMRChemicalShift,NMRNuclearIntegral,NMRMultiplicity,NMRJCoupling}
		],
		{Null,Null,Null,Null}
	],

	Example[{Options,Nucleus,"When conducting NMR splitting analysis with raw numerical data, the NMR nucleus must be specified explicitly:"},
		PlotNMR[rawData,Peaks->AnalyzePeaks[rawData,
			PeakType->NMR,
			Nucleus -> "1H",
 			OperatingFrequency -> 300.0 Mega Hertz
		]],
		ValidGraphicsP[],
		SetUp :> (ClearMemoization;$CreatedObjects={};rawData=Download[Object[Data,NMR,"ethyl acetate NMR data for unit testing"],NMRSpectrum]),
		TearDown :> (
			EraseObject[$CreatedObjects, Force -> True, Verbose -> False];
			Unset[$CreatedObjects]
		)
	],

	Example[{Options,OperatingFrequency,"When conducting NMR splitting analysis with raw numerical data, the NMR operating frequency must be specified explicitly:"},
		PlotNMR[rawData,Peaks->AnalyzePeaks[rawData,
			PeakType->NMR,
			Nucleus -> "1H",
 			OperatingFrequency -> 300.0 Mega Hertz
		]],
		ValidGraphicsP[],
		SetUp :> (ClearMemoization;$CreatedObjects={};rawData=Download[Object[Data,NMR,"ethyl acetate NMR data for unit testing"],NMRSpectrum]),
		TearDown :> (
			EraseObject[$CreatedObjects, Force -> True, Verbose -> False];
			Unset[$CreatedObjects]
		)
	],

	Example[{Options,DeuteratedSolvent,"When PeakType->NMR, explicitly specify the deuterated solvent used to prepare the NMR sample:"},
		PlotNMR[rawData,Peaks->AnalyzePeaks[rawData,
			PeakType->NMR,
			Nucleus -> "1H",
 			OperatingFrequency -> 300.0 Mega Hertz,
			DeuteratedSolvent->"Chloroform"
		]],
		ValidGraphicsP[],
		SetUp :> (ClearMemoization;$CreatedObjects={};rawData=Download[Object[Data,NMR,"ethyl acetate NMR data for unit testing"],NMRSpectrum]),
		TearDown :> (
			EraseObject[$CreatedObjects, Force -> True, Verbose -> False];
			Unset[$CreatedObjects]
		)
	],
	Test["The DeuteratedSolvent option resolves to one of the DeuteratedSolventP strings when possible:",
		Lookup[AnalyzePeaks[Object[Data,NMR,"id:lYq9jRxvE6mp"],Output->Options,Upload->False],DeuteratedSolvent],
		"Water"
	],
	Test["Solvent peak does not get erroneously assigned when it does not match the PPM of identified peaks:",
		AnalyzePeaks[Object[Data,NMR,"id:XnlV5jKxnEP3"],Upload->False][Replace[NMRAssignment]],
		{{Unknown,{}}..}
	],
	Test["Solvent peak for water is automatically assigned with greater tolerance given its temperature-dependence:",
		AnalyzePeaks[Object[Data,NMR,"id:lYq9jRxvE6mp"],Upload->False][Replace[NMRAssignment]],
		{{_Molecule,{_Integer}}}
	],
	Test["Solvent peak does not get assigned if observed multiplicity does not match residual solvent multiplicity:",
		AnalyzePeaks[Object[Data,NMR,"id:qdkmxzqp6RmM"],Upload->False][Replace[NMRAssignment]],
		{{Unknown,{}}..}
	],

	Example[{Options,PeakGroupDomains,"Manually specify domains to group peaks. Domains will be automatically assigned to peaks not covered by the PeakGroupDomains option:"},
		PlotObject[
			Object[Data,NMR,"id:3em6ZvL0KNeM"],
			Peaks->AnalyzePeaks[
				Object[Data,NMR,"id:3em6ZvL0KNeM"],
				PeakGroupDomains->{2.0PPM;;3.0PPM},
				Upload->False
			],
			PlotRange->{{-0.5,5.0},Automatic}
		],
		ValidGraphicsP[]
	],
	Test["Separate a nearly overlapping singlet and triplet with the PeakGroupDomains option:",
		stripAppendReplaceKeyHeads[
			AnalyzePeaks[Object[Data,NMR,"tryptophan NMR data for unit testing"],
				Exclude->{4.777,4.81},
				SmoothingRadius->{1.0},
				WidthThreshold->{0.004},
				AbsoluteThreshold->{7},
				RelativeThreshold->{0.00001},
				MaximumJSplitting->18 Hertz,
				SplittingSpacingTolerance->0.17,
				PeakGroupDomains->{7.2545PPM;;7.293PPM,7.296PPM;;7.305PPM},
				Upload->False
			]
		][NMRMultiplicity],
		{{2,2},{2,2},{2,2},{1},{3},{3},{1},{2},{2}}
	],

	Example[{Options,MaximumJSplitting,"The maximum J splitting defines the threshold for dividing peaks into peak groups:"},
		PlotObject[
			Object[Data,NMR,"ethyl acetate NMR data for unit testing"],
			Peaks->AnalyzePeaks[
				Object[Data,NMR,"ethyl acetate NMR data for unit testing"],
				AbsoluteThreshold->{40.0},
				MaximumJSplitting->0.1 PPM,
				Upload->False
			],
			PlotRange->{{-0.5,5.0},Automatic}
		],
		ValidGraphicsP[]
	],
	Example[{Options,MaximumJSplitting,"If the maximum J splitting is given in units of Hertz, it will be converted to PPM using the resolved value of the OperatingFreqeuncy option:"},
		PlotObject[
			Object[Data,NMR,"ethyl acetate NMR data for unit testing"],
			Peaks->AnalyzePeaks[
				Object[Data,NMR,"ethyl acetate NMR data for unit testing"],
				AbsoluteThreshold->{40.0},
				MaximumJSplitting->5.0 Hertz,
				Upload->False
			],
			PlotRange->{{-0.5,5.0},Automatic}
		],
		ValidGraphicsP[]
	],
	Test["When maximum J splitting is set to zero, peak will not be grouped:",
		Length[(stripAppendReplaceKeyHeads@AnalyzePeaks[
				Object[Data,NMR,"ethyl acetate NMR data for unit testing"],
				MaximumJSplitting->0.0 Hertz,
				Upload->False
		])[NMRChemicalShift]],
		10
	],
	Test["When maximum J splitting is very large, all peaks go into the same group:",
		Length[(stripAppendReplaceKeyHeads@AnalyzePeaks[
				Object[Data,NMR,"ethyl acetate NMR data for unit testing"],
				MaximumJSplitting->20.0 PPM,
				Upload->False
		])[NMRChemicalShift]],
		1
	],

	Example[{Options,SplittingSpacingTolerance,"Set the percentage deviation in peak spacings above which peaks will not be considered part of a regular splitting pattern:"},
		PlotObject[
			Object[Data,NMR,"ethyl acetate NMR data for unit testing"],
			Peaks->AnalyzePeaks[
				Object[Data,NMR,"ethyl acetate NMR data for unit testing"],
				AbsoluteThreshold->40,
				SplittingSpacingTolerance -> 0.05,
				Upload->False
			],
			PlotRange->{{-0.5,5.0},Automatic}
		],
		ValidGraphicsP[]
	],
	Test["SplittingSpacingTolerance determine wheter a group is assigned a regular splitting (e.g. triplet) or the generic multiplet label:",
		(stripAppendReplaceKeyHeads@AnalyzePeaks[
  		Object[Data, NMR, "ethyl acetate NMR data for unit testing"],
  		SplittingSpacingTolerance -> 0.05,
  		Upload -> False
  	])[NMRMultiplicity],
		{{1},{3},{"m"},{"m"}}
	],

	Example[{Options,SplittingRelativeIntegralTolerance,"Set the percentage deviation in relative peak areas above which peaks will not be considered part of a regular splitting pattern:"},
		PlotObject[
			Object[Data,NMR,"ethyl acetate NMR data for unit testing"],
			Peaks->AnalyzePeaks[
				Object[Data,NMR,"ethyl acetate NMR data for unit testing"],
				SplittingRelativeIntegralTolerance -> 0.1,
				Upload->False
			],
			PlotRange->{{-0.5,5.0},Automatic}
		],
		ValidGraphicsP[]
	],
	Test["SplittingRelativeIntegralTolerance determine wheter a group is assigned a regular splitting (e.g. triplet) or the generic multiplet label:",
		(stripAppendReplaceKeyHeads@AnalyzePeaks[
  		Object[Data, NMR, "ethyl acetate NMR data for unit testing"],
  		SplittingRelativeIntegralTolerance -> 0.1,
  		Upload -> False
  	])[NMRMultiplicity],
		{{1},{3},{"m"},{"m"}}
	],

	Example[{Options,PeakGroupDomains,"Use PeakGroupDomains to divide a triplet into three singlets:"},
		PlotObject[
			Object[Data,NMR,"id:3em6ZvL0KNeM"],
			Peaks->AnalyzePeaks[
				Object[Data,NMR,"id:3em6ZvL0KNeM"],
				PeakGroupDomains->{
					0.89PPM;;0.905PPM,
					0.91PPM;;0.93PPM,
					0.94PPM;;0.95PPM
				},
				Upload->False
			],
			PlotRange->{{-0.5,5.0},Automatic}
		],
		ValidGraphicsP[]
	],
	Test["Known splittings breaks triplet into three singlets:",
		(stripAppendReplaceKeyHeads@AnalyzePeaks[
			Object[Data,NMR,"id:3em6ZvL0KNeM"],
			PeakGroupDomains->{
				0.89PPM;;0.905PPM,
				0.91PPM;;0.93PPM,
				0.94PPM;;0.95PPM
			},
			Upload->False
		])[NMRMultiplicity],
		{{1},{1},{1},{1},{6},{1},{3}}
	],

	Example[{Options,PeakIntegralNormalizationGroup,"Explicitly specify the peak group index and corresponding integration which should be used to normalize peak areas:"},
		PlotObject[
			Object[Data,NMR,"id:3em6ZvL0KNeM"],
			Peaks->AnalyzePeaks[
				Object[Data,NMR,"id:3em6ZvL0KNeM"],
				PeakIntegralNormalizationGroup->{3,40.0},
				Upload->False
			],
			PlotRange->{{-0.5,5.0},Automatic}
		],
		ValidGraphicsP[]
	],
	Test["Multiply normalized peak integrals by 10 by setting a large PeakIntegralNormalizationGroup:",
		(stripAppendReplaceKeyHeads@AnalyzePeaks[
			Object[Data,NMR,"id:3em6ZvL0KNeM"],
			PeakIntegralNormalizationGroup->{3,40.0},
			Upload->False
		])[NMRNuclearIntegral],
		{1.64, 59.38, 40., 61., 39.45}
	],

	Example[{Options,PeakGroupMultiplicity,"Explicitly set the multiplicity of each peak group:"},
		PlotNMR[
			Object[Data,NMR,"id:3em6ZvL0KNeM"],
			Peaks->AnalyzePeaks[
				Object[Data,NMR,"id:3em6ZvL0KNeM"],
				PeakGroupMultiplicity->{"Singlet (s)", "Triplet (t)", "Multiplet (m)", "Singlet (s)", "Triplet (t)"}
			],
			PlotRange->{{-0.5,3.0},Automatic}
		],
		ValidGraphicsP[]
	],
	Example[{Options,PeakGroupMultiplicity,"Explicitly set the multiplicity of each peak group using the listed integer format:"},
		PlotNMR[
			Object[Data,NMR,"id:3em6ZvL0KNeM"],
			Peaks->AnalyzePeaks[
				Object[Data,NMR,"id:3em6ZvL0KNeM"],
				PeakGroupMultiplicity->{{1}, {3}, {"m"}, {1}, {3}}
			],
			PlotRange->{{-0.5,3.0},Automatic}
		],
		ValidGraphicsP[]
	],
	Test["Override automatically assigned multiplicities:",
		(stripAppendReplaceKeyHeads@AnalyzePeaks[
			Object[Data,NMR,"id:3em6ZvL0KNeM"],
			PeakGroupMultiplicity->{{2},{"m"},{6},{1},{4}},
			Upload->False
		])[NMRMultiplicity],
		{{2},{"m"},{6},{1},{4}},
		Messages:>{Warning::MismatchedPeakCounts}
	],

	Example[{Options,KnownSpecies,"Specify a known molecule to automatically assign peak groups to molecular substructures:"},
		PlotNMR[
			Object[Data,NMR,"ethyl acetate NMR data for unit testing"],
			Peaks->AnalyzePeaks[
				Object[Data,NMR,"ethyl acetate NMR data for unit testing"],
				KnownSpecies->{Molecule["CCOC(=O)C"]},
				AbsoluteThreshold->{36.2}
			],
			PlotRange->{{0.0,5.0},Automatic}
		],
		ValidGraphicsP[]
	],
	Test["Automatic NMR peak splitting assignment for ethyl acetate:",
		(stripAppendReplaceKeyHeads@AnalyzePeaks[
			Object[Data,NMR,"ethyl acetate NMR data for unit testing"],
			KnownSpecies->{Molecule["CCOC(=O)C"]},
			AbsoluteThreshold->{36.2},
			Upload->False
		])[NMRAssignment],
		{{Molecule["CCOC(=O)C"],{7,8,9}},{Molecule["CCOC(=O)C"],{12,13,14}},{Molecule["CCOC(=O)C"],{10,11}}}
	],
	Example[{Options,KnownSpecies,"If multiple known molecules are provided, peaks will be assigned to the molecules in order:"},
		PlotNMR[
			Object[Data,NMR,"id:3em6ZvL0KNeM"],
			Peaks->AnalyzePeaks[
				Object[Data,NMR,"id:3em6ZvL0KNeM"],
				KnownSpecies->{Molecule["CCCC(C)=O"],Molecule["C[Si](C)(C)C"]}
			],
			PlotRange->{{-.2,4.5},Automatic}
		],
		ValidGraphicsP[],
		Messages :> {Warning::MolecularAssignment}
	],
	Test["Automatic NMR peak splitting assignment for 2pentanone:",
		(stripAppendReplaceKeyHeads@AnalyzePeaks[
			Object[Data,NMR,"id:3em6ZvL0KNeM"],
			KnownSpecies->{Molecule["CCCC(C)=O"]},
			Upload->False
		])[NMRAssignment],
		{{Unknown,{}},{Molecule["CCCC(C)=O"],{7,8,9}},{Molecule["CCCC(C)=O"],{10,11}},{Molecule["CCCC(C)=O"],{14,15,16}},{Molecule["CCCC(C)=O"],{12,13}}}
	],

	Example[{Options,SplittingAssignments,"Manually assign NMR peaks to a molecule:"},
		PlotNMR[
			Object[Data,NMR,"ethyl acetate NMR data for unit testing"],
			Peaks->AnalyzePeaks[
				Object[Data,NMR,"ethyl acetate NMR data for unit testing"],
				SplittingAssignments->{
					{2.0PPM,Molecule["CCOC(=O)C"],{7,8,9}},
					{4.1PPM,Molecule["CCOC(=O)C"],{12,13,14}},
					Unknown
				},
				AbsoluteThreshold->{36.2}
			],
			PlotRange->{{0.0,5.0},Automatic}
		],
		ValidGraphicsP[]
	],
	Test["Manual peak assignment without using KnownSpecies:",
		(stripAppendReplaceKeyHeads@AnalyzePeaks[
			Object[Data,NMR,"ethyl acetate NMR data for unit testing"],
			SplittingAssignments->{
				{1.26PPM,Molecule["CCOC(=O)C"],{7,8,9}},
				{2.04PPM,Molecule["CCOC(=O)C"],{12,13,14}},
				Unknown
			},
			AbsoluteThreshold->{36.2},
			Upload->False
		])[NMRAssignment],
		{{Molecule["CCOC(=O)C"],{7,8,9}},{Molecule["CCOC(=O)C"],{12,13,14}},{Unknown,{}}}
	],
	Example[{Options,SplittingAssignments,"When KnownSpecies are provided, SplittingAssignments will override automatic assignments:"},
		PlotNMR[
			Object[Data,NMR,"ethyl acetate NMR data for unit testing"],
			Peaks->AnalyzePeaks[
				Object[Data,NMR,"ethyl acetate NMR data for unit testing"],
				KnownSpecies->{Molecule["CCOC(=O)C"]},
				SplittingAssignments->{
					{4.12PPM,Molecule["CCOC(=O)C"],{10,8,9}},
					{1.26PPM,Molecule["CCOC(=O)C"],{7,11}}
				},
				AbsoluteThreshold->{36.2}
			],
			PlotRange->{{0.0,5.0},Automatic}
		],
		ValidGraphicsP[]
	],
	Test["Override automatic assignments with the SplittingAssignments option:",
		(stripAppendReplaceKeyHeads@AnalyzePeaks[
			Object[Data,NMR,"ethyl acetate NMR data for unit testing"],
			KnownSpecies->{Molecule["CCOC(=O)C"]},
			SplittingAssignments->{
				{4.12PPM,Molecule["CCOC(=O)C"],{10,8,9}},
				{1.26PPM,Molecule["CCOC(=O)C"],{7,11}}
			},
			AbsoluteThreshold->{36.2},
			Upload->False
		])[NMRAssignment],
		{{Molecule["CCOC(=O)C"],{7,11}},{Molecule["CCOC(=O)C"],{12,13,14}},{Molecule["CCOC(=O)C"],{10,8,9}}}
	],
	Example[{Options,SplittingAssignments,"Assign a single peak group to a different molecule, e.g. assign the 0PPM peak to TMS:"},
		PlotNMR[
			Object[Data,NMR,"id:3em6ZvL0KNeM"],
			Peaks->AnalyzePeaks[
				Object[Data,NMR,"id:3em6ZvL0KNeM"],
				KnownSpecies->{Molecule["CCCC(C)=O"]},
				SplittingAssignments->{
					{0.0PPM,Molecule["C[Si](C)(C)C"],{6,7,8,9,10,11,12,13,14,15,16,17}},
					Unknown,Unknown,Unknown,Unknown
				}
			],
			PlotRange->{{-.2,4.5},Automatic}
		],
		ValidGraphicsP[]
	],
	Test["Supply a different molecule than those in KnownSpecies to the SplittingAssignments option:",
		(stripAppendReplaceKeyHeads@AnalyzePeaks[
			Object[Data,NMR,"id:3em6ZvL0KNeM"],
			KnownSpecies->{Molecule["CCCC(C)=O"]},
			SplittingAssignments->{
				{0.0PPM,Molecule["C[Si](C)(C)C"],{6,7,8,9,10,11,12,13,14,15,16,17}}
			},
			Upload->False
		])[NMRAssignment],
		{{Molecule["C[Si](C)(C)C"],{6,7,8,9,10,11,12,13,14,15,16,17}},{Molecule["CCCC(C)=O"],{7,8,9}},{Molecule["CCCC(C)=O"],{10,11}},{Molecule["CCCC(C)=O"],{14,15,16}},{Molecule["CCCC(C)=O"],{12,13}}}
	],

	Example[{Options,DataSetTransformationFunction,"Transform raw data before peak-picking:"},
		EmeraldListLinePlot[
			logLinearData,
			Scale->LogLinear,
			Peaks->AnalyzePeaks[logLinearData,
				DataSetTransformationFunction->LogLinear,
				Upload->False
			]
		],
		ValidGraphicsP[]
	],
	Example[{Options,DataSetTransformationFunction,"Specify transformations functions as pure functions {transformX,transformY}:"},
		EmeraldListLinePlot[
			logLinearData,
			Scale->LogLinear,
			Peaks->AnalyzePeaks[logLinearData,
				DataSetTransformationFunction->{(Log10[#]&),None},
				Upload->False
			]
		],
		ValidGraphicsP[]
	],
	Example[{Options,DataSetTransformationFunction,"Specify a single transformation function which takes as input {x,y} and outputs a transformed {x2,y2}:"},
		EmeraldListLinePlot[
			logLinearData,
			Scale->LogLinear,
			Peaks->AnalyzePeaks[logLinearData,
				DataSetTransformationFunction->Function[{xy},{Log10[First@xy],Last@xy}],
				Upload->False
			]
		],
		ValidGraphicsP[]
	],
	Test["Unitary transform of x-axis scales peak positions:",
		RoundReals[#,2]&/@(
			(stripAppendReplaceKeyHeads@AnalyzePeaks[xyPts,DataSetTransformationFunction->{(3.5#&),None},Upload->False])[Position]/
			(stripAppendReplaceKeyHeads@AnalyzePeaks[xyPts,Upload->False])[Position]
		),
		{3.5..}
	],
	Test["Unitary transform of y-axis scales peak heights:",
		RoundReals[#,2]&/@(
			(stripAppendReplaceKeyHeads@AnalyzePeaks[xyPts,DataSetTransformationFunction->{None,(2.5#&)},Upload->False])[Height]/
			(stripAppendReplaceKeyHeads@AnalyzePeaks[xyPts,Upload->False])[Height]
		),
		{2.5..}
	],

	Test[{Options,DataSliceDimension,"Given {time, m/z, intensity} LCMS data, conduct peaks analysis on sliced {m/z, intensity} data at a fixed elution time of one minute:"},
		PlotChromatographyMassSpectra[
			Object[Data,ChromatographyMassSpectra,"Sample LCMS Data"],
			Peaks->AnalyzePeaks[Object[Data,ChromatographyMassSpectra,"Sample LCMS Data"],
				ReferenceField->IonAbundance3D,
				DataSliceDimension->ElutionTime,
				DataSlice->1 Minute
			]
		],
		ValidGraphicsP[]
	],
	Example[{Options,DataSliceDimension,"Given {time, m/z, intensity} LCMS data, conduct peaks analysis by slicing the second dimension (m/z) between 470 and 480 g/mol:"},
		PlotChromatographyMassSpectra[
			Object[Data,ChromatographyMassSpectra,"Sample LCMS Data"],
			Peaks->{
				AnalyzePeaks[Object[Data,ChromatographyMassSpectra,"Sample LCMS Data"],
					ReferenceField->IonAbundance3D,
					DataSliceDimension->2,
					DataSlice->470 Dalton;;480 Dalton,
					ConsolidateWidth->0.5
				]
			}
		],
		ValidGraphicsP[]
	],
	Example[{Options,DataSlice,"Pick peaks in a two-dimensional slice of {time, m/z, intensity} LCMS data, sliced at a fixed elution time of one minute:"},
		PlotChromatographyMassSpectra[
			Object[Data,ChromatographyMassSpectra,"Sample LCMS Data"],
			Peaks->AnalyzePeaks[Object[Data,ChromatographyMassSpectra,"Sample LCMS Data"],
				ReferenceField->IonAbundance3D,
				DataSliceDimension->ElutionTime,
				DataSlice->1 Minute
			]
		],
		ValidGraphicsP[]
	],
	Test["Pick peaks from the average mass spectrum in the range of 6.5-7.0 minute elution times, using List:",
		PlotChromatographyMassSpectra[
			Object[Data,ChromatographyMassSpectra,"Sample LCMS Data"],
			Peaks->AnalyzePeaks[Object[Data,ChromatographyMassSpectra,"Sample LCMS Data"],
				ReferenceField->IonAbundance3D,
				DataSliceDimension->ElutionTime,
				DataSlice->6.5 Minute;;7.0 Minute
			]
		],
		ValidGraphicsP[]
	],
	Test["Conduct peaks analysis on sliced {m/z, intensity} data at a fixed elution time of one minute, using List:",
		PlotChromatographyMassSpectra[
			Object[Data,ChromatographyMassSpectra,"Sample LCMS Data"],
			Peaks->AnalyzePeaks[Object[Data,ChromatographyMassSpectra,"Sample LCMS Data"],
				ReferenceField->IonAbundance3D,
				DataSliceDimension->{ElutionTime},
				DataSlice->{1 Minute}
			]
		],
		ValidGraphicsP[]
	],
	Test["Conduct peaks analysis by slicing the second dimension (m/z) between 470 and 480 g/mol, using List:",
		PlotChromatographyMassSpectra[
			Object[Data,ChromatographyMassSpectra,"Sample LCMS Data"],
			Peaks->{
				AnalyzePeaks[Object[Data,ChromatographyMassSpectra,"Sample LCMS Data"],
					ReferenceField->IonAbundance3D,
					DataSliceDimension->{2},
					DataSlice->470 Dalton;;480 Dalton,
					ConsolidateWidth->{0.5}
				]
			}
		],
		ValidGraphicsP[]
	],
	Test["Pick peaks in a two-dimensional slice of {time, m/z, intensity} LCMS data, sliced at a fixed elution time of one minute using List:",
		PlotChromatographyMassSpectra[
			Object[Data,ChromatographyMassSpectra,"Sample LCMS Data"],
			Peaks->AnalyzePeaks[Object[Data,ChromatographyMassSpectra,"Sample LCMS Data"],
				ReferenceField->IonAbundance3D,
				DataSliceDimension->{ElutionTime},
				DataSlice->1 Minute
			]
		],
		ValidGraphicsP[]
	],
	Test["Given {time, m/z, intensity} LCMS data, pick peaks from the average mass spectrum in the range of 6.5-7.0 minute elution times, using List:",
		PlotChromatographyMassSpectra[
			Object[Data,ChromatographyMassSpectra,"Sample LCMS Data"],
			Peaks->AnalyzePeaks[Object[Data,ChromatographyMassSpectra,"Sample LCMS Data"],
				ReferenceField->IonAbundance3D,
				DataSliceDimension->{ElutionTime},
				DataSlice->6.5 Minute;;7.0 Minute
			]
		],
		ValidGraphicsP[]
	],
	Example[{Messages,"DeprecatedDataSlicePattern","If a deprecated DataSlice option pattern is specified, a warning is thrown and the deprecated pattern will be automatically converted to span:"},
		PlotChromatographyMassSpectra[Object[Data,ChromatographyMassSpectra,"Sample LCMS Data"],
			Peaks->AnalyzePeaks[Object[Data,ChromatographyMassSpectra,"Sample LCMS Data"],
			ReferenceField->IonAbundance3D,
			DataSliceDimension->{ElutionTime},
			DataSlice->{{6.5 Minute,7.0 Minute}}
			]
		],
		ValidGraphicsP[],
		Messages:>{Warning::DeprecatedDataSlicePattern}
	],
	Example[{Options,SliceReductionFunction,"By default, data sliced over a range uses the average signal in that range. Given {time, m/z, intensity} LCMS data, the average intensity at each m/z between 1-5 minutes is analyzed for peaks:"},
		PlotChromatographyMassSpectra[
			Object[Data,ChromatographyMassSpectra,"Sample LCMS Data"],
			Peaks->AnalyzePeaks[Object[Data,ChromatographyMassSpectra,"Sample LCMS Data"],
				ReferenceField->IonAbundance3D,
				DataSlice->1 Minute;;5.0 Minute
			]
		],
		ValidGraphicsP[]
	],
	Example[{Options,SliceReductionFunction,"Set SliceReductionFunction to Max to use the maximum intensity between 1-5 minutes for each m/z:"},
		PlotChromatographyMassSpectra[
			Object[Data,ChromatographyMassSpectra,"Sample LCMS Data"],
			Peaks->AnalyzePeaks[Object[Data,ChromatographyMassSpectra,"Sample LCMS Data"],
				ReferenceField->IonAbundance3D,
				DataSlice->1 Minute;;5.0 Minute,
				SliceReductionFunction->{Max}
			]
		],
		ValidGraphicsP[]
	],
	Example[{Options,SliceReferencePeaks,"Given LCMS data, pick peaks from the absorbance chromatogram (LC trace):"},
		PlotChromatographyMassSpectra[
			Object[Data,ChromatographyMassSpectra,"Sample LCMS Data"],
			PlotType->AbsorbanceChromatogram,
			Peaks->Object[Analysis,Peaks,"Sample LCMS Data LC Trace Peaks"]
		],
		ValidGraphicsP[]
	],
	Example[{Options,SliceReferencePeaks,"Use peaks from the absorbance chromatogram (LC trace) to slice the IonAbundance3D data at fixed times. The peak positions from the AbsorbanceChromatogram reference peaks will be used to automatically set slicing options, and a peaks analysis object will be created for each slice:"},
		AnalyzePeaks[Object[Data,ChromatographyMassSpectra,"Sample LCMS Data"],
			ReferenceField->IonAbundance3D,
			SliceReferencePeaks->Object[Analysis,Peaks,"Sample LCMS Data LC Trace Peaks"]
		],
		{ObjectP[Object[Analysis,Peaks]]..}
	],
	Example[{Options,SliceReferencePeaks,"Use AnalyzePeaksPreview to visualize picked-peaks for each slice:"},
		AnalyzePeaksPreview[Object[Data,ChromatographyMassSpectra,"Sample LCMS Data"],
			ReferenceField->IonAbundance3D,
			SliceReferencePeaks->Object[Analysis,Peaks,"Sample LCMS Data LC Trace Peaks"]
		],
		MenuView[{(_String->Grid[{{ValidGraphicsP[]..}}])..},___]
	],
	Test["Slice LCMS data at a fixed elution time:",
		Lookup[
			Analysis`Private`stripAppendReplaceKeyHeads@AnalyzePeaks[Object[Data,ChromatographyMassSpectra,"Sample LCMS Data"],
				ReferenceField->IonAbundance3D,
				DataSliceDimension->{ElutionTime},
				DataSlice->{1 Minute},
				Upload->False
			],
			{Position,Area}
		],
		{
			{57.2209, 71.226, 85.1311, 100.237, 127.247, 149.055, 275.201, 293.307, 419.554, 420.454, 457.467},
			{8.49125*10^7, 1.48138*10^8, 9.54925*10^7, 5.01387*10^7, 9.60204*10^7, 3.7136*10^8, 1.20319*10^8, 4.80798*10^7, 3.56761*10^8, 9.15736*10^7, 5.34121*10^7}
		},
		EquivalenceFunction->RoundMatchQ[4]
	],
	Test["Slice LCMS data over a range of elution times:",
		Lookup[
			Analysis`Private`stripAppendReplaceKeyHeads@AnalyzePeaks[Object[Data,ChromatographyMassSpectra,"Sample LCMS Data"],
				ReferenceField->IonAbundance3D,
				DataSliceDimension->{ElutionTime},
				DataSlice->2.0 Minute;;2.5 Minute,
				Upload->False
			],
			{Position,Area}
		],
		{
			{57.2209, 71.226, 85.2312, 100.237, 114.242, 127.247, 149.155, 275.301, 293.307, 419.554, 420.554, 441.462, 457.367},
			{8.23073*10^7, 1.47194*10^8, 8.84594*10^7, 5.55312*10^7, 3.80892*10^7, 8.50096*10^7, 3.35234*10^8, 9.67205*10^7, 4.1644*10^7, 3.05453*10^8, 7.87832*10^7, 3.18865*10^7, 6.57903*10^7}
		},
		EquivalenceFunction->RoundMatchQ[4]
	],
	Test["Slice LCMS data over a range of elution times, and use the max intensity at each m/z instead of the mean:",
		Lookup[
			Analysis`Private`stripAppendReplaceKeyHeads@AnalyzePeaks[Object[Data,ChromatographyMassSpectra,"Sample LCMS Data"],
				ReferenceField->IonAbundance3D,
				DataSliceDimension->{ElutionTime},
				DataSlice->1.0 Minute;;5.0 Minute,
				SliceReductionFunction->{Max},
				Upload->False
			],
			{Position,Area}
		],
		{
			{
				57.1209, 71.226, 85.3312, 92.1337, 93.034, 100.237, 108.24, 110.14, 127.147, 149.155,
				152.156, 156.157, 245.29, 275.201, 311.114, 419.554, 420.554, 441.462, 457.367, 609.423, 610.423
			},
			{
				9.86075*10^7, 1.72372*10^8, 1.05926*10^8, 1.54583*10^8, 6.09081*10^7, 6.97542*10^7, 2.05546*10^8,
				2.13774*10^8, 1.0743*10^8,3.94511*10^8, 7.5639*10^7, 6.35936*10^8, 6.13598*10^7, 1.25926*10^8, 5.12272*10^8,
				3.80463*10^8, 9.98851*10^7, 5.11447*10^7, 8.63611*10^7, 4.62696*10^8, 1.66556*10^8
			}
		},
		EquivalenceFunction->RoundMatchQ[4]
	],
	Test["Slice LCMS data from 400-420 g/mol:",
		Lookup[
			Analysis`Private`stripAppendReplaceKeyHeads@AnalyzePeaks[Object[Data,ChromatographyMassSpectra,"Sample LCMS Data"],
				ReferenceField->IonAbundance3D,
				DataSliceDimension->{MassToChargeRatio},
				DataSlice->400 Dalton;;420 Dalton,
				RelativeThreshold->{2*10^7},
				Upload->False
			],
			{Position,Area}
		],
		{
			{0.493437,0.624495},
			{761476.,463665.}
		},
		EquivalenceFunction->RoundMatchQ[4]
	],
	Test["Slicing options are automatically resolved from a reference peaks object:",
		Lookup[
			AnalyzePeaks[Object[Data,ChromatographyMassSpectra,"Sample LCMS Data"],
				ReferenceField->IonAbundance3D,
				SliceReferencePeaks->Object[Analysis,Peaks,"Sample LCMS Data LC Trace Peaks"],
				Output->Options
			],
			{DataSliceDimension,DataSlice,SliceReductionFunction}
		],
		{
			{ElutionTime},
			{
				{Quantity[0.46916624903678894`, "Minutes"]},
				{Quantity[3.318577289581299`, "Minutes"]},
				{Quantity[3.4390196800231934`, "Minutes"]},
				{Quantity[4.700955867767334`, "Minutes"]},
				{Quantity[6.90059232711792`, "Minutes"]}
			},
			{Mean}
		},
		EquivalenceFunction->RoundMatchQ[4]
	],
	Test["Use a reference peaks object to determine data slices:",
		Lookup[
			stripAppendReplaceKeyHeads@AnalyzePeaks[Object[Data,ChromatographyMassSpectra,"Sample LCMS Data"],
				ReferenceField->IonAbundance3D,
				SliceReferencePeaks->Object[Analysis,Peaks,"Sample LCMS Data LC Trace Peaks"],
				Upload->False
			],
			Position
		],
		{
			{57.1209, 71.226, 85.2312, 127.147, 149.055, 149.255, 275.301, 293.307, 419.554, 420.454, 457.467},
			{57.1209, 65.0238, 65.2239, 71.226, 85.2312, 92.1337, 93.2341, 110.14, 114.142, 127.147, 149.055, 152.156, 275.301, 419.554, 420.554, 441.462, 457.467},
  			{92.1337, 108.24, 156.157, 245.29, 311.214, 333.222},
			{71.226, 149.055, 149.255, 419.554, 609.423, 610.523},
			{149.055, 436.46, 454.466, 455.367, 472.473, 473.373}
		},
		EquivalenceFunction->RoundMatchQ[4]
	],

	Test["Plot LCMS data with an absorbance field, but no wavelength field",
		AnalyzePeaks[Object[Data, ChromatographyMassSpectra, "id:R8e1PjpE1NJ7"], Output -> Preview],
		ValidGraphicsP[]
	],

	Example[{Options, ManualPeakRanges, "Override the peak-picking algorithm by explicitly setting peak ranges:"},
		AnalyzePeaksPreview[Object[Data,Chromatography,"id:XnlV5jmbk0rn"],ManualPeakRanges->{19.2;;22.7,22.8;;23.8,24.0;;28.0}],
		ValidGraphicsP[]
	],
	Example[{Options, ManualPeakRanges, "Set PeakType to Manual to automatically populate ManualPeakRanges with results from the peak-picking algorithm:"},
		Lookup[
			AnalyzePeaksOptions[Object[Data,Chromatography,"id:XnlV5jmbk0rn"],PeakType->Manual,OutputFormat->List],
			{ManualPeakRanges,ManualPeakPositions}
		],
		{
			{_Span..},
			{NumericP..}
		}
	],
	Example[{Options, ManualPeakPositions, "Manually specify the position of a peak in a peak range. These values must be index-matched to the ManualPeakRanges and lie within the specified range spans:"},
		AnalyzePeaksPreview[Object[Data,Chromatography,"id:XnlV5jmbk0rn"],ManualPeakRanges->{24.0;;32.0},ManualPeakPositions->{27.0}],
		ValidGraphicsP[]
	],
	Example[{Options, ManualPeakPositions, "If manual positions are not specified but manual ranges are, the maximum value in each manual range will be used as the peak position:"},
		AnalyzePeaksPreview[Object[Data,Chromatography,"id:XnlV5jmbk0rn"],ManualPeakRanges->{24.0;;32.0}],
		ValidGraphicsP[]
	],
	Test["If ManualPeakRanges is {}, no peaks will be identified:",
		Lookup[
			Analysis`Private`stripAppendReplaceKeyHeads@AnalyzePeaks[
				Object[Data,Chromatography,"id:XnlV5jmbk0rn"],
				ManualPeakRanges->{},
				Upload->False
			],
			{Position,Area,Height}
		],
		{{},{},{}}
	],
	Test["Manual peak selection options are master-switched by the PeakType option:",
		{
			Lookup[
				AnalyzePeaks[Object[Data,Chromatography,"id:XnlV5jmbk0rn"],Output->Options],
				{PeakType,ManualPeakPositions,ManualPeakRanges}
			],
			Lookup[
				AnalyzePeaks[Object[Data,Chromatography,"id:XnlV5jmbk0rn"],PeakType->Manual,Output->Options],
				{PeakType,ManualPeakPositions,ManualPeakRanges}
			]
		},
		{
			{Chromatography, Null, Null},
			{Manual, {20.193333`,25.366667`}, {19.193333`;;22.706667`,23.946667`;;32.2`}}
		},
		EquivalenceFunction->RoundMatchQ[5]
	],
	Test["Peak type resolved to Manual when ManualPeakRanges is specified:",
		Lookup[
			AnalyzePeaks[Object[Data,Chromatography,"id:XnlV5jmbk0rn"],ManualPeakRanges->{20;;25,26;;30},Output->Options],
			PeakType
		],
		Manual
	],

	Example[{Messages,"DomainInvalidForManual","When using Manual peak selection, the Domain option cannot be set:"},
		AnalyzePeaks[
			Object[Data,Chromatography,"id:XnlV5jmbk0rn"],
			ManualPeakRanges->{24.0;;32.0},
			Domain->{40;;50}
		],
		$Failed,
		Messages:>{Error::DomainInvalidForManual, Error::InvalidOption}
	],
	Example[{Messages,"DomainInvalidForManual","When using Manual peak selection, the Domain option (even using List) cannot be set:"},
		AnalyzePeaks[
			Object[Data,Chromatography,"id:XnlV5jmbk0rn"],
			ManualPeakRanges->{24.0;;32.0},
			Domain->{{40,50}}
		],
		$Failed,
		Messages:>{Error::DomainInvalidForManual, Error::InvalidOption}
	],

	Example[{Messages,"InvalidManualOptionLengths","When both are specified, the ManualPeakPositions options must be index-matched to the ManualPeakRanges option:"},
		AnalyzePeaks[
			Object[Data,Chromatography,"id:XnlV5jmbk0rn"],
			ManualPeakRanges->{24.0;;32.0},
			ManualPeakPositions->{25.0, 27.0}
		],
		$Failed,
		Messages:>{Error::InvalidManualOptionLengths, Error::InvalidOption}
	],
	Example[{Messages,"InvalidManualRanges","Peak ranges specified in the ManualPeakRanges option must be mutually non-overlapping:"},
		AnalyzePeaks[
			Object[Data,Chromatography,"id:XnlV5jmbk0rn"],
			ManualPeakRanges->{10;;40,20;;50}
		],
		$Failed,
		Messages:>{Error::InvalidManualRanges, Error::InvalidOption}
	],
	Example[{Messages,"InvalidManualPositions","Each manual peak position must lie within its index-matched manual peak range:"},
		AnalyzePeaks[
			Object[Data,Chromatography,"id:XnlV5jmbk0rn"],
			ManualPeakRanges->{24.0;;32.0, 35.0;;40.0},
			ManualPeakPositions->{25.0,42.0}
		],
		$Failed,
		Messages:>{Error::InvalidManualPositions, Error::InvalidOption}
	],

	Example[{Messages, "UnrecognizedPeaksField", "If invalid ReferenceField is given, there will be warning message and default ReferenceField will be used:"},
		AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"], ReferenceField -> AbsorbanceSpectrum][Position],
		{20.193333`,25.366667`},
		Messages :> {Warning::UnrecognizedPeaksField},
		EquivalenceFunction -> RoundMatchQ[12,Force->True]
	],

	Example[{Messages, "UnrecognizedWavelength", "For 3D Chromatography data, Wavelength must exist in input data:"},
		AnalyzePeaks[Object[Data,Chromatography,"id:lYq9jRxnrP9l"],Wavelength->60 Nanometer],
		$Failed,
		Messages :> {Error::InvalidOption, Error::UnrecognizedWavelength}
	],

	Example[{Messages, "WavelengthMismatch", "If Wavelength and ReferenceField options are specified, Wavelength option should match the wavelength that Absorbance is read:"},
		AnalyzePeaks[Object[Data,Chromatography,"id:lYq9jRxnrP9l"], Wavelength -> 260 Nanometer, ReferenceField->Absorbance][Position],
		{3.912`},
		Messages :> {Warning::WavelengthMismatch}
	],

	Example[{Messages,"InputContainsTemporalLinks","Warn the user if any of the inputs contain temporal links:"},
		AnalyzePeaks[
			Link[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],DateObject["Now"]]
		][Position],
		{20.193333`,25.366667`},
		Messages :> {Warning::InputContainsTemporalLinks}
	],

	Example[{Messages,"ParentPeaksMismatch","Default to the largest peak if ParentPeaks is supplied a label that can't be matched to known labels:"},
		AnalyzePeaks[Object[Data, Chromatography, "id:BYDOjvGo8z9q"],
			Domain->{0.5;;1.5},
			AbsoluteThreshold->{50},
			PeakAssignments->{
				{0.88 Minute,Model[Molecule,"Caffeine"],10 Second},
				{1.04 Minute,Model[Molecule,"Uracil"],10 Second}
			},
			ParentPeaks -> {"Uracil","Pancakes"}
		][ParentPeak],
		{"Uracil","Uracil"},
		Messages :> {Warning::ParentPeaksMismatch}
	],
	Example[{Messages,"ParentPeakIndices","If ParentPeaks are specified with an index larger than the number of identified peaks, these will be defaulted to the index of the largest peak:"},
		AnalyzePeaks[Object[Data, Chromatography, "id:BYDOjvGo8z9q"],
			Domain->{0.5;;1.5},
			AbsoluteThreshold->{50},
			ParentPeaks -> {1,3}
		][ParentPeak],
		{"1","2"},
		Messages :> {Warning::ParentPeakIndices}
	],

	Example[{Messages,"ParentPeaksPadded","If extra parent peaks are specified, they will be ignored with a warning:"},
		AnalyzePeaks[Object[Data, Chromatography, "id:BYDOjvGo8z9q"],
			Domain->{0.5;;1.5},
			AbsoluteThreshold->{50},
			PeakAssignments->{
				{0.88 Minute,Model[Molecule,"Caffeine"],10 Second},
				{1.04 Minute,Model[Molecule,"Uracil"],10 Second}
			},
			ParentPeaks -> {"Uracil","Uracil","Uracil"}
		][ParentPeak],
		{"Uracil","Uracil"},
		Messages :> {Warning::ParentPeaksPadded}
	],
	Example[{Messages,"ParentPeaksPadded","If insufficient parent peaks are specified, the unspecified parent peaks will be automatically assigned to the largest peak by area:"},
		AnalyzePeaks[Object[Data, Chromatography, "id:BYDOjvGo8z9q"],
			Domain->{0.5;;1.5},
			AbsoluteThreshold->{50},
			PeakAssignments->{
				{0.88 Minute,Model[Molecule,"Caffeine"],10 Second},
				{1.04 Minute,Model[Molecule,"Uracil"],10 Second}
			},
			ParentPeaks -> {"Caffeine"}
		][ParentPeak],
		{"Caffeine","Uracil"},
		Messages :> {Warning::ParentPeaksPadded}
	],

	Example[{Messages,"ExcludeOverwriteInclude","If peak x-values lie in both the Include and Exclude options, these points will be excluded:"},
		With[{peaks=AnalyzePeaks[xyPts,Exclude->{12,65,125,175},Include->{65,125},Upload->False]},
			EmeraldListLinePlot[xyPts,Peaks->peaks]
		],
		_?ValidGraphicsQ,
		Messages :> {Warning::ExcludeOverwriteInclude},
		SetUp :> ($CreatedObjects = {};xyPts={{-60.4703`,1.587`},{-59.8914`,-2.9288`},{-59.3126`,-2.8543`},{-58.7337`,-3.6064`},{-58.1548`,-3.5293`},{-57.5759`,-7.4673`},{-56.9971`,0.8248`},{-56.4182`,23.293`},{-55.8393`,0.3193`},{-55.2604`,-13.9593`},{-54.6816`,-12.3607`},{-54.1027`,-3.2422`},{-53.5238`,-4.832`},{-52.9449`,-8.3469`},{-52.3661`,-14.6887`},{-51.7872`,-17.8354`},{-51.2083`,-11.4492`},{-50.6294`,-13.8761`},{-50.0505`,-7.6376`},{-49.4717`,-20.6722`},{-48.8928`,-6.1023`},{-48.3139`,-3.0062`},{-47.735`,6.8016`},{-47.1562`,23.4155`},{-46.5773`,0.9423`},{-45.9984`,19.5976`},{-45.4195`,0.8777`},{-44.8407`,2.3731`},{-44.2618`,16.3106`},{-43.6829`,4.7338`},{-43.104`,7.0143`},{-42.5252`,-0.4604`},{-41.9463`,16.6188`},{-41.3674`,-7.5774`},{-40.7885`,4.786`},{-40.2096`,9.1225`},{-39.6308`,6.0894`},{-39.0519`,8.1521`},{-38.473`,0.7713`},{-37.8941`,24.0671`},{-37.3153`,-5.3851`},{-36.7364`,7.6461`},{-36.1575`,6.2401`},{-35.5786`,5.5707`},{-34.9998`,-3.8426`},{-34.4209`,-8.1403`},{-33.842`,4.7625`},{-33.2631`,-11.033`},{-32.6843`,-10.0288`},{-32.1054`,-9.4915`},{-31.5265`,6.0948`},{-30.9476`,22.7781`},{-30.3687`,-18.0986`},{-29.7899`,-5.7582`},{-29.211`,-7.9967`},{-28.6321`,17.574`},{-28.0532`,9.6356`},{-27.4744`,-12.3885`},{-26.8955`,-9.992`},{-26.3166`,-8.0265`},{-25.7377`,-6.8299`},{-25.1589`,-8.0575`},{-24.58`,9.9059`},{-24.0011`,4.6671`},{-23.4222`,29.4874`},{-22.8434`,-5.0773`},{-22.2645`,3.1678`},{-21.6856`,-3.0654`},{-21.1067`,-4.1394`},{-20.5278`,-12.4577`},{-19.949`,-7.0589`},{-19.3701`,-10.7888`},{-18.7912`,4.4065`},{-18.2123`,5.4024`},{-17.6335`,6.2734`},{-17.0546`,-4.4128`},{-16.4757`,9.1531`},{-15.8968`,-17.4617`},{-15.318`,-5.7665`},{-14.7391`,-8.6346`},{-14.1602`,-1.6776`},{-13.5813`,5.549`},{-13.0025`,-1.2764`},{-12.4236`,1.6277`},{-11.8447`,-6.2084`},{-11.2658`,5.6592`},{-10.6869`,4.7049`},{-10.1081`,8.8459`},{-9.5292`,-5.952`},{-8.9503`,14.4889`},{-8.3714`,23.2175`},{-7.7926`,21.225`},{-7.2137`,15.7654`},{-6.6348`,-2.578`},{-6.0559`,8.965`},{-5.4771`,-9.7285`},{-4.8982`,-2.9533`},{-4.3193`,75.6051`},{-3.7404`,16.4113`},{-3.1616`,14.9865`},{-2.5827`,-11.3331`},{-2.0038`,-2.0928`},{-1.4249`,-0.9202`},{-0.846`,0.2394`},{-0.2672`,6.0783`},{0.3117`,12.7922`},{0.8906`,149.8234`},{1.4695`,137.478`},{2.0483`,73.5309`},{2.6272`,20.1371`},{3.2061`,13.3703`},{3.785`,-1.6624`},{4.3638`,-5.3309`},{4.9427`,6.2866`},{5.5216`,-4.5244`},{6.1005`,-15.892`},{6.6793`,-17.247`},{7.2582`,-3.521`},{7.8371`,47.9696`},{8.416`,48.6575`},{8.9949`,143.0855`},{9.5737`,262.487`},{10.1526`,433.1576`},{10.7315`,655.7522`},{11.3104`,789.8354`},{11.8892`,812.2174`},{12.4681`,768.5621`},{13.047`,657.1636`},{13.6259`,473.0125`},{14.2047`,347.134`},{14.7836`,228.5908`},{15.3625`,146.17`},{15.9414`,77.1921`},{16.5202`,93.6922`},{17.0991`,41.6889`},{17.678`,34.9402`},{18.2569`,24.9377`},{18.8358`,6.303`},{19.4146`,7.6878`},{19.9935`,-0.4913`},{20.5724`,4.309`},{21.1513`,7.6213`},{21.7301`,14.0376`},{22.309`,10.5065`},{22.8879`,-5.2162`},{23.4668`,3.6696`},{24.0456`,-1.3919`},{24.6245`,13.7266`},{25.2034`,26.7292`},{25.7823`,-0.9272`},{26.3611`,-5.163`},{26.94`,-2.0984`},{27.5189`,-4.7001`},{28.0978`,-15.0261`},{28.6767`,-6.6703`},{29.2555`,-4.7324`},{29.8344`,-9.1476`},{30.4133`,-11.197`},{30.9922`,-18.8589`},{31.571`,-18.5209`},{32.1499`,-7.7127`},{32.7288`,-17.283`},{33.3077`,10.2485`},{33.8865`,0.7054`},{34.4654`,17.6433`},{35.0443`,26.3025`},{35.6232`,-4.1029`},{36.202`,9.6538`},{36.7809`,50.4171`},{37.3598`,71.2644`},{37.9387`,193.1155`},{38.5176`,510.2275`},{39.0964`,954.8649`},{39.6753`,1316.5008`},{40.5055`,1341.1692`},{41.6568`,1026.4138`},{42.8081`,549.0985`},{43.9595`,223.7178`},{45.1108`,34.8255`},{46.2621`,-25.6132`},{47.4134`,-69.3664`},{48.5647`,-100.2309`},{49.716`,-90.0365`},{50.8673`,-110.048`},{52.0186`,-89.8928`},{53.1699`,-70.6448`},{54.3212`,-66.6014`},{55.4725`,-7.3808`},{56.6238`,24.2758`},{57.7751`,44.6924`},{58.9264`,89.7889`},{60.0777`,151.1335`},{61.229`,290.8439`},{62.3803`,536.4023`},{63.5317`,956.7083`},{64.683`,1382.7361`},{65.8685`,1552.8259`},{68.4379`,1408.1517`},{71.2857`,1056.4687`},{74.1335`,772.6727`},{76.9813`,502.9082`},{79.8291`,456.0177`},{82.6769`,597.0413`},{85.5247`,933.6729`},{88.3726`,1140.7761`},{91.3774`,1132.9723`},{94.5917`,934.8548`},{97.8059`,695.1553`},{101.0202`,506.9661`},{104.2344`,526.7152`},{107.4487`,886.2472`},{110.6629`,1485.9208`},{113.8772`,1962.2649`},{117.2542`,1986.5373`},{120.9477`,1602.6262`},{124.6412`,1052.4658`},{128.3347`,520.8706`},{132.0283`,237.5131`},{135.7218`,179.6594`},{139.4153`,194.352`},{143.1088`,188.4899`},{146.8023`,193.5516`},{150.4959`,149.3122`},{154.1894`,68.9806`},{157.8829`,26.3029`},{161.5764`,32.2454`},{165.2699`,82.5101`},{168.9635`,171.1333`},{172.657`,342.7152`},{176.3505`,529.9803`},{180.044`,653.1731`},{183.7376`,523.2293`},{187.4311`,361.8707`},{191.1246`,167.4945`},{194.8181`,61.7772`},{198.5116`,60.4075`},{202.2052`,35.8679`},{205.8987`,44.0184`},{209.5922`,65.031`},{213.2857`,95.5418`},{216.9792`,120.0814`},{220.6728`,175.8616`},{224.3663`,244.9024`},{228.0598`,308.0053`},{231.7533`,342.9063`},{235.4469`,388.0488`},{239.1404`,402.7888`},{242.8339`,364.4319`},{246.5274`,337.8086`},{250.2209`,229.8374`},{253.9145`,156.6267`},{257.608`,33.2384`},{261.3015`,-62.4133`},{264.995`,-107.0692`},{268.6885`,-145.7654`},{272.3821`,-167.8836`},{276.0756`,-174.4012`},{279.7691`,-160.7985`},{283.4626`,-94.334`},{287.1562`,-132.8897`},{290.8497`,-88.0442`},{294.5432`,-24.0263`},{298.2367`,17.0242`},{301.9302`,39.8069`},{305.6238`,53.6636`},{309.3173`,58.9873`},{313.0108`,23.7347`},{316.7043`,-15.399`},{320.3978`,-13.7185`},{324.0914`,-29.1139`},{327.7849`,-37.6242`},{331.4784`,-40.0249`},{335.1719`,-26.3684`},{338.8654`,-21.9221`},{342.559`,-23.7979`},{346.2525`,-14.4608`},{349.946`,-0.908`},{353.6395`,-8.8529`},{357.3331`,-8.4405`}}),
		TearDown :> (
			EraseObject[$CreatedObjects, Force -> True, Verbose -> False];
			Unset[$CreatedObjects]
		)
	],

	Example[{Messages,"PeakLabelsMismatch","If more peak labels than peaks are supplied, they will be ignored:"},
		AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],	AbsoluteThreshold -> {500},PeakLabels -> {"Adam","Bob","Charlie","Doug","Edith"}][PeakLabel],
		{"Adam","Bob","Charlie"},
		Messages :> {Warning::PeakLabelsMismatch}
	],

	Example[{Messages,"ParentPeaksMismatch","Labels in the ParentPeak option will default to the largest peak if they do not exist in the PeakLabels option or as names of models in the PeakAssignments option:"},
		AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],
			ParentPeaks -> {"power", "wisdom", "courage"}, AbsoluteThreshold -> {300},
			Output->Preview,
			Upload -> False],
		ValidGraphicsP[],
		Messages:>{Warning::ParentPeaksMismatch}
	],

	Example[{Messages,"OptionUnavailable","The RelativeLabeling option is only used when PeakType->Chromatography, and will be ignored if PeakType is anything else, e.g. NMR:"},
		AnalyzePeaks[Object[Data,NMR,"ethyl acetate NMR data for unit testing"],
			RelativeLabeling->True,
			Output->Preview,
			Upload->False
		],
		ValidGraphicsP[],
		Messages:>{Warning::OptionUnavailable}
	],

	Example[{Messages,"IncompatibleUnits","If more peak labels than peaks are supplied, they will be ignored:"},
		AnalyzePeaks[Object[Data,Chromatography,"id:XnlV5jmbk0rn"],
			PeakAssignments->{
				{20Mole,Model[Molecule,"id:xRO9n3BPmKb5"],1Minute},
				{25 Minute,Model[Molecule,Oligomer,"id:L8kPEjn6rOaW"],1 RFU}
			}
		],
		$Failed,
		Messages:>{Error::IncompatibleUnits,Error::InvalidOption}
	],

	Example[{Messages,"EmptySplittingDomain","If no peaks are found in one of the PeakGroupDomains, it will be ignored:"},
		PlotObject[
			Object[Data,NMR,"id:3em6ZvL0KNeM"],
			Peaks->AnalyzePeaks[
				Object[Data,NMR,"id:3em6ZvL0KNeM"],
				PeakGroupDomains->{3.0PPM;;4.0PPM},
				Upload->False
		  ],
		 PlotRange -> {{-0.2, 4}, Automatic}
		],
		ValidGraphicsP[],
		Messages:>{Warning::EmptySplittingDomain}
	],
	Example[{Messages,"InvalidSplittingDomains","PPM ranges in PeakGroupDomains option must not overlap:"},
		AnalyzePeaks[Object[Data,NMR,"tryptophan NMR data for unit testing"],
 			PeakGroupDomains->{7.05PPM;;7.1 PPM,5.0PPM;;8.0 PPM}
 		],
		$Failed,
		Messages:>{Error::InvalidSplittingDomains,Error::InvalidOption}
	],
	Example[{Messages,"InvalidSplittingDomains","PPM ranges in PeakGroupDomains option must be increasing:"},
		AnalyzePeaks[Object[Data,NMR,"tryptophan NMR data for unit testing"],
 			PeakGroupDomains->{7.0PPM;;5.0PPM}
 		],
		$Failed,
		Messages:>{Error::InvalidSplittingDomains,Error::InvalidOption}
	],
	Example[{Messages,"ParameterMismatch","OperatingFrequency option does not match that present in the input data:"},
		PlotObject[
			Object[Data,NMR,"id:3em6ZvL0KNeM"],
			Peaks->AnalyzePeaks[
				Object[Data,NMR,"id:3em6ZvL0KNeM"],
				OperatingFrequency->500.0 Mega Hertz,
				Upload->False
			]
		],
		ValidGraphicsP[],
		Messages:>{Warning::ParameterMismatch}
	],
	Test["Parameter mismatch warning works for Nucleus option:",
		AnalyzePeaks[
			Object[Data,NMR,"id:3em6ZvL0KNeM"],
			Nucleus->"13C",
			Upload->False
		],
		PacketP[],
		Messages:>{Warning::ParameterMismatch}
	],
	Test["The OperatingFrequency option will change calculated J-couplings:",
		(stripAppendReplaceKeyHeads@AnalyzePeaks[
			Object[Data,NMR,"id:3em6ZvL0KNeM"],
			OperatingFrequency->500 Mega Hertz,
			Upload->False
		])[NMRJCoupling],
		{{},{Quantity[12.42,"Hertz"]},{Quantity[12.28,"Hertz"]},{},{Quantity[12.18, "Hertz"]}},
		Messages:>{Warning::ParameterMismatch}
	],
	Example[{Messages,"ParameterNotFound","If PeakType->NMR, then NMR nucleus must be informed:"},
		AnalyzePeaks[Download[Object[Data,NMR,"ethyl acetate NMR data for unit testing"],NMRSpectrum],
			PeakType->NMR,
			Nucleus -> "1H"
		],
		$Failed,
		Messages:>{Error::ParameterNotFound,Error::InvalidOption}
	],
	Example[{Messages,"ParameterNotFound","If PeakType->NMR, then OperatingFrequency must be informed:"},
		AnalyzePeaks[Download[Object[Data,NMR,"ethyl acetate NMR data for unit testing"],NMRSpectrum],
			PeakType->NMR,
 			OperatingFrequency -> 300.0 Mega Hertz
		],
		$Failed,
		Messages:>{Error::ParameterNotFound,Error::InvalidOption}
	],
	Test["Assign a splitting to an empty peak group domain:",
		AnalyzePeaks[
				Object[Data,NMR,"id:3em6ZvL0KNeM"],
				PeakGroupDomains -> {1.0PPM;;1.1PPM},
				SplittingAssignments -> {{1.1 PPM, Molecule["C[Si](C)(C)C"], {11}}},
				Upload->False
		],
		PacketP[],
		Messages:>{Warning::EmptySplittingDomain,Warning::UnmatchedAssignment}
	],

	Example[{Messages,"MismatchedPeakCounts","A warning message will be displayed if PeakGroupMultiplicity is used to assign a multiplicity inconsistent with the number of peaks in a peak group, e.g. if a single peak is labeled as a triplet:"},
		PlotObject[
			Object[Data, NMR, "ethyl acetate NMR data for unit testing"],
			Peaks->AnalyzePeaks[
				Object[Data, NMR, "ethyl acetate NMR data for unit testing"],
				PeakGroupMultiplicity->{"Triplet (t)", "Triplet (t)", "Multiplet (m)", "Quartet (q)"},
				Upload->False
			],
			PlotRange->{{-0.5,6.0},Automatic}
		],
		ValidGraphicsP[],
		Messages:>{Warning::MismatchedPeakCounts}
	],
	Example[{Messages,"InvalidMultiplicity","Multiple splittings may only contain integers greater than two:"},
		AnalyzePeaks[Object[Data,NMR,"id:3em6ZvL0KNeM"],
			PeakGroupMultiplicity->{
				{1},
				{3},
				{3,1,2},
				{1},
				{3}
			},
  		Upload -> False
		],
		$Failed,
		Messages:>{Error::InvalidMultiplicity,Error::InvalidOption}
	],
	Example[{Messages,"NucleusMismatch","All atoms in molecules indexed in SplittingAssignments must match the NMR nucleus type, e.g. all atoms must be hydrogen:"},
		AnalyzePeaks[Object[Data,NMR,"id:3em6ZvL0KNeM"],
			KnownSpecies->{Molecule["CCCC(C)=O"]},
			SplittingAssignments->{{0.0PPM,Molecule["C[Si](C)(C)C"],{5,11}}},
			Upload->False
		],
		$Failed,
		Messages:>{Error::NucleusMismatch,Error::InvalidOption}
	],
	Example[{Messages,"DuplicateAssignment","If multiple splitting assignments are matched to the same peak group, only the first one will be used:"},
		PlotPeaks@AnalyzePeaks[Object[Data,NMR,"id:3em6ZvL0KNeM"],
			KnownSpecies->{Molecule["CCCC(C)=O"]},
			SplittingAssignments->{{1.6PPM,Molecule["CCCC(C)=O"],{10,11}},{1.61PPM,Molecule["CCCC(C)=O"],{8}}},
			Upload->False
		],
		ValidGraphicsP[],
		Messages:>{Warning::DuplicateAssignment}
	],
	Example[{Messages,"UnmatchedAssignment","If a splitting assignment cannot be matched to any peak groups, it will be ignored:"},
		PlotPeaks@AnalyzePeaks[Object[Data,NMR,"id:3em6ZvL0KNeM"],
			KnownSpecies->{Molecule["CCCC(C)=O"]},
			SplittingAssignments->{{20.0 PPM,Molecule["CCCC(C)=O"],{10,11}}},
			Upload->False
		],
		ValidGraphicsP[],
		Messages:>{Warning::UnmatchedAssignment}
	],

	Example[{Messages,"SplittingIgnoreUnits","If the input data does not have units of PPM vs. Intensity, units will be ignored:"},
		PlotNMR[rawData,Peaks->AnalyzePeaks[rawData,
			PeakType->NMR,
			Nucleus -> "1H",
 			OperatingFrequency -> 300.0 Mega Hertz,
			Upload->False
		]],
		ValidGraphicsP[],
		Messages:>{Warning::SplittingIgnoreUnits},
		SetUp :> ($CreatedObjects={};rawData=Unitless[Download[Object[Data,NMR,"ethyl acetate NMR data for unit testing"],NMRSpectrum]]),
		TearDown :> (
			EraseObject[$CreatedObjects, Force -> True, Verbose -> False];
			Unset[$CreatedObjects]
		)
	],
	Example[{Messages,"AutomaticAssignmentNotAvailable","Automatic assignment of peak groups to molecules is not available for some nucleus types, e.g. for 19F NMR:"},
		PlotObject[
			Object[Data,NMR,"id:Z1lqpMGJl0k9"],
			Peaks->AnalyzePeaks[
				Object[Data,NMR,"id:Z1lqpMGJl0k9"],
				WidthThreshold->{0.},
				KnownSpecies->{Molecule["FCCCF"]},
				Upload->False
			]
		],
		ValidGraphicsP[],
		Messages:>{Warning::AutomaticAssignmentNotAvailable,Warning::MolecularAssignment}
	],
	Example[{Messages,"MolecularAssignment","Show a warning any of the molecules in KnownSpecies could not be assigned to peaks:"},
		PlotPeaks[
			AnalyzePeaks[Object[Data, NMR, "ethyl acetate NMR data for unit testing"],
  			Exclude->{2.0514},
				KnownSpecies->{Molecule["benzene"]},
				Upload->False
			]
		],
		ValidGraphicsP[],
		Messages:>{Warning::MolecularAssignment},
		Stubs:>{
			AnalyzePeaks[Object[Data, NMR, "ethyl acetate NMR data for unit testing"],
				Exclude->{2.0514},
				KnownSpecies->{Molecule["benzene"]}
			]=stripAppendReplaceKeyHeads@AnalyzePeaks[Object[Data, NMR, "ethyl acetate NMR data for unit testing"],
				Exclude->{2.0514},
				KnownSpecies->{Molecule["benzene"]},
				Upload->False
			]
		}
	],
	Example[{Messages,"InvalidTransformation","Show an error if the provided DataSetTransformationFunction fails to convert {x,y} coordinates into valid coordinates that match CoordinatesP:"},
		AnalyzePeaks[logLinearData,
			DataSetTransformationFunction->Function[{xy},Total[xy]]
		],
		$Failed,
		Messages:>{Error::InvalidTransformation,Error::InvalidOption}
	],

	Example[{Messages,"PeakGroupMultiplicityMismatch","If PeakGroupMultiplicity has smaller length than the number of resolved peak groups, unspecified entries will be defaulted:"},
		AnalyzePeaksPreview[
			Object[Data,NMR,"id:3em6ZvL0KNeM"],
			PeakGroupMultiplicity->{"Singlet (s)"}
		],
		ValidGraphicsP[],
		Messages:>{Warning::PeakGroupMultiplicityMismatch}
	],
	Example[{Messages,"PeakGroupMultiplicityMismatch","If PeakGroupMultiplicity has greater length than the number of resolved peak groups, extra entries will be ignored:"},
		AnalyzePeaksPreview[
			Object[Data,NMR,"id:3em6ZvL0KNeM"],
			PeakGroupMultiplicity->{"Singlet (s)", "Triplet (t)", "Sextet (sx)", "Singlet (s)", "Triplet (t)", "Quartet (q)", "Quartet (q)", "Quartet (q)"}
		],
		ValidGraphicsP[],
		Messages:>{Warning::PeakGroupMultiplicityMismatch}
	],
	Example[{Messages,"AreaToleranceExceeded","If PeakGroupMultiplicity is used to assign a splitting which falls outside of tolerances (e.g. assign a triplet to peak areas which are not 1:2:1), show a warning message:"},
		AnalyzePeaksPreview[Object[Data, NMR, "id:qdkmxzqp6RmM"],
			PeakGroupMultiplicity -> {{"m"}, {3}, {1}, {4}, {"m"}}
		],
		ValidGraphicsP[],
		Messages:>{Warning::AreaToleranceExceeded}
	],
	Example[{Messages,"SpacingToleranceExceeded","If PeakGroupMultiplicity is used to assign a splitting which falls outside of tolerances (e.g. assign a multiple splitting to unevenly spaced peaks), show a warning message:"},
		AnalyzePeaksPreview[Object[Data, NMR, "id:qdkmxzqp6RmM"],
			PeakGroupMultiplicity -> {{"m"}, {"m"}, {1}, {4}, {2, 2, 2}}
		],
		ValidGraphicsP[],
		Messages:>{Warning::SpacingToleranceExceeded}
	],
	Example[{Messages,"ReverseComplexCoupling","Automatic J-factor calculation for multiple splitting (e.g. triplet of doublet of doublets) is only supported when peaks do not overlap, i.e. the number of peaks in the group is equal to the product of multiplicities:"},
		AnalyzePeaksPreview[Object[Data, NMR, "id:qdkmxzqp6RmM"],
			PeakGroupMultiplicity -> {{"m"}, {"m"}, {1}, {4}, {3, 2, 2}}
		],
		ValidGraphicsP[],
		Messages:>{Warning::ReverseComplexCoupling}
	],
	Example[{Messages,"InvalidNamedDimension","Show an error if the named DataSliceDimension is incompatible with the provided ReferenceField. Error message shows a list of valid named fields:"},
		AnalyzePeaks[Object[Data,ChromatographyMassSpectra,"Sample LCMS Data"], ReferenceField->IonAbundance3D, DataSliceDimension->{Wavelength}],
		$Failed,
		Messages:>{Error::InvalidNamedDimension,Error::InvalidInput}
	],
	Example[{Messages,"SliceDimensionOutOfBounds","If the DataSliceDimension is provided as an integer, show an error if the slice index is greater than the dimensionality of the ReferenceField:"},
		AnalyzePeaks[Object[Data,ChromatographyMassSpectra,"Sample LCMS Data"], ReferenceField->IonAbundance3D, DataSliceDimension->{4}],
		$Failed,
		Messages:>{Error::SliceDimensionOutOfBounds,Error::InvalidInput}
	],
	Example[{Messages,"InvalidSliceDimension","Show an error if the requested data slice does not result in two-dimensional data. Here, slicing 3D data on two dimensions would result in 1D data:"},
		AnalyzePeaks[Object[Data,ChromatographyMassSpectra,"Sample LCMS Data"], ReferenceField->IonAbundance3D, DataSliceDimension->{1,2}],
		$Failed,
		Messages:>{Error::InvalidSliceDimension,Error::InvalidInput}
	],
	Example[{Messages,"InvalidSliceLength","Show an error if the DataSlice does not match the length of DataSlice dimension. DataSlice is index-matched to the DataSliceDimension, and specifies what range in each dimension to slice from:"},
		AnalyzePeaks[Object[Data,ChromatographyMassSpectra,"Sample LCMS Data"], ReferenceField->IonAbundance3D, DataSliceDimension->{ElutionTime},DataSlice->{2.0;;3.0,2.0;;3.0}],
		$Failed,
		Messages:>{Error::InvalidSliceLength,Error::InvalidInput}
	],
	Example[{Messages,"IncompatibleSliceUnits","If the units provided in DataSlice are incompatible with the DataSliceDimension, then units will be ignored and this warning will be shown:"},
		AnalyzePeaks[Object[Data,ChromatographyMassSpectra,"Sample LCMS Data"], ReferenceField->IonAbundance3D, DataSliceDimension->{ElutionTime}, DataSlice->180Meter;;190Meter],
		ObjectP[Object[Analysis,Peaks]],
		Messages:>{Warning::IncompatibleSliceUnits}
	],
	Example[{Messages,"AutomaticWavelength","If the Wavelength option is not provided for data derived from a 3D reference field, a warning is printed describing the automatic resolution of the Wavelength option:"},
		AnalyzePeaks[Object[Data,ChromatographyMassSpectra,"Sample LCMS Data"], ReferenceField->Absorbance3D],
		ObjectP[Object[Analysis,Peaks]],
		Messages:>{Warning::AutomaticWavelength}
	],
	Example[{Messages,"DataNotFound","If AnalyzePeaks is evaluated on a reference field that points to an empty field, a DataNotFound error is thrown:"},
		AnalyzePeaks[Object[Data,ChromatographyMassSpectra,"Sample LCMS Data"], ReferenceField->Absorbance3D, Wavelength->280 Nano Meter],
		$Failed,
		Messages:>{Error::DataNotFound, Error::InvalidOption}
	],

	(*
		TESTS
	*)
	Test["No peaks found does not crash:",
		(stripAppendReplaceKeyHeads @ AnalyzePeaks[
			Table[{x,x},{x,1,20}],
			Upload->False,AbsoluteThreshold->{100000}
		])[Position],
		{}
	],


	Test["UnresolvedOptions populated correctly:",
		AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"], Upload -> False,AbsoluteThreshold->{50},WidthThreshold->"String",Horse->cow],
		$Failed,
		Messages:>{OptionValue::nodef, OptionValue::nodef, Error::Pattern, Error::UnknownOption}
	],


	Test["Mixed list of links and packets:",
		(stripAppendReplaceKeyHeads @ AnalyzePeaks[{Link[Object[Data, Chromatography, "id:XnlV5jmbk0rn"]],Download[Object[Data, PAGE, "id:BYDOjv1VvwL9"]]}, Upload -> False])[Position],
		{
			{20.193333`,25.366667`},
			{18.18181818181818}
		},
		EquivalenceFunction -> RoundMatchQ[12,Force->True]
	],

	Test["PAGE link:",
		(stripAppendReplaceKeyHeads @ AnalyzePeaks[Link[Object[Data, PAGE, "id:54n6evLz93m7"]],
			Upload -> False])[Position],
		{_?NumericQ..}
	],
	Test["PAGE protocol:",
		(stripAppendReplaceKeyHeads @ AnalyzePeaks[Object[Protocol, PAGE, "id:Z1lqpMzdEVWM"],
			Upload -> False])[Position],
		{{_?NumericQ..}..}
	],


	Test["Labels and assignments and models must all be consistent:",
		Lookup[
			AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],PeakAssignments -> {{25 Minute,Model[Molecule,Oligomer,"id:L8kPEjn6rOaW"],	1 Minute}, {20 Minute,	Model[Molecule, "id:xRO9n3BPmKb5"], 1 Minute}}, AbsoluteThreshold -> {300}, Upload -> False],
			{Replace[PeakLabel],Replace[PeakAssignment], Replace[PeakAssignmentLibrary]}
		],
		{
			{
				"1",
				"Boc-Lys(Z)-OH",
				"10bp DNA Ladder Strand"
			},
			{
				Null,
				Link[Model[Molecule, "id:xRO9n3BPmKb5"]],
				Link[Model[Molecule,Oligomer,"id:L8kPEjn6rOaW"]]
			},
			{
				<|Label->"Boc-Lys(Z)-OH",Model->Link[Model[Molecule,"id:xRO9n3BPmKb5"]],Position->20.193333`,Tolerance->1.`|>,
				<|Label->"10bp DNA Ladder Strand",Model->Link[Model[Molecule,Oligomer,"id:L8kPEjn6rOaW"]],Position->25.366667`,Tolerance->1.`|>
			}
		}
	],

	Test["ParentPeak option correctly affects relative fields:",
		Lookup[AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],
			ParentPeaks -> {"2", "2", "2"}, PeakLabels -> {"1", "2", "3"},
			AbsoluteThreshold -> {300}, Upload -> False], {Replace[ParentPeak],
			Replace[RelativeArea]}],
			{{"2", "2", "2"}, {0.0873223, 1., 1.81888}},
		EquivalenceFunction->RoundMatchQ[5]
	],
	Test["ParentPeak option correctly affects relative fields, with inherited labels:",
		Lookup[AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],
			PeakAssignments -> {{25 Minute,
				Model[Molecule,Oligomer,"id:L8kPEjn6rOaW"],
				1 Minute}, {20 Minute,
				Model[Molecule, "id:xRO9n3BPmKb5"], 1 Minute}},
			AbsoluteThreshold -> {300}, Upload -> False,
			ParentPeaks -> {"Boc-Lys(Z)-OH", "Boc-Lys(Z)-OH",
				"Boc-Lys(Z)-OH"}], {Replace[ParentPeak], Replace[RelativeArea]}],
		{
			{"Boc-Lys(Z)-OH", "Boc-Lys(Z)-OH", "Boc-Lys(Z)-OH"},
			{0.0873223, 1., 1.81888}
		},
		EquivalenceFunction->RoundMatchQ[5]
	],

	Example[{Options,RelativeLabeling,"Label peaks with their relative retention times, instead of with their indices:"},
		AnalyzePeaksPreview[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],
			AbsoluteThreshold -> {250},
			PeakAssignments -> {{25 Minute,
				Model[Molecule, "id:xRO9n3BPmKb5"], 1 Minute}},
			RelativeLabeling -> True],
		ValidGraphicsP[]
	],
	Test["RelativeLabeling option works:",
		{
			Lookup[AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],
				AbsoluteThreshold -> {250},
				PeakAssignments -> {{25 Minute,
					Model[Molecule, "id:xRO9n3BPmKb5"], 1 Minute}},
				RelativeLabeling -> True, Upload -> False], Replace[PeakLabel]],
			Lookup[AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],
				AbsoluteThreshold -> {250},
				PeakAssignments -> {{25 Minute,
					Model[Molecule, "id:xRO9n3BPmKb5"], 1 Minute}},
				RelativeLabeling -> False, Upload -> False], Replace[PeakLabel]]
		},
		{
			{"RRT 0.12", "RRT 0.17", "RRT 0.8", "Boc-Lys(Z)-OH"},
			{"1", "2", "3", "Boc-Lys(Z)-OH"}
		}
	],

	Test["PeakAssignments ignores things outside tolerance window:",
		Lookup[AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],
			PeakAssignments -> {{20 Minute,
				Model[Molecule, "id:xRO9n3BPmKb5"], 1 Minute}},
			AbsoluteThreshold -> {800}, Upload -> False], {Replace[Position],
			Replace[PeakLabel], Replace[PeakAssignmentLibrary]}],
		{{25.3667}, {"1"}, {}},
		EquivalenceFunction->RoundMatchQ[5]
	],


	Test["PeakAssignments with wide tolerance window:",
		Lookup[AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],
			PeakAssignments -> {{20 Minute,
				Model[Molecule, "id:xRO9n3BPmKb5"], 10 Minute}},
			AbsoluteThreshold -> {800}, Upload -> False], {Replace[Position],
			Replace[PeakLabel], Replace[PeakAssignmentLibrary]}],
		{{25.366667}, {"Boc-Lys(Z)-OH"}, {<|Label->"Boc-Lys(Z)-OH",Model->Link[Model[Molecule,"id:xRO9n3BPmKb5"]],Position->25.366667`,Tolerance->10.`|>}},
		EquivalenceFunction->RoundMatchQ[5]
	],


	Example[{Messages,"MixedAssignment","Cannot use absolute and relative peak assignments simultaneously:"},
		AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],
			PeakAssignments -> {
				{20 Minute, Model[Molecule, "id:xRO9n3BPmKb5"], 1 Minute},
				{1 RRT, Model[Molecule, "id:xRO9n3BPmKb5"], 1 RRT}
			},
			Upload -> False
		],
		$Failed,
		Messages:>{Error::MixedAssignment,Error::InvalidOption}
	],

	Test["Delete duplicate peaks:",
		stripAppendReplaceKeyHeads @ AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"], Domain -> {5;;50,13.981553411`;;60.006667`},AbsoluteThreshold -> {766.652216`,181.`}, Upload -> False],
		_?(SubsetQ[#,<|
			Position->{20.193333`,25.366667`,23.153333`},
			Height->{759.439464144589`,817.191984144589`,233.01416134102212`},
			HalfHeightWidth->{1.7933330000000005`,2.8333340000000007`,0.5`},
			Area->{1462.4732084908599`,2671.9395288510705`,219.6918374708927`},
			PeakRangeStart->{18.946667`,23.946667`,22.706667`},
			PeakRangeEnd->{22.706667`,32.633333`,23.946667`},
			WidthRangeStart->{19.86`,24.853333`,22.953333`},
			WidthRangeEnd->{21.653333`,27.686667`,23.453333`},
			BaselineIntercept->{34.82950585541098`,34.82950585541098`,11.46931865897786`},
			BaselineSlope->{0.`,0.`,0.`},
			AsymmetryFactor->{4.38000438000437`, 4.519474650032928`, 1.5`},
			TailingFactor->{2.6900021900022013`,2.759737325016453`,1.2500000000000093`},
			RelativeArea->{0.547345174806303`,1.`,0.08222185985075786`},
			RelativePosition->{0.7960577950583733`,1.`,0.912746361199128`},
			PeakLabel->{"1","2","3"}
		|>]&),
		EquivalenceFunction -> RoundMatchQ[12,Force->True]
	],

	Test["The ParentPeaks, PeakLabels, and PeakAssignments options default to null when input is of type NMR:",
		Lookup[
			AnalyzePeaks[Object[Data,NMR,"id:3em6ZvL0KNeM"],Output->Options],
			{ParentPeaks,PeakAssignments,PeakLabels}
		],
		{Null,Null,Null}
	],
	Test["Null input is valid and defaults to Automatic for ParentPeaks, PeakLabels, and PeakAssignments when input is of type chromatography:",
		Lookup[
			AnalyzePeaks[Object[Data, Chromatography, "id:XnlV5jmbk0rn"],
				ParentPeaks->Null,
				PeakLabels->Null,
				PeakAssignments->Null,
				Output->Options
			],
			{ParentPeaks, PeakAssignments, PeakLabels}
		],
		{{"2", "2"}, {}, {"1", "2"}}
	]

},

	Variables:>{xyPts,logLinearData,xyPtsUnits},
	SetUp:>(
		xyPts={{-60.4703`,1.587`},{-59.8914`,-2.9288`},{-59.3126`,-2.8543`},{-58.7337`,-3.6064`},{-58.1548`,-3.5293`},{-57.5759`,-7.4673`},{-56.9971`,0.8248`},{-56.4182`,23.293`},{-55.8393`,0.3193`},{-55.2604`,-13.9593`},{-54.6816`,-12.3607`},{-54.1027`,-3.2422`},{-53.5238`,-4.832`},{-52.9449`,-8.3469`},{-52.3661`,-14.6887`},{-51.7872`,-17.8354`},{-51.2083`,-11.4492`},{-50.6294`,-13.8761`},{-50.0505`,-7.6376`},{-49.4717`,-20.6722`},{-48.8928`,-6.1023`},{-48.3139`,-3.0062`},{-47.735`,6.8016`},{-47.1562`,23.4155`},{-46.5773`,0.9423`},{-45.9984`,19.5976`},{-45.4195`,0.8777`},{-44.8407`,2.3731`},{-44.2618`,16.3106`},{-43.6829`,4.7338`},{-43.104`,7.0143`},{-42.5252`,-0.4604`},{-41.9463`,16.6188`},{-41.3674`,-7.5774`},{-40.7885`,4.786`},{-40.2096`,9.1225`},{-39.6308`,6.0894`},{-39.0519`,8.1521`},{-38.473`,0.7713`},{-37.8941`,24.0671`},{-37.3153`,-5.3851`},{-36.7364`,7.6461`},{-36.1575`,6.2401`},{-35.5786`,5.5707`},{-34.9998`,-3.8426`},{-34.4209`,-8.1403`},{-33.842`,4.7625`},{-33.2631`,-11.033`},{-32.6843`,-10.0288`},{-32.1054`,-9.4915`},{-31.5265`,6.0948`},{-30.9476`,22.7781`},{-30.3687`,-18.0986`},{-29.7899`,-5.7582`},{-29.211`,-7.9967`},{-28.6321`,17.574`},{-28.0532`,9.6356`},{-27.4744`,-12.3885`},{-26.8955`,-9.992`},{-26.3166`,-8.0265`},{-25.7377`,-6.8299`},{-25.1589`,-8.0575`},{-24.58`,9.9059`},{-24.0011`,4.6671`},{-23.4222`,29.4874`},{-22.8434`,-5.0773`},{-22.2645`,3.1678`},{-21.6856`,-3.0654`},{-21.1067`,-4.1394`},{-20.5278`,-12.4577`},{-19.949`,-7.0589`},{-19.3701`,-10.7888`},{-18.7912`,4.4065`},{-18.2123`,5.4024`},{-17.6335`,6.2734`},{-17.0546`,-4.4128`},{-16.4757`,9.1531`},{-15.8968`,-17.4617`},{-15.318`,-5.7665`},{-14.7391`,-8.6346`},{-14.1602`,-1.6776`},{-13.5813`,5.549`},{-13.0025`,-1.2764`},{-12.4236`,1.6277`},{-11.8447`,-6.2084`},{-11.2658`,5.6592`},{-10.6869`,4.7049`},{-10.1081`,8.8459`},{-9.5292`,-5.952`},{-8.9503`,14.4889`},{-8.3714`,23.2175`},{-7.7926`,21.225`},{-7.2137`,15.7654`},{-6.6348`,-2.578`},{-6.0559`,8.965`},{-5.4771`,-9.7285`},{-4.8982`,-2.9533`},{-4.3193`,75.6051`},{-3.7404`,16.4113`},{-3.1616`,14.9865`},{-2.5827`,-11.3331`},{-2.0038`,-2.0928`},{-1.4249`,-0.9202`},{-0.846`,0.2394`},{-0.2672`,6.0783`},{0.3117`,12.7922`},{0.8906`,149.8234`},{1.4695`,137.478`},{2.0483`,73.5309`},{2.6272`,20.1371`},{3.2061`,13.3703`},{3.785`,-1.6624`},{4.3638`,-5.3309`},{4.9427`,6.2866`},{5.5216`,-4.5244`},{6.1005`,-15.892`},{6.6793`,-17.247`},{7.2582`,-3.521`},{7.8371`,47.9696`},{8.416`,48.6575`},{8.9949`,143.0855`},{9.5737`,262.487`},{10.1526`,433.1576`},{10.7315`,655.7522`},{11.3104`,789.8354`},{11.8892`,812.2174`},{12.4681`,768.5621`},{13.047`,657.1636`},{13.6259`,473.0125`},{14.2047`,347.134`},{14.7836`,228.5908`},{15.3625`,146.17`},{15.9414`,77.1921`},{16.5202`,93.6922`},{17.0991`,41.6889`},{17.678`,34.9402`},{18.2569`,24.9377`},{18.8358`,6.303`},{19.4146`,7.6878`},{19.9935`,-0.4913`},{20.5724`,4.309`},{21.1513`,7.6213`},{21.7301`,14.0376`},{22.309`,10.5065`},{22.8879`,-5.2162`},{23.4668`,3.6696`},{24.0456`,-1.3919`},{24.6245`,13.7266`},{25.2034`,26.7292`},{25.7823`,-0.9272`},{26.3611`,-5.163`},{26.94`,-2.0984`},{27.5189`,-4.7001`},{28.0978`,-15.0261`},{28.6767`,-6.6703`},{29.2555`,-4.7324`},{29.8344`,-9.1476`},{30.4133`,-11.197`},{30.9922`,-18.8589`},{31.571`,-18.5209`},{32.1499`,-7.7127`},{32.7288`,-17.283`},{33.3077`,10.2485`},{33.8865`,0.7054`},{34.4654`,17.6433`},{35.0443`,26.3025`},{35.6232`,-4.1029`},{36.202`,9.6538`},{36.7809`,50.4171`},{37.3598`,71.2644`},{37.9387`,193.1155`},{38.5176`,510.2275`},{39.0964`,954.8649`},{39.6753`,1316.5008`},{40.5055`,1341.1692`},{41.6568`,1026.4138`},{42.8081`,549.0985`},{43.9595`,223.7178`},{45.1108`,34.8255`},{46.2621`,-25.6132`},{47.4134`,-69.3664`},{48.5647`,-100.2309`},{49.716`,-90.0365`},{50.8673`,-110.048`},{52.0186`,-89.8928`},{53.1699`,-70.6448`},{54.3212`,-66.6014`},{55.4725`,-7.3808`},{56.6238`,24.2758`},{57.7751`,44.6924`},{58.9264`,89.7889`},{60.0777`,151.1335`},{61.229`,290.8439`},{62.3803`,536.4023`},{63.5317`,956.7083`},{64.683`,1382.7361`},{65.8685`,1552.8259`},{68.4379`,1408.1517`},{71.2857`,1056.4687`},{74.1335`,772.6727`},{76.9813`,502.9082`},{79.8291`,456.0177`},{82.6769`,597.0413`},{85.5247`,933.6729`},{88.3726`,1140.7761`},{91.3774`,1132.9723`},{94.5917`,934.8548`},{97.8059`,695.1553`},{101.0202`,506.9661`},{104.2344`,526.7152`},{107.4487`,886.2472`},{110.6629`,1485.9208`},{113.8772`,1962.2649`},{117.2542`,1986.5373`},{120.9477`,1602.6262`},{124.6412`,1052.4658`},{128.3347`,520.8706`},{132.0283`,237.5131`},{135.7218`,179.6594`},{139.4153`,194.352`},{143.1088`,188.4899`},{146.8023`,193.5516`},{150.4959`,149.3122`},{154.1894`,68.9806`},{157.8829`,26.3029`},{161.5764`,32.2454`},{165.2699`,82.5101`},{168.9635`,171.1333`},{172.657`,342.7152`},{176.3505`,529.9803`},{180.044`,653.1731`},{183.7376`,523.2293`},{187.4311`,361.8707`},{191.1246`,167.4945`},{194.8181`,61.7772`},{198.5116`,60.4075`},{202.2052`,35.8679`},{205.8987`,44.0184`},{209.5922`,65.031`},{213.2857`,95.5418`},{216.9792`,120.0814`},{220.6728`,175.8616`},{224.3663`,244.9024`},{228.0598`,308.0053`},{231.7533`,342.9063`},{235.4469`,388.0488`},{239.1404`,402.7888`},{242.8339`,364.4319`},{246.5274`,337.8086`},{250.2209`,229.8374`},{253.9145`,156.6267`},{257.608`,33.2384`},{261.3015`,-62.4133`},{264.995`,-107.0692`},{268.6885`,-145.7654`},{272.3821`,-167.8836`},{276.0756`,-174.4012`},{279.7691`,-160.7985`},{283.4626`,-94.334`},{287.1562`,-132.8897`},{290.8497`,-88.0442`},{294.5432`,-24.0263`},{298.2367`,17.0242`},{301.9302`,39.8069`},{305.6238`,53.6636`},{309.3173`,58.9873`},{313.0108`,23.7347`},{316.7043`,-15.399`},{320.3978`,-13.7185`},{324.0914`,-29.1139`},{327.7849`,-37.6242`},{331.4784`,-40.0249`},{335.1719`,-26.3684`},{338.8654`,-21.9221`},{342.559`,-23.7979`},{346.2525`,-14.4608`},{349.946`,-0.908`},{353.6395`,-8.8529`},{357.3331`,-8.4405`}};
		xyPtsUnits=QuantityArray[xyPts, {Second, RFU}];
		logLinearData=QuantityArray[{{0.0129989,0.},{0.0140472,0.},{0.01518,0.},{0.0164042,0.},{0.017727,0.},{0.0191566,0.},{0.0207015,0.},{0.0223709,0.},{0.0241749,0.},{0.0261245,0.},{0.0282312,0.},{0.0305079,0.},{0.0329681,0.},{0.0356268,0.},{0.0384999,0.},{0.0416046,0.},{0.0449597,0.},{0.0485854,0.},{0.0525035,0.},{0.0567375,0.},{0.061313,0.},{0.0662575,0.},{0.0716007,0.},{0.0773748,0.},{0.0836145,0.},{0.0903575,0.},{0.0976442,0.},{0.105518,0.},{0.114028,0.},{0.123223,0.},{0.13316,0.},{0.143899,0.},{0.155503,0.},{0.168044,0.},{0.181595,0.},{0.19624,0.},{0.212065,0.},{0.229167,0.},{0.247647,0.},{0.267618,0.},{0.2892,0.},{0.312522,0.},{0.337724,0.},{0.36496,0.},{0.394391,0.},{0.426196,0.},{0.460566,0.},{0.497707,0.},{0.537844,0.},{0.581217,0.},{0.628088,0.},{0.678739,0.},{0.733475,0.},{0.792624,0.},{0.856544,0.},{0.925618,0.},{1.00026,0.},{1.08093,0.},{1.1681,0.},{1.2623,0.},{1.36409,0.},{1.4741,0.},{1.59297,0.},{1.72143,0.},{1.86025,0.},{2.01027,0.},{2.17239,0.},{2.34757,0.},{2.53689,0.},{2.74147,0.},{2.96255,0.},{3.20146,0.},{3.45964,0.},{3.73863,0.},{4.04013,0.},{4.36593,0.00357118},{4.71802,0.00982435},{5.09849,0.0152065},{5.50965,0.0184816},{5.95397,0.0197395},{6.43411,0.0195829},{6.95298,0.0187324},{7.51369,0.0178507},{8.11961,0.0174682},{8.7744,0.017955},{9.482,0.0195164},{10.2467,0.0222034},{11.073,0.0259308},{11.9659,0.0305013},{12.9309,0.0356322},{13.9737,0.0409838},{15.1006,0.0461866},{16.3183,0.0508679},{17.6343,0.0546742},{19.0564,0.0572909},{20.5931,0.0584578},{22.2538,0.0579807},{24.0485,0.0557391},{25.9878,0.0516912},{28.0835,0.0458799},{30.3483,0.0384439},{32.7956,0.0296511},{35.4404,0.0199893},{38.2984,0.0103933},{41.3869,0.00271542},{44.7245,0.},{48.3312,0.},{52.2288,0.},{56.4407,0.},{60.9922,0.},{65.9108,0.},{71.226,0.},{76.9699,0.},{83.177,0.},{89.8847,0.},{97.1332,0.},{104.966,0.},{113.431,0.},{122.579,0.},{132.464,0.},{143.146,0.},{154.69,0.},{167.164,0.},{180.645,0.},{195.213,0.},{210.955,0.},{227.967,0.},{246.351,0.},{266.218,0.},{287.687,0.},{310.887,0.000445283},{335.957,0.00385106},{363.05,0.00800808},{392.327,0.0115279},{423.966,0.0137168},{458.156,0.0142341},{495.103,0.0129486},{535.029,0.00995059},{578.176,0.00572952},{624.802,0.00158973},{675.188,0.},{729.637,0.},{788.477,0.},{852.062,0.},{920.775,0.},{995.029,0.},{1075.27,0.},{1161.98,0.},{1255.69,0.},{1356.95,0.},{1466.38,0.},{1584.64,0.},{1712.43,0.},{1850.52,0.},{1999.75,0.},{2161.02,0.},{2335.29,0.},{2523.61,0.},{2727.13,0.},{2947.05,0.},{3184.71,0.},{3441.53,0.},{3719.07,0.},{4018.99,0.},{4343.09,0.},{4693.33,0.},{5071.81,0.},{5480.82,0.},{5922.81,0.},{6400.45,0.},{6916.6,0.},{7474.37,0.},{8077.13,0.},{8728.49,0.},{9432.39,0.},{10193.,0.},{11015.,0.},{11903.3,0.},{12863.2,0.},{13900.6,0.},{15021.6,0.},{16232.9,0.},{17542.,0.},{18956.7,0.},{20485.4,0.},{22137.4,0.},{23922.6,0.},{25851.8,0.},{27936.6,0.},{30189.5,0.},{32624.,0.},{35254.9,0.},{38098.,0.},{41170.4,0.},{44490.5,0.},{48078.3,0.},{51955.5,0.},{56145.3,0.},{60673.1,0.},{65565.9,0.},{70853.4,0.},{76567.2,0.},{82741.8,0.},{89414.4,0.},{96625.,0.},{104417.,0.},{112838.,0.},{121937.,0.},{131771.,0.},{142397.,0.},{153880.,0.},{166290.,0.},{179700.,0.},{194191.,0.},{209852.,0.},{226775.,0.},{245062.,0.},{264825.,0.},{286181.,0.},{309260.,0.},{334199.,0.},{361150.,0.},{390275.,0.},{421748.,0.},{455759.,0.},{492512.,0.},{532230.,0.},{575151.,0.},{621533.,0.},{671655.,0.},{725819.,0.},{784351.,0.},{847604.,0.},{915957.,0.},{989823.,0.},{1.06965*10^6,0.},{1.1559*10^6,0.},{1.24912*10^6,0.},{1.34985*10^6,0.},{1.45871*10^6,0.},{1.57634*10^6,0.},{1.70347*10^6,0.},{1.84084*10^6,0.},{1.98929*10^6,0.},{2.14971*10^6,0.},{2.32307*10^6,0.},{2.51041*10^6,0.},{2.71286*10^6,0.},{2.93163*10^6,0.},{3.16805*10^6,0.},{3.42353*10^6,0.},{3.69961*10^6,0.},{3.99796*10^6,0.},{4.32037*10^6,0.},{4.66877*10^6,0.},{5.04528*10^6,0.}},{Nanometer,ArbitraryUnit}];
	)
];


(* ::Subsubsection::Closed:: *)
(*AnalyzePeaksOptions*)


DefineTests[AnalyzePeaksOptions, {

	Example[{Basic, "Resolve options for chromatography data:"},
		AnalyzePeaksOptions[Object[Data, Chromatography, "id:XnlV5jmbk0rn"]],
		_Grid
	],

	Example[{Basic,"Resolve options for list of chromatography data:"},
		AnalyzePeaksOptions[{Object[Data, Chromatography, "id:XnlV5jmbk0rn"],Object[Data, Chromatography, "id:XnlV5jmbk0rn"],Object[Data, Chromatography, "id:XnlV5jmbk0rn"]}],
		_Grid
	],

	Example[{Basic, "Resolve options for raw numeric data:"},
		AnalyzePeaksOptions[xyPts],
		_Grid
	],

	Example[{Options,OutputFormat,"Return the options as a list:"},
		AnalyzePeaksOptions[Object[Data, Chromatography, "id:XnlV5jmbk0rn"], OutputFormat->List],
			{
				ReferenceField -> Absorbance,
				DataSetTransformationFunction -> Null,
				Wavelength -> Quantity[260,"Nanometers"],
				Name -> Null,
				PeakType -> Chromatography,
				DataSliceDimension->Null,
				DataSlice->Null,
				SliceReductionFunction->Null,
				SliceReferencePeaks->Null,
				OperatingFrequency -> Null, Nucleus -> Null, DeuteratedSolvent -> Null,
				MaximumJSplitting -> Null,
				SplittingSpacingTolerance -> Null, SplittingRelativeIntegralTolerance -> Null,
				PeakGroupDomains -> Null, PeakIntegralNormalizationGroup -> Null, PeakGroupMultiplicity -> Null,
				TemplateAssignmentTolerance -> Null,
				PeakLabels -> {"1", "2"},
				ParentPeaks -> {"2", "2"},
				RelativeLabeling -> False,
				PeakAssignments -> {},
				KnownSpecies -> Null,
				SplittingAssignments -> Null,
				Domain ->{{3.00033335`, 50}},
				AbsoluteThreshold -> {767.0},
				RelativeThreshold -> {16.9}, WidthThreshold -> {0.},
				AreaThreshold -> {0}, EdgeFraction -> {0}, SmoothingRadius -> {5},
				ConsolidateWidth -> {0}, ConsolidateHeight -> {0},
				Include -> {}, Exclude -> {},
				Baseline -> DomainConstant, BaselineFeatureWidth -> Null, BlankPeaks -> Null, HighlightBaselinePoints -> False,
				ManualPeakRanges -> Null, ManualPeakPositions -> Null, Template -> Null
			}
	]

	},

	Variables:>{xyPts},
	SetUp:>(
		xyPts={{-60.4703`,1.587`},{-59.8914`,-2.9288`},{-59.3126`,-2.8543`},{-58.7337`,-3.6064`},{-58.1548`,-3.5293`},{-57.5759`,-7.4673`},{-56.9971`,0.8248`},{-56.4182`,23.293`},{-55.8393`,0.3193`},{-55.2604`,-13.9593`},{-54.6816`,-12.3607`},{-54.1027`,-3.2422`},{-53.5238`,-4.832`},{-52.9449`,-8.3469`},{-52.3661`,-14.6887`},{-51.7872`,-17.8354`},{-51.2083`,-11.4492`},{-50.6294`,-13.8761`},{-50.0505`,-7.6376`},{-49.4717`,-20.6722`},{-48.8928`,-6.1023`},{-48.3139`,-3.0062`},{-47.735`,6.8016`},{-47.1562`,23.4155`},{-46.5773`,0.9423`},{-45.9984`,19.5976`},{-45.4195`,0.8777`},{-44.8407`,2.3731`},{-44.2618`,16.3106`},{-43.6829`,4.7338`},{-43.104`,7.0143`},{-42.5252`,-0.4604`},{-41.9463`,16.6188`},{-41.3674`,-7.5774`},{-40.7885`,4.786`},{-40.2096`,9.1225`},{-39.6308`,6.0894`},{-39.0519`,8.1521`},{-38.473`,0.7713`},{-37.8941`,24.0671`},{-37.3153`,-5.3851`},{-36.7364`,7.6461`},{-36.1575`,6.2401`},{-35.5786`,5.5707`},{-34.9998`,-3.8426`},{-34.4209`,-8.1403`},{-33.842`,4.7625`},{-33.2631`,-11.033`},{-32.6843`,-10.0288`},{-32.1054`,-9.4915`},{-31.5265`,6.0948`},{-30.9476`,22.7781`},{-30.3687`,-18.0986`},{-29.7899`,-5.7582`},{-29.211`,-7.9967`},{-28.6321`,17.574`},{-28.0532`,9.6356`},{-27.4744`,-12.3885`},{-26.8955`,-9.992`},{-26.3166`,-8.0265`},{-25.7377`,-6.8299`},{-25.1589`,-8.0575`},{-24.58`,9.9059`},{-24.0011`,4.6671`},{-23.4222`,29.4874`},{-22.8434`,-5.0773`},{-22.2645`,3.1678`},{-21.6856`,-3.0654`},{-21.1067`,-4.1394`},{-20.5278`,-12.4577`},{-19.949`,-7.0589`},{-19.3701`,-10.7888`},{-18.7912`,4.4065`},{-18.2123`,5.4024`},{-17.6335`,6.2734`},{-17.0546`,-4.4128`},{-16.4757`,9.1531`},{-15.8968`,-17.4617`},{-15.318`,-5.7665`},{-14.7391`,-8.6346`},{-14.1602`,-1.6776`},{-13.5813`,5.549`},{-13.0025`,-1.2764`},{-12.4236`,1.6277`},{-11.8447`,-6.2084`},{-11.2658`,5.6592`},{-10.6869`,4.7049`},{-10.1081`,8.8459`},{-9.5292`,-5.952`},{-8.9503`,14.4889`},{-8.3714`,23.2175`},{-7.7926`,21.225`},{-7.2137`,15.7654`},{-6.6348`,-2.578`},{-6.0559`,8.965`},{-5.4771`,-9.7285`},{-4.8982`,-2.9533`},{-4.3193`,75.6051`},{-3.7404`,16.4113`},{-3.1616`,14.9865`},{-2.5827`,-11.3331`},{-2.0038`,-2.0928`},{-1.4249`,-0.9202`},{-0.846`,0.2394`},{-0.2672`,6.0783`},{0.3117`,12.7922`},{0.8906`,149.8234`},{1.4695`,137.478`},{2.0483`,73.5309`},{2.6272`,20.1371`},{3.2061`,13.3703`},{3.785`,-1.6624`},{4.3638`,-5.3309`},{4.9427`,6.2866`},{5.5216`,-4.5244`},{6.1005`,-15.892`},{6.6793`,-17.247`},{7.2582`,-3.521`},{7.8371`,47.9696`},{8.416`,48.6575`},{8.9949`,143.0855`},{9.5737`,262.487`},{10.1526`,433.1576`},{10.7315`,655.7522`},{11.3104`,789.8354`},{11.8892`,812.2174`},{12.4681`,768.5621`},{13.047`,657.1636`},{13.6259`,473.0125`},{14.2047`,347.134`},{14.7836`,228.5908`},{15.3625`,146.17`},{15.9414`,77.1921`},{16.5202`,93.6922`},{17.0991`,41.6889`},{17.678`,34.9402`},{18.2569`,24.9377`},{18.8358`,6.303`},{19.4146`,7.6878`},{19.9935`,-0.4913`},{20.5724`,4.309`},{21.1513`,7.6213`},{21.7301`,14.0376`},{22.309`,10.5065`},{22.8879`,-5.2162`},{23.4668`,3.6696`},{24.0456`,-1.3919`},{24.6245`,13.7266`},{25.2034`,26.7292`},{25.7823`,-0.9272`},{26.3611`,-5.163`},{26.94`,-2.0984`},{27.5189`,-4.7001`},{28.0978`,-15.0261`},{28.6767`,-6.6703`},{29.2555`,-4.7324`},{29.8344`,-9.1476`},{30.4133`,-11.197`},{30.9922`,-18.8589`},{31.571`,-18.5209`},{32.1499`,-7.7127`},{32.7288`,-17.283`},{33.3077`,10.2485`},{33.8865`,0.7054`},{34.4654`,17.6433`},{35.0443`,26.3025`},{35.6232`,-4.1029`},{36.202`,9.6538`},{36.7809`,50.4171`},{37.3598`,71.2644`},{37.9387`,193.1155`},{38.5176`,510.2275`},{39.0964`,954.8649`},{39.6753`,1316.5008`},{40.5055`,1341.1692`},{41.6568`,1026.4138`},{42.8081`,549.0985`},{43.9595`,223.7178`},{45.1108`,34.8255`},{46.2621`,-25.6132`},{47.4134`,-69.3664`},{48.5647`,-100.2309`},{49.716`,-90.0365`},{50.8673`,-110.048`},{52.0186`,-89.8928`},{53.1699`,-70.6448`},{54.3212`,-66.6014`},{55.4725`,-7.3808`},{56.6238`,24.2758`},{57.7751`,44.6924`},{58.9264`,89.7889`},{60.0777`,151.1335`},{61.229`,290.8439`},{62.3803`,536.4023`},{63.5317`,956.7083`},{64.683`,1382.7361`},{65.8685`,1552.8259`},{68.4379`,1408.1517`},{71.2857`,1056.4687`},{74.1335`,772.6727`},{76.9813`,502.9082`},{79.8291`,456.0177`},{82.6769`,597.0413`},{85.5247`,933.6729`},{88.3726`,1140.7761`},{91.3774`,1132.9723`},{94.5917`,934.8548`},{97.8059`,695.1553`},{101.0202`,506.9661`},{104.2344`,526.7152`},{107.4487`,886.2472`},{110.6629`,1485.9208`},{113.8772`,1962.2649`},{117.2542`,1986.5373`},{120.9477`,1602.6262`},{124.6412`,1052.4658`},{128.3347`,520.8706`},{132.0283`,237.5131`},{135.7218`,179.6594`},{139.4153`,194.352`},{143.1088`,188.4899`},{146.8023`,193.5516`},{150.4959`,149.3122`},{154.1894`,68.9806`},{157.8829`,26.3029`},{161.5764`,32.2454`},{165.2699`,82.5101`},{168.9635`,171.1333`},{172.657`,342.7152`},{176.3505`,529.9803`},{180.044`,653.1731`},{183.7376`,523.2293`},{187.4311`,361.8707`},{191.1246`,167.4945`},{194.8181`,61.7772`},{198.5116`,60.4075`},{202.2052`,35.8679`},{205.8987`,44.0184`},{209.5922`,65.031`},{213.2857`,95.5418`},{216.9792`,120.0814`},{220.6728`,175.8616`},{224.3663`,244.9024`},{228.0598`,308.0053`},{231.7533`,342.9063`},{235.4469`,388.0488`},{239.1404`,402.7888`},{242.8339`,364.4319`},{246.5274`,337.8086`},{250.2209`,229.8374`},{253.9145`,156.6267`},{257.608`,33.2384`},{261.3015`,-62.4133`},{264.995`,-107.0692`},{268.6885`,-145.7654`},{272.3821`,-167.8836`},{276.0756`,-174.4012`},{279.7691`,-160.7985`},{283.4626`,-94.334`},{287.1562`,-132.8897`},{290.8497`,-88.0442`},{294.5432`,-24.0263`},{298.2367`,17.0242`},{301.9302`,39.8069`},{305.6238`,53.6636`},{309.3173`,58.9873`},{313.0108`,23.7347`},{316.7043`,-15.399`},{320.3978`,-13.7185`},{324.0914`,-29.1139`},{327.7849`,-37.6242`},{331.4784`,-40.0249`},{335.1719`,-26.3684`},{338.8654`,-21.9221`},{342.559`,-23.7979`},{346.2525`,-14.4608`},{349.946`,-0.908`},{353.6395`,-8.8529`},{357.3331`,-8.4405`}};
	)
];


(* ::Subsubsection::Closed:: *)
(*AnalyzePeaksPreview*)


DefineTests[AnalyzePeaksPreview, {

	Example[{Basic, "Generate preview for chromatography data:"},
		AnalyzePeaksPreview[Object[Data, Chromatography, "id:XnlV5jmbk0rn"]],
		ValidGraphicsP[]
	],

	Example[{Basic,"Generate previews for list of chromatography datas:"},
		AnalyzePeaksPreview[{Object[Data, Chromatography, "id:XnlV5jmbk0rn"],Object[Data, Chromatography, "id:XnlV5jmbk0rn"],Object[Data, Chromatography, "id:XnlV5jmbk0rn"]}],
		_SlideView
	],

	Example[{Basic, "Generate preview for raw numeric data:"},
		AnalyzePeaksPreview[xyPts],
		ValidGraphicsP[]
	]
	},

	Variables:>{xyPts},
	SetUp:>(
		xyPts={{-60.4703`,1.587`},{-59.8914`,-2.9288`},{-59.3126`,-2.8543`},{-58.7337`,-3.6064`},{-58.1548`,-3.5293`},{-57.5759`,-7.4673`},{-56.9971`,0.8248`},{-56.4182`,23.293`},{-55.8393`,0.3193`},{-55.2604`,-13.9593`},{-54.6816`,-12.3607`},{-54.1027`,-3.2422`},{-53.5238`,-4.832`},{-52.9449`,-8.3469`},{-52.3661`,-14.6887`},{-51.7872`,-17.8354`},{-51.2083`,-11.4492`},{-50.6294`,-13.8761`},{-50.0505`,-7.6376`},{-49.4717`,-20.6722`},{-48.8928`,-6.1023`},{-48.3139`,-3.0062`},{-47.735`,6.8016`},{-47.1562`,23.4155`},{-46.5773`,0.9423`},{-45.9984`,19.5976`},{-45.4195`,0.8777`},{-44.8407`,2.3731`},{-44.2618`,16.3106`},{-43.6829`,4.7338`},{-43.104`,7.0143`},{-42.5252`,-0.4604`},{-41.9463`,16.6188`},{-41.3674`,-7.5774`},{-40.7885`,4.786`},{-40.2096`,9.1225`},{-39.6308`,6.0894`},{-39.0519`,8.1521`},{-38.473`,0.7713`},{-37.8941`,24.0671`},{-37.3153`,-5.3851`},{-36.7364`,7.6461`},{-36.1575`,6.2401`},{-35.5786`,5.5707`},{-34.9998`,-3.8426`},{-34.4209`,-8.1403`},{-33.842`,4.7625`},{-33.2631`,-11.033`},{-32.6843`,-10.0288`},{-32.1054`,-9.4915`},{-31.5265`,6.0948`},{-30.9476`,22.7781`},{-30.3687`,-18.0986`},{-29.7899`,-5.7582`},{-29.211`,-7.9967`},{-28.6321`,17.574`},{-28.0532`,9.6356`},{-27.4744`,-12.3885`},{-26.8955`,-9.992`},{-26.3166`,-8.0265`},{-25.7377`,-6.8299`},{-25.1589`,-8.0575`},{-24.58`,9.9059`},{-24.0011`,4.6671`},{-23.4222`,29.4874`},{-22.8434`,-5.0773`},{-22.2645`,3.1678`},{-21.6856`,-3.0654`},{-21.1067`,-4.1394`},{-20.5278`,-12.4577`},{-19.949`,-7.0589`},{-19.3701`,-10.7888`},{-18.7912`,4.4065`},{-18.2123`,5.4024`},{-17.6335`,6.2734`},{-17.0546`,-4.4128`},{-16.4757`,9.1531`},{-15.8968`,-17.4617`},{-15.318`,-5.7665`},{-14.7391`,-8.6346`},{-14.1602`,-1.6776`},{-13.5813`,5.549`},{-13.0025`,-1.2764`},{-12.4236`,1.6277`},{-11.8447`,-6.2084`},{-11.2658`,5.6592`},{-10.6869`,4.7049`},{-10.1081`,8.8459`},{-9.5292`,-5.952`},{-8.9503`,14.4889`},{-8.3714`,23.2175`},{-7.7926`,21.225`},{-7.2137`,15.7654`},{-6.6348`,-2.578`},{-6.0559`,8.965`},{-5.4771`,-9.7285`},{-4.8982`,-2.9533`},{-4.3193`,75.6051`},{-3.7404`,16.4113`},{-3.1616`,14.9865`},{-2.5827`,-11.3331`},{-2.0038`,-2.0928`},{-1.4249`,-0.9202`},{-0.846`,0.2394`},{-0.2672`,6.0783`},{0.3117`,12.7922`},{0.8906`,149.8234`},{1.4695`,137.478`},{2.0483`,73.5309`},{2.6272`,20.1371`},{3.2061`,13.3703`},{3.785`,-1.6624`},{4.3638`,-5.3309`},{4.9427`,6.2866`},{5.5216`,-4.5244`},{6.1005`,-15.892`},{6.6793`,-17.247`},{7.2582`,-3.521`},{7.8371`,47.9696`},{8.416`,48.6575`},{8.9949`,143.0855`},{9.5737`,262.487`},{10.1526`,433.1576`},{10.7315`,655.7522`},{11.3104`,789.8354`},{11.8892`,812.2174`},{12.4681`,768.5621`},{13.047`,657.1636`},{13.6259`,473.0125`},{14.2047`,347.134`},{14.7836`,228.5908`},{15.3625`,146.17`},{15.9414`,77.1921`},{16.5202`,93.6922`},{17.0991`,41.6889`},{17.678`,34.9402`},{18.2569`,24.9377`},{18.8358`,6.303`},{19.4146`,7.6878`},{19.9935`,-0.4913`},{20.5724`,4.309`},{21.1513`,7.6213`},{21.7301`,14.0376`},{22.309`,10.5065`},{22.8879`,-5.2162`},{23.4668`,3.6696`},{24.0456`,-1.3919`},{24.6245`,13.7266`},{25.2034`,26.7292`},{25.7823`,-0.9272`},{26.3611`,-5.163`},{26.94`,-2.0984`},{27.5189`,-4.7001`},{28.0978`,-15.0261`},{28.6767`,-6.6703`},{29.2555`,-4.7324`},{29.8344`,-9.1476`},{30.4133`,-11.197`},{30.9922`,-18.8589`},{31.571`,-18.5209`},{32.1499`,-7.7127`},{32.7288`,-17.283`},{33.3077`,10.2485`},{33.8865`,0.7054`},{34.4654`,17.6433`},{35.0443`,26.3025`},{35.6232`,-4.1029`},{36.202`,9.6538`},{36.7809`,50.4171`},{37.3598`,71.2644`},{37.9387`,193.1155`},{38.5176`,510.2275`},{39.0964`,954.8649`},{39.6753`,1316.5008`},{40.5055`,1341.1692`},{41.6568`,1026.4138`},{42.8081`,549.0985`},{43.9595`,223.7178`},{45.1108`,34.8255`},{46.2621`,-25.6132`},{47.4134`,-69.3664`},{48.5647`,-100.2309`},{49.716`,-90.0365`},{50.8673`,-110.048`},{52.0186`,-89.8928`},{53.1699`,-70.6448`},{54.3212`,-66.6014`},{55.4725`,-7.3808`},{56.6238`,24.2758`},{57.7751`,44.6924`},{58.9264`,89.7889`},{60.0777`,151.1335`},{61.229`,290.8439`},{62.3803`,536.4023`},{63.5317`,956.7083`},{64.683`,1382.7361`},{65.8685`,1552.8259`},{68.4379`,1408.1517`},{71.2857`,1056.4687`},{74.1335`,772.6727`},{76.9813`,502.9082`},{79.8291`,456.0177`},{82.6769`,597.0413`},{85.5247`,933.6729`},{88.3726`,1140.7761`},{91.3774`,1132.9723`},{94.5917`,934.8548`},{97.8059`,695.1553`},{101.0202`,506.9661`},{104.2344`,526.7152`},{107.4487`,886.2472`},{110.6629`,1485.9208`},{113.8772`,1962.2649`},{117.2542`,1986.5373`},{120.9477`,1602.6262`},{124.6412`,1052.4658`},{128.3347`,520.8706`},{132.0283`,237.5131`},{135.7218`,179.6594`},{139.4153`,194.352`},{143.1088`,188.4899`},{146.8023`,193.5516`},{150.4959`,149.3122`},{154.1894`,68.9806`},{157.8829`,26.3029`},{161.5764`,32.2454`},{165.2699`,82.5101`},{168.9635`,171.1333`},{172.657`,342.7152`},{176.3505`,529.9803`},{180.044`,653.1731`},{183.7376`,523.2293`},{187.4311`,361.8707`},{191.1246`,167.4945`},{194.8181`,61.7772`},{198.5116`,60.4075`},{202.2052`,35.8679`},{205.8987`,44.0184`},{209.5922`,65.031`},{213.2857`,95.5418`},{216.9792`,120.0814`},{220.6728`,175.8616`},{224.3663`,244.9024`},{228.0598`,308.0053`},{231.7533`,342.9063`},{235.4469`,388.0488`},{239.1404`,402.7888`},{242.8339`,364.4319`},{246.5274`,337.8086`},{250.2209`,229.8374`},{253.9145`,156.6267`},{257.608`,33.2384`},{261.3015`,-62.4133`},{264.995`,-107.0692`},{268.6885`,-145.7654`},{272.3821`,-167.8836`},{276.0756`,-174.4012`},{279.7691`,-160.7985`},{283.4626`,-94.334`},{287.1562`,-132.8897`},{290.8497`,-88.0442`},{294.5432`,-24.0263`},{298.2367`,17.0242`},{301.9302`,39.8069`},{305.6238`,53.6636`},{309.3173`,58.9873`},{313.0108`,23.7347`},{316.7043`,-15.399`},{320.3978`,-13.7185`},{324.0914`,-29.1139`},{327.7849`,-37.6242`},{331.4784`,-40.0249`},{335.1719`,-26.3684`},{338.8654`,-21.9221`},{342.559`,-23.7979`},{346.2525`,-14.4608`},{349.946`,-0.908`},{353.6395`,-8.8529`},{357.3331`,-8.4405`}};
	)
];


(* ::Subsubsection::Closed:: *)
(*ValidAnalyzePeaksQ*)


DefineTests[ValidAnalyzePeaksQ, {

	Example[{Basic, "Validate input for chromatography data:"},
		ValidAnalyzePeaksQ[Object[Data,Chromatography,"id:vXl9j57qJwZB"]],
		True
	],

	Example[{Basic,"Validate input for list of chromatography datas:"},
		ValidAnalyzePeaksQ[{Object[Data,Chromatography,"id:6V0npvmKkO9Z"],Object[Data,Chromatography,"id:9RdZXv1KmoGX"],Object[Data,Chromatography,"id:M8n3rx0YeZp8"]}],
		True
	],

	Example[{Basic, "Validate input for raw numeric data:"},
		ValidAnalyzePeaksQ[xyPts],
		True
	],
	Example[{Options, OutputFormat, "Return an EmeraldTestSummary:"},
		ValidAnalyzePeaksQ[Object[Data,Chromatography,"id:vXl9j57qJwZB"], OutputFormat->TestSummary],
		_EmeraldTestSummary
	],
	Example[{Options, Verbose, "Print verbose messages reporting test passage / failure:"},
		ValidAnalyzePeaksQ[Object[Data,Chromatography,"id:vXl9j57qJwZB"], Verbose->True],
		True
	]
	},

	Variables:>{xyPts},
	SetUp:>(
		xyPts={{-60.4703`,1.587`},{-59.8914`,-2.9288`},{-59.3126`,-2.8543`},{-58.7337`,-3.6064`},{-58.1548`,-3.5293`},{-57.5759`,-7.4673`},{-56.9971`,0.8248`},{-56.4182`,23.293`},{-55.8393`,0.3193`},{-55.2604`,-13.9593`},{-54.6816`,-12.3607`},{-54.1027`,-3.2422`},{-53.5238`,-4.832`},{-52.9449`,-8.3469`},{-52.3661`,-14.6887`},{-51.7872`,-17.8354`},{-51.2083`,-11.4492`},{-50.6294`,-13.8761`},{-50.0505`,-7.6376`},{-49.4717`,-20.6722`},{-48.8928`,-6.1023`},{-48.3139`,-3.0062`},{-47.735`,6.8016`},{-47.1562`,23.4155`},{-46.5773`,0.9423`},{-45.9984`,19.5976`},{-45.4195`,0.8777`},{-44.8407`,2.3731`},{-44.2618`,16.3106`},{-43.6829`,4.7338`},{-43.104`,7.0143`},{-42.5252`,-0.4604`},{-41.9463`,16.6188`},{-41.3674`,-7.5774`},{-40.7885`,4.786`},{-40.2096`,9.1225`},{-39.6308`,6.0894`},{-39.0519`,8.1521`},{-38.473`,0.7713`},{-37.8941`,24.0671`},{-37.3153`,-5.3851`},{-36.7364`,7.6461`},{-36.1575`,6.2401`},{-35.5786`,5.5707`},{-34.9998`,-3.8426`},{-34.4209`,-8.1403`},{-33.842`,4.7625`},{-33.2631`,-11.033`},{-32.6843`,-10.0288`},{-32.1054`,-9.4915`},{-31.5265`,6.0948`},{-30.9476`,22.7781`},{-30.3687`,-18.0986`},{-29.7899`,-5.7582`},{-29.211`,-7.9967`},{-28.6321`,17.574`},{-28.0532`,9.6356`},{-27.4744`,-12.3885`},{-26.8955`,-9.992`},{-26.3166`,-8.0265`},{-25.7377`,-6.8299`},{-25.1589`,-8.0575`},{-24.58`,9.9059`},{-24.0011`,4.6671`},{-23.4222`,29.4874`},{-22.8434`,-5.0773`},{-22.2645`,3.1678`},{-21.6856`,-3.0654`},{-21.1067`,-4.1394`},{-20.5278`,-12.4577`},{-19.949`,-7.0589`},{-19.3701`,-10.7888`},{-18.7912`,4.4065`},{-18.2123`,5.4024`},{-17.6335`,6.2734`},{-17.0546`,-4.4128`},{-16.4757`,9.1531`},{-15.8968`,-17.4617`},{-15.318`,-5.7665`},{-14.7391`,-8.6346`},{-14.1602`,-1.6776`},{-13.5813`,5.549`},{-13.0025`,-1.2764`},{-12.4236`,1.6277`},{-11.8447`,-6.2084`},{-11.2658`,5.6592`},{-10.6869`,4.7049`},{-10.1081`,8.8459`},{-9.5292`,-5.952`},{-8.9503`,14.4889`},{-8.3714`,23.2175`},{-7.7926`,21.225`},{-7.2137`,15.7654`},{-6.6348`,-2.578`},{-6.0559`,8.965`},{-5.4771`,-9.7285`},{-4.8982`,-2.9533`},{-4.3193`,75.6051`},{-3.7404`,16.4113`},{-3.1616`,14.9865`},{-2.5827`,-11.3331`},{-2.0038`,-2.0928`},{-1.4249`,-0.9202`},{-0.846`,0.2394`},{-0.2672`,6.0783`},{0.3117`,12.7922`},{0.8906`,149.8234`},{1.4695`,137.478`},{2.0483`,73.5309`},{2.6272`,20.1371`},{3.2061`,13.3703`},{3.785`,-1.6624`},{4.3638`,-5.3309`},{4.9427`,6.2866`},{5.5216`,-4.5244`},{6.1005`,-15.892`},{6.6793`,-17.247`},{7.2582`,-3.521`},{7.8371`,47.9696`},{8.416`,48.6575`},{8.9949`,143.0855`},{9.5737`,262.487`},{10.1526`,433.1576`},{10.7315`,655.7522`},{11.3104`,789.8354`},{11.8892`,812.2174`},{12.4681`,768.5621`},{13.047`,657.1636`},{13.6259`,473.0125`},{14.2047`,347.134`},{14.7836`,228.5908`},{15.3625`,146.17`},{15.9414`,77.1921`},{16.5202`,93.6922`},{17.0991`,41.6889`},{17.678`,34.9402`},{18.2569`,24.9377`},{18.8358`,6.303`},{19.4146`,7.6878`},{19.9935`,-0.4913`},{20.5724`,4.309`},{21.1513`,7.6213`},{21.7301`,14.0376`},{22.309`,10.5065`},{22.8879`,-5.2162`},{23.4668`,3.6696`},{24.0456`,-1.3919`},{24.6245`,13.7266`},{25.2034`,26.7292`},{25.7823`,-0.9272`},{26.3611`,-5.163`},{26.94`,-2.0984`},{27.5189`,-4.7001`},{28.0978`,-15.0261`},{28.6767`,-6.6703`},{29.2555`,-4.7324`},{29.8344`,-9.1476`},{30.4133`,-11.197`},{30.9922`,-18.8589`},{31.571`,-18.5209`},{32.1499`,-7.7127`},{32.7288`,-17.283`},{33.3077`,10.2485`},{33.8865`,0.7054`},{34.4654`,17.6433`},{35.0443`,26.3025`},{35.6232`,-4.1029`},{36.202`,9.6538`},{36.7809`,50.4171`},{37.3598`,71.2644`},{37.9387`,193.1155`},{38.5176`,510.2275`},{39.0964`,954.8649`},{39.6753`,1316.5008`},{40.5055`,1341.1692`},{41.6568`,1026.4138`},{42.8081`,549.0985`},{43.9595`,223.7178`},{45.1108`,34.8255`},{46.2621`,-25.6132`},{47.4134`,-69.3664`},{48.5647`,-100.2309`},{49.716`,-90.0365`},{50.8673`,-110.048`},{52.0186`,-89.8928`},{53.1699`,-70.6448`},{54.3212`,-66.6014`},{55.4725`,-7.3808`},{56.6238`,24.2758`},{57.7751`,44.6924`},{58.9264`,89.7889`},{60.0777`,151.1335`},{61.229`,290.8439`},{62.3803`,536.4023`},{63.5317`,956.7083`},{64.683`,1382.7361`},{65.8685`,1552.8259`},{68.4379`,1408.1517`},{71.2857`,1056.4687`},{74.1335`,772.6727`},{76.9813`,502.9082`},{79.8291`,456.0177`},{82.6769`,597.0413`},{85.5247`,933.6729`},{88.3726`,1140.7761`},{91.3774`,1132.9723`},{94.5917`,934.8548`},{97.8059`,695.1553`},{101.0202`,506.9661`},{104.2344`,526.7152`},{107.4487`,886.2472`},{110.6629`,1485.9208`},{113.8772`,1962.2649`},{117.2542`,1986.5373`},{120.9477`,1602.6262`},{124.6412`,1052.4658`},{128.3347`,520.8706`},{132.0283`,237.5131`},{135.7218`,179.6594`},{139.4153`,194.352`},{143.1088`,188.4899`},{146.8023`,193.5516`},{150.4959`,149.3122`},{154.1894`,68.9806`},{157.8829`,26.3029`},{161.5764`,32.2454`},{165.2699`,82.5101`},{168.9635`,171.1333`},{172.657`,342.7152`},{176.3505`,529.9803`},{180.044`,653.1731`},{183.7376`,523.2293`},{187.4311`,361.8707`},{191.1246`,167.4945`},{194.8181`,61.7772`},{198.5116`,60.4075`},{202.2052`,35.8679`},{205.8987`,44.0184`},{209.5922`,65.031`},{213.2857`,95.5418`},{216.9792`,120.0814`},{220.6728`,175.8616`},{224.3663`,244.9024`},{228.0598`,308.0053`},{231.7533`,342.9063`},{235.4469`,388.0488`},{239.1404`,402.7888`},{242.8339`,364.4319`},{246.5274`,337.8086`},{250.2209`,229.8374`},{253.9145`,156.6267`},{257.608`,33.2384`},{261.3015`,-62.4133`},{264.995`,-107.0692`},{268.6885`,-145.7654`},{272.3821`,-167.8836`},{276.0756`,-174.4012`},{279.7691`,-160.7985`},{283.4626`,-94.334`},{287.1562`,-132.8897`},{290.8497`,-88.0442`},{294.5432`,-24.0263`},{298.2367`,17.0242`},{301.9302`,39.8069`},{305.6238`,53.6636`},{309.3173`,58.9873`},{313.0108`,23.7347`},{316.7043`,-15.399`},{320.3978`,-13.7185`},{324.0914`,-29.1139`},{327.7849`,-37.6242`},{331.4784`,-40.0249`},{335.1719`,-26.3684`},{338.8654`,-21.9221`},{342.559`,-23.7979`},{346.2525`,-14.4608`},{349.946`,-0.908`},{353.6395`,-8.8529`},{357.3331`,-8.4405`}};
	)
];


(* ::Subsection:: *)
(*Plotting*)


(* ::Subsubsection:: *)
(*PeakEpilog*)


DefineTests[
	PeakEpilog,
	{
		Example[
			{Basic,"Provides mouseover details about the peaks:"},
			PeakEpilog[chromatograph,peaksSpecs,PlotRange->{{0,20},{0,1.2}},Display->{Peaks}],
			List[_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Mouseover]
		],
		Example[
			{Options,Display,"Specifies Peaks and Peak Widths will be displayed:"},
			PeakEpilog[chromatograph,peaksSpecs,PlotRange->{{0,20},{0,1.2}},Display->{Peaks,PeakWidths}],
			List[_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Mouseover]
		],
		Example[
			{Options,PlotRange,"Specifies the range of the plot on which the peaks will be displayed:"},
			PeakEpilog[chromatograph,peaksSpecs,PlotRange->{{0,20},{0,1.2}},Display->{Peaks}],
			List[_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Mouseover]
		],
		Example[
			{Options,SecondYUnscaled,"Specifies if the data on the second Y axis is unscaled:"},
			PeakEpilog[chromatograph,peaksSpecs,PlotRange->{{0,20},{0,1.2}},Display->{Peaks},SecondYUnscaled->gradient],
			List[_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Mouseover]
		],
		Example[
			{Options,SecondYScaled,"Specifies if the data on the second Y axis is scaled:"},
			PeakEpilog[chromatograph,peaksSpecs,PlotRange->{{0,20},{0,1.2}},Display->{Peaks},SecondYScaled->{}],
			List[_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Mouseover]
		],
		Example[
			{Options,Reflected,"Reflects the peaks about the X-axis:"},
			PeakEpilog[chromatograph,peaksSpecs,PlotRange->{{0,20},{0,1.2}},Display->{Peaks},Reflected->False],
			List[_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Mouseover]
		],
		Example[
			{Options,Yaxis,"Don't draw lines and labels on mouseover:"},
			PeakEpilog[chromatograph,peaksSpecs,PlotRange->{{0,20},{0,1.2}},Display->{Peaks},Yaxis->False],
			List[_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Mouseover]
		],
		Example[
			{Options,LabelStyle,"Change the style of the peak labels:"},
			PeakEpilog[chromatograph,peaksSpecs,PlotRange->{{0,20},{0,1.2}},Display->{Peaks},LabelStyle->{Bold,14,FontFamily->"Calibri"}],
			List[_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Mouseover]
		],
		Example[
			{Options,PeakPointSize,"Change the size of the points on the peaks:"},
			PeakEpilog[chromatograph,peaksSpecs,PlotRange->{{0,20},{0,1.2}},Display->{Peaks},PeakPointSize->0.025],
			List[_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Mouseover]
		],
		Example[
			{Options,PeakPointColor,"Change the color of the peak points:"},
			PeakEpilog[chromatograph,peaksSpecs,PlotRange->{{0,20},{0,1.2}},Display->{Peaks},PeakPointColor->RGBColor[0,0,0]],
			List[_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Mouseover]
		],
		Example[
			{Options,PeakWidthColor,"Change the color of the peak width bars:"},
			PeakEpilog[chromatograph,peaksSpecs,PlotRange->{{0,20},{0,1.2}},Display->{Peaks},PeakWidthColor->RGBColor[0,0,0]],
			List[_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Mouseover]
		],
		Example[
			{Options,PeakAreaColor,"Change the color of the peak areas:"},
			PeakEpilog[chromatograph,peaksSpecs,PlotRange->{{0,20},{0,1.2}},Display->{Peaks},PeakAreaColor->RGBColor[0,0,0]],
			List[_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Mouseover]
		],
		Example[
			{Options,AspectRatio,"Change the aspect ratio of the epilog:"},
			PeakEpilog[chromatograph,peaksSpecs,PlotRange->{{0,20},{0,1.2}},Display->{Peaks},AspectRatio->GoldenRatio],
			List[_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Mouseover]
		],
		Test[
			"Returns an empty list if Display option does not include Peaks:",
			PeakEpilog[chromatograph,peaksSpecs,PlotRange->{{0,20},{0,1.2}},Display->{Gradient}],
			{}
		],
		Test[
			"Returns an empty list if the peak data is not specified:",
			PeakEpilog[chromatograph,Null,PlotRange->{{0,20},{0,1.2}},Display->{Peaks,PeakWidths}],
			{}
		],
		Test[
			"Return an empty list of lists when provided with a list of null peak data:",
			PeakEpilog[{chromatograph},{Null},PlotRange->{{0,20},{0,1.2}},Display->{Peaks,PeakWidths}],
			{{}}
		],
		Test[
			"Accepts lists of plot data and peak data:",
			PeakEpilog[{chromatograph,chromatograph},{peaksSpecs,peaksSpecs},PlotRange->{{0,20},{0,1.2}},Display->{Peaks}],
			List[List[_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Mouseover],List[_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Mouseover]]
		],
		Test[
			"Specifies if the data on the second Y axis is scaled or unscaled:",
			PeakEpilog[chromatograph,peaksSpecs,PlotRange->{{0,20},{0,1.2}},Display->{Peaks},SecondYUnscaled->gradient,SecondYScaled->gradient],
			List[_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Mouseover]
		],
		Test[
			"Gradients with duplicated x-values are handled appropriately and do not throw errors:",
			PeakEpilog[chromatograph,peaksSpecs,PlotRange->{{0,20},{0,1.2}},Display->{Peaks},SecondYUnscaled->gradientRepeatedPoints,SecondYScaled->gradientRepeatedPoints],
			List[_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Mouseover]
		],
		Test[
			"Empty peaks return empty list:",
			PeakEpilog[chromatograph,emptyPeaks,PlotRange->{{0,20},{0,1.2}},Display->{Peaks}],
			{}
		],
		Test[
			"If peak labels are included, these will be shown as text above the peak:",
			PeakEpilog[chromatograph,Append[peaksSpecs,PeakLabel->{"A","B","C"}],PlotRange->{{0,20},{0,1.2}},Display->{Peaks}],
			List[_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Mouseover,_Text,_Text,_Text]
		],
		Test[
			"If peak labels would overlap, they are raised higher above the peak:",
			PeakEpilog[
				Object[Data, Chromatography, "id:AEqRl9KNJ0Ol"][Absorbance],
				<|Type -> Object[Analysis, Peaks],
					Position -> {0.183333, 0.216667, 0.25, 0.583333, 0.75, 0.783333},
					Height -> {254.579, 259.158, 254.579, 800., 509.341, 519.158},
					HalfHeightWidth -> {0.0266667, 0.0133333, 0.0266667, 0.0266667,
						0.0266667, 0.0266667},
					Area -> {7.38532, 7.38504, 7.38532, 23.6327, 14.7941, 15.0422},
					PeakRangeStart -> {0., 0.2, 0.233333, 0.416667, 0.666667, 0.766667},
					PeakRangeEnd -> {0.2, 0.233333, 0.416667, 0.666667, 0.766667,
						0.916667},
					WidthRangeStart -> {0.173333, 0.21, 0.233333, 0.57, 0.74, 0.766667},
					WidthRangeEnd -> {0.2, 0.223333, 0.26, 0.596667, 0.766667, 0.793333},
					BaselineIntercept -> {7.05193*10^-51, 7.05193*10^-51,
						7.05193*10^-51, 7.05193*10^-51, 7.05193*10^-51, 7.05193*10^-51},
					BaselineSlope -> {0., 0., 0., 0., 0., 0.},
					BaselineFunction -> Function[{x}, 0.*x + 7.05193*10^-51],
					TailingFactor -> {1.33333, 1., 0.8, 1., 1.33333, 0.8},
					RelativeArea -> {0.312504, 0.312492, 0.312504, 1., 0.626, 0.6365},
					RelativePosition -> {0.314286, 0.371429, 0.428571, 1., 1.28571,
						1.34286},
					PeakLabel -> {"John", "William", "Fred", "Harry", "James",
						"Charles"}|>,
				PlotRange->{{0,1},{0,820}},Display->{Peaks}
			],
			List[(*_List.., *)_Mouseover..,_List,_List,_List,_List,_List,_Text,_Text,_Text,_Text,_Text,_Text]
		],
		Test[
			"Area stays the same with constant flow rate:",
			epi1=PeakEpilog[Transpose[{transformedTimes,absorbanceSamples}],{2.5},{20},{1.9},{39.9},{0.6},{4.4},{1.55},{3.45},{0},{0},If[0<#<5,0,Indeterminate]&,{"test"},PlotRange->{{0,5},{0,30}},Display->{Peaks}];
			epi2=PeakEpilog[Transpose[{transformedTimes,absorbanceSamples}],{2.5},{20},{1.9},{39.9},{0.6},{4.4},{1.55},{3.45},{0},{0},QuantityFunction[(If[0<#<5,0,Indeterminate]&),{Minute,MilliAbsorbanceUnit}],{"test"},PlotRange->{{0,5},{0,30}},Display->{Peaks},XTransformationFunction->volumeFunction];
			MatchQ[First[epi1[[2,1,2,2,1]]],First[epi2[[2,1,2,2,1]]]],
			True
		],
		Test[
			"Area increases with increasing flow rate:",
			epi1=PeakEpilog[Transpose[{transformedTimes,absorbanceSamples}],{2.5},{20},{1.9},{39.9},{0.6},{4.4},{1.55},{3.45},{0},{0},If[0<#<5,0,Indeterminate]&,{"test"},PlotRange->{{0,5},{0,30}},Display->{Peaks}];
			epi2=PeakEpilog[Transpose[{transformedTimesIncreased,absorbanceSamples}],{2.5},{20},{1.9},{39.9},{0.6},{4.4},{1.55},{3.45},{0},{0},QuantityFunction[(If[0<#<5,0,Indeterminate]&),{Minute,MilliAbsorbanceUnit}],{"test"},PlotRange->{{0,10},{0,30}},Display->{Peaks},XTransformationFunction->volumeFunctionIncreased];
			LessQ[First[epi1[[2,1,2,2,1]]],First[epi2[[2,1,2,2,1]]]],
			True
		],
		Test[
			"Area decreases with decreasing flow rate:",
			Quiet[epi1=PeakEpilog[Transpose[{transformedTimes,absorbanceSamples}],{2.5},{20},{1.9},{39.9},{0.6},{4.4},{1.55},{3.45},{0},{0},If[0<#<5,0,Indeterminate]&,{"test"},PlotRange->{{0,5},{0,30}},Display->{Peaks}];
			epi2=PeakEpilog[Transpose[{transformedTimesDecreased,absorbanceSamples}],{2.5},{20},{1.9},{39.9},{0.6},{4.4},{1.55},{3.45},{0},{0},QuantityFunction[(If[0<#<5,0,Indeterminate]&),{Minute,MilliAbsorbanceUnit}],{"test"},PlotRange->{{0,10},{0,30}},Display->{Peaks},XTransformationFunction->volumeFunctionDecreased];
			GreaterQ[First[epi1[[2,1,2,2,1]]],First[epi2[[2,1,2,2,1]]]],{Solve::ratnz}],
			True
		]
	},
	Variables:>{chromatograph,peaksSpecs,gradient,gradientRepeatedPoints,emptyPeaks,timeSamples,absorbanceSamples,flowRate,volumeFunction,transformedTimes,flowRateIncreased,volumeFunctionIncreased,flowRateDecreased,volumeFunctionDecreased},
	SetUp:>(
		chromatograph=Download[Object[Data, Chromatography, "id:Y0lXejGKB9da"],Absorbance];
		peaksSpecs=<|Type->Object[Analysis,Peaks],Position->{1.737`,9.513`,8.703`},Height->{128.538`,285.257`,1241.582`},HalfHeightWidth->{0.29`,0.299999999999999`,0.282999999999999`},Area->{45.2193095`,96.9551515000001`,386.3184255`},PeakRangeStart->{1.46`,9.173`,7.907`},PeakRangeEnd->{2.383`,10.683`,9.173`},WidthRangeStart->{1.6`,9.367`,8.567`},WidthRangeEnd->{1.89`,9.667`,8.85`},BaselineIntercept->{-0.274`,-0.274`,-0.274`},BaselineSlope->{0.`,0.`,0.`},BaselineFunction->Function[{x}, 0.*x + -0.274`]|>;
		emptyPeaks = <|Type->Object[Analysis,Peaks],Area->{},BaselineIntercept->{},BaselineSlope->{},Height->{},PeakRangeEnd->{},PeakRangeStart->{},Position->{},HalfHeightWidth->{},WidthRangeEnd->{},WidthRangeStart->{}|>;
		gradient={{0.`, 20.`}, {5.`, 20.`}, {45.`, 55.`}, {45.1`, 100.`}, {50.`,100.`}, {50.1`, 0.`}, {55.`, 0.`}, {55.1`, 20.`}, {60.`, 20.`}};
		gradientRepeatedPoints={{0.`,88.`},{0.`,100.`},{0.1`,100.`},{5.`,88.`},{50.`,63.`},{50.1`,0.`},{55.`,0.`},{55.1`,88.`},{60.`,88.`}};
		timeSamples=Range[0,5,.1];
		absorbanceSamples=Join[Table[0, {5}], Range[0, 20, 1], Range[19, 0, -1], Table[0, {5}]];
		flowRate = Piecewise[{{1, t < 2}}, 1];
		volumeFunction = Integrate[flowRate, {t, 0, T}, Assumptions -> T > 0];
		transformedTimes = volumeFunction /. T -> # & /@ timeSamples;
		flowRateIncreased = Piecewise[{{1, t < 2}}, 2];
		volumeFunctionIncreased=Integrate[flowRateIncreased, {t, 0, T}, Assumptions -> T > 0];
		transformedTimesIncreased=volumeFunctionIncreased /. T -> # & /@ timeSamples;
		flowRateDecreased = Piecewise[{{1, t < 2}}, 0.5];
		volumeFunctionDecreased=Integrate[flowRateDecreased, {t, 0, T}, Assumptions -> T > 0];
		transformedTimesDecreased=volumeFunctionDecreased /. T -> # & /@ timeSamples;
	)
];


(* ::Section:: *)
(*End Test Package*)
