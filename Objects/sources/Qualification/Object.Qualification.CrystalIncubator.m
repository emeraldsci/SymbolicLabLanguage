(* ::Package:: *)

DefineObjectType[Object[Qualification, CrystalIncubator], {
	Description -> "A protocol that verifies the functionality of the crystal incubator instrument target.",
	CreatePrivileges -> None,
	Cache -> Session,
	Fields -> {
		PreparatoryUnitOperations -> {
			Format -> Multiple,
			Class -> Expression,
			Pattern :> SamplePreparationP,
			Description -> "A list of transfers, consolidations, aliquots, mixes and dilutions that will be performed in the order listed to prepare samples for the qualification.",
			Category -> "Sample Preparation"
		},
		CrystallizationCover -> {
			Format -> Single,
			Class -> Link,
			Pattern :> _Link,
			Relation -> (Model[Item, PlateSeal]|Object[Item, PlateSeal]),
			Description -> "The cover to be used to seal the crystallization plate.",
			Category -> "General"
		},
		MaxCrystallizationTime -> {
			Format -> Single,
			Class -> Real,
			Pattern :> GreaterEqualP[0 Day],
			Units -> Day,
			Description -> "The max length of time for which the sample is held inside the crystal incubator in the qualification.",
			Category -> "General"
		},
		VerificationDataFilePath -> {
			Format -> Single,
			Class -> String,
			Pattern :> FilePathP,
			Description -> "The file path of the folder containing the the MARCO autoscores of the qualification.",
			Category -> "Experimental Results",
			Developer -> True
		},
		VerificationDataFileName -> {
			Format -> Single,
			Class -> String,
			Pattern :> _String,
			Description -> "The file name of the data file generated by the the MARCO autoscores of the qualification.",
			Category -> "Experimental Results",
			Developer -> True
		},
		VerificationDataFile -> {
			Format -> Single,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Object[EmeraldCloudFile],
			Description -> "The image file containing the the MARCO autoscores of the qualification.",
			Category -> "Experimental Results"
		}
	}
}];