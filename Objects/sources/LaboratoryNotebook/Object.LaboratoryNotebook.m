(* ::Package:: *)

(* ::Text:: *)
(*\[Copyright] 2011-2023 Emerald Cloud Lab, Inc.*)


DefineObjectType[Object[LaboratoryNotebook], {
	Description -> "A laboratory notebook which is used to conduct experiments, visualize and analze data, conduct simulations, as well as store and share experimental results.",
	CreatePrivileges -> None,
	Cache -> Session,
	Fields -> {
		Name -> {
			Format -> Single,
			Class -> String,
			Pattern :> _String,
			Description -> "A short title indicating this notebook's purpose or contents.",
			Category -> "Organizational Information",
			Abstract -> True
		},
		Financers -> {
			Format -> Multiple,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Object[Team,Financing][NotebooksFinanced],
			Description -> "Financing groups that cover the costs of experiments run from this notebook, as well as any recurring data or physical storage costs generated by this notebook.",
			Category -> "Organizational Information",
			Abstract -> True
		},
		Administrators -> {
			Format -> Multiple,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Object[User],
			Description -> "Users which control access privileges to this notebook.",
			Category -> "Organizational Information",
			Abstract -> False
		},
		Editors -> {
			Format -> Multiple,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Object[Team][Notebooks],
			Description -> "Teans of users which can edit the contents of this notebook as well as run new experiments in this notebook.",
			Category -> "Organizational Information",
			Abstract -> False
		},
		Viewers -> {
			Format -> Multiple,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Object[Team][Notebooks],
			Description -> "Teams of users which can view the contents of this notebook including all its pages and objects.",
			Category -> "Organizational Information",
			Abstract -> False
		},
		Authors -> {
			Format -> Multiple,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Object[User],
			Description -> "Current and former team members who have contributed content to notebook.",
			Category -> "Organizational Information",
			Abstract -> False
		},
		Public -> {
			Format -> Single,
			Class -> Expression,
			Pattern :> BooleanP,
			Description -> "Indicates if the notebook and it's objects are publically avaiable to all users of the ECL and the scientific community at large.",
			Category -> "Organizational Information",
			Abstract -> True
		},
		Pages -> {
			Format -> Multiple,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Object[Notebook, Page],
			Description -> "Notebook pages associated with this notebook.",
			Category -> "Organizational Information"
		},
		Functions -> {
			Format -> Multiple,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Object[Notebook, Function],
			Description -> "Notebook functions associated with this notebook.",
			Category -> "Organizational Information"
		},
		Scripts -> {
			Format -> Multiple,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Object[Notebook, Script],
			Description -> "Notebook scripts associated with this notebook.",
			Category -> "Organizational Information"
		},
		Jobs -> {
			Format -> Multiple,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Object[Notebook, Job],
			Description -> "Jobs associated with this notebook.",
			Category -> "Organizational Information"
		},
		Attachments -> {
			Format -> Multiple,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Object[EmeraldCloudFile],
			Description -> "Cloud files associated with this notebook which have been uploaded without other linkage.",
			Category -> "Organizational Information"
		},
		DataSize -> {
			Format -> Single,
			Class -> Real,
			Pattern :> GreaterP[0 ByteUnit],
			Units -> Giga ByteUnit,
			Description -> "Estimated size of the data associated with this notebook including the pages and objects.",
			Category -> "Organizational Information"
		},
		DeveloperObject -> {
			Format -> Single,
			Class -> Expression,
			Pattern :> BooleanP,
			Description -> "Indicates that this object is being used for test purposes only and is not supported by standard SLL features.",
			Category -> "Organizational Information",
			Developer -> True
		},
		Objects->{
			Format -> Multiple,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Alternatives[
				Object[][Notebook],
				Model[][Notebook]
			],
			Description -> "Objects that were created in this notebook.",
			Category -> "Organizational Information"
		},
		Protocols -> {
			Format -> Multiple,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Object[Protocol] | Object[Qualification] | Object[Maintenance],
			Description -> "All parent protocols in this notebook.",
			Category -> "Organizational Information"
		},
		StoragePrice -> {
			Format -> Single,
			Class -> Real,
			Pattern :> GreaterEqualP[0*USD/Month],
			Units -> USD/Month,
			Description ->  "The total monthly price for warehousing all user owned items associated with this notebook in an ECL facility under the storage conditions specified by each item.",
			Category -> "Storage Information"
		},
		StoragePriceDate -> {
			Format -> Single,
			Class -> Date,
			Pattern :> _?DateObjectQ,
			Description -> "The time that the storage price of this notebook was last calculated.",
			Category -> "Storage Information"
		},
		StoragePrices -> {
			Format -> Multiple,
			Class -> Real,
			Pattern :> UnitsP[0*USD/Month],
			Units -> USD/Month,
			Description -> "The running tally of the total monthly price for warehousing all user owned items associated with this notebook in an ECL facility under the storage conditions specified by each item.  To find the current price, sum all values of this field.",
			Category -> "Storage Information"
		},
		StoredObjects -> {
			Format -> Multiple,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Alternatives[
				Object[Sample],
				Object[Container],
				Object[Part],
				Object[Plumbing],
				Object[Wiring],
				Object[Item]
			],
			Description -> "List of all physical items associated with this notebook that are currently being warehoused in an ECL facility.",
			Category -> "Storage Information"
		},
		DateLastUsed -> {
			Format -> Single,
			Class -> Date,
			Pattern :> _?DateObjectQ,
			Description -> "Date any physical items associated with this notebook were last handled in the lab.",
			Category -> "Storage Information"
		},
		BookmarkColumns -> {
			Format->Multiple,
			Class -> {
				ColumnObjectType -> String,
				ColumnFields -> String,
				ColumnLabels -> String
			},
			Pattern :> {
				ColumnObjectType -> _,
				ColumnFields -> _String,
				ColumnLabels -> _String
			},
			Description -> "The information needed to display bookmark objects of each type including their requested fields and field labels.",
			Category -> "General"
		},
		BookmarkCount -> {
			Format -> Single,
			Class -> Integer,
			Pattern :> GreaterEqualP[0],
			Description -> "The total number of bookmarks that are associated to this LaboratoryNotebook.",
			Category -> "General",
			Developer -> True
		}
	}
}]
