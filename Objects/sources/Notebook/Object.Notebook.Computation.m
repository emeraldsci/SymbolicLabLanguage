(* ::Package:: *)

(* ::Text:: *)
(*\[Copyright] 2011-2023 Emerald Cloud Lab, Inc.*)


DefineObjectType[Object[Notebook, Computation], {
	Description->"A computation asset in a lab notebook, containing a sequence of code to run asynchronously on the ECL Manifold.",
	CreatePrivileges->Developer,
	Cache->Download,
	Fields -> {
		Archive -> {
			Format -> Single,
			Class -> Expression,
			Pattern :> BooleanP,
			Description -> "Indicates that this computation has been archived, and should not appear in a list of recent computations.",
			Category -> "Organizational Information"
		},
		Status -> {
			Format -> Single,
			Class -> Expression,
			Pattern :> ComputationStatusP,
			Description -> StringJoin[
				"Current status of this computation. ",
				"Queued - Awaiting free computational threads. ",
				"Ready - Ready to be staged on Manifold. Staging will occur automatically. ",
				"Staged - Manifold is preparing the computation for execution. No code from the template notebook has executed yet. ",
				"WaitingForDistro - Manifold is waiting for a distro to be built for the specified SLL branch and commit. ",
				"Running - Code is being executed on Manifold. ",
				"Completed - Code has run to completion without errors. ",
				"Aborting - Currently evaluating cell has been aborted, and computation is in the process of shutting down. ",
				"Aborted - Terminated by user. If the computation was Running before being aborted, the most recently evaluated cell is not guaranteed to have completed, and restarting may not be possible. ",
				"Stopping - Computation will stop immediately after the current cell has completed evaluation. ",
				"Stopped - Terminated by user. If the computation was Running before being stopped, the most recently evaluated cell is guaranteed to have run to completion, and the computation may be restarted. ",
				"TimedOut - Terminated by system because computation exceeded its MaximumRunTime. ",
				"Error - Terminated unexpectedly, with unhandled error state."
			],
			Category -> "Status"
		},
		ErrorMessage -> {
			Format -> Single,
			Class -> String,
			Pattern :> _String,
			Description -> "If this computation has status Error, a message explaining why the computation failed to run.",
			Category -> "Status",
			Developer -> True
		},
		DateEnqueued -> {
			Format -> Single,
			Class -> Date,
			Pattern :> _?DateObjectQ,
			Description -> "Date when this Manifold computation was enqueued.",
			Category -> "Status"
		},
		DateReady -> {
			Format -> Single,
			Class -> Date,
			Pattern :> _?DateObjectQ,
			Description -> "Date when this Manifold computation was marked ready for staging.",
			Category -> "Status"
		},
		DateStaged -> {
			Format -> Single,
			Class -> Date,
			Pattern :> _?DateObjectQ,
			Description -> "Date when this Manifold computation was staged (MM kernel on fargate has been initialized, but RunComputation has not started yet).",
			Category -> "Status"
		},
		DateStarted -> {
			Format -> Single,
			Class -> Date,
			Pattern :> _?DateObjectQ,
			Description -> "Date when this Manifold computation was started.",
			Category -> "Status"
		},
		DateCompleted -> {
			Format -> Single,
			Class -> Date,
			Pattern :> _?DateObjectQ,
			Description -> "Date when this Manifold computation was completed.",
			Category -> "Status"
		},
		ActualRunTime -> {
			Format -> Single,
			Class -> Real,
			Pattern :> GreaterP[0 Second],
			Units -> Second,
			Description -> "The absolute amount of time that this computation ran for on Manifold.",
			Category -> "Status"
		},
		Job -> {
			Format -> Single,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Object[Notebook, Job][Computations],
			Description -> "The Manifold job which created this computation.",
			Category -> "Computations"
		},
		ComputationFinancingTeam -> {
			Format -> Single,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Object[Team, Financing][ComputationQueue] | Object[Team, Financing][RunningComputations] | Object[Team, Financing][FailedComputations],
			Description -> "The organization which should finance the computational costs of computations created by this job.",
			Category -> "Computations"
		},
		TrackedObjects -> {
			Format -> Multiple,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Object[],
			Description -> "If this computation was generated by a Triggered job, the list of one or more objects which triggered the computation.",
			Category -> "Computations"
		},
		History -> {
			Format -> Multiple,
			Class -> {
				Expression -> Compressed, (* ex. Hold[1+1] *)
				Kernel -> Compressed, (* Stores the state of the kernel (down, up, and ownvalues) after this expression was evaluated. *)
				Messages -> Compressed, (* Stores the messages that were thrown during the evaluation of this expression. *)
				Exception -> Boolean, (* Indicates if a hard Error:: was thrown during this expression and the script needs to stop. *)
				Output -> Compressed, (* Stores the result of the computation. *)
				ObjectsGenerated -> Compressed (* Keeps track of the constellation objects generated during this expression. *)
			},
			Pattern :> {
				Expression -> _,
				Kernel -> KernelP,
				Messages -> _List,
				Exception -> BooleanP,
				Output -> _,
				ObjectsGenerated -> {ObjectP[]...}
			},
			Description -> "The series of code cells which have been run in this computation, along with kernel state, messages, generated objects and outputs from each code cell.",
			Category -> "Computations"
		},
		CompletedNotebookFile -> {
			Format -> Single,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Object[EmeraldCloudFile],
			Description -> "The Mathematica notebook file (.nb) containing completed commands for this Manifold computation.",
			Category -> "Computations",
			Abstract -> True
		},
		CompletedNotebookFileLog -> {
			Format -> Multiple,
			Class -> {Date, Link, Link},
			Pattern :> {_?DateObjectQ, _Link, _Link},
			Relation -> {Null, Object[EmeraldCloudFile], Object[User]},
			Headers -> {"Date Changed", "Notebook", "Updating User"},
			Description -> "The file history of notebooks containing completed commands, from oldest to newest.",
			Category -> "Computations"
		},
		PendingNotebookFile -> {
			Format -> Single,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Object[EmeraldCloudFile],
			Description -> "The Mathematica notebook file (.nb) containing pending commands for this Manifold computation.",
			Category -> "Computations",
			Abstract -> True
		},
		PendingNotebookFileLog -> {
			Format -> Multiple,
			Class -> {Date, Link, Link},
			Pattern :> {_?DateObjectQ, _Link, _Link},
			Relation -> {Null, Object[EmeraldCloudFile], Object[User]},
			Headers -> {"Date Changed", "Notebook", "Updating User"},
			Description -> "The file history of notebooks containing pending commands, from oldest to newest.",
			Category -> "Computations"
		},
		InstanceSectionsJSON -> {
			Format -> Single,
			Class -> String,
			Pattern :> _String,
			Description -> "The Base64 encoded JSON object representing the section/object hierarchy of this computation page, which is an instance of the job template.",
			Category -> "Organizational Information",
			Developer -> True
		},
		SLLCommit -> {
			Format -> Single,
			Class -> String,
			Pattern :> _String,
			Description -> "SHA of the SLL commit that this job was run on.",
			Category -> "Manifold Tracking",
			Developer -> True
		},
		FargateClusterName -> {
			Format -> Single,
			Class -> String,
			Pattern :> _String,
			Description -> "The exact Fargate cluster name associated with this Manifold task.",
			Category -> "Manifold Tracking",
			AdminViewOnly -> True,
			Developer -> True
		},
		TaskID -> {
			Format -> Single,
			Class -> String,
			Pattern :> _String,
			Description -> "Fargate task ID associated with this Manifold task.",
			Category -> "Manifold Tracking",
			AdminViewOnly -> True,
			Developer -> True
		},
		FargateLog->{
			Format->Computable,
			Expression:>SafeEvaluate[{Field[Object]},Manifold`Private`getFargateLogURL[Field[Object]]],
			Pattern:>_Hyperlink,
			Description->"The Fargate Log link used for developers to debug their SLL code in Manifold.",
			Category->"Organizational Information",
			AdminViewOnly->True
		}
	}
}];
