(* ::Package:: *)

(* ::Text:: *)
(*\[Copyright] 2011-2023 Emerald Cloud Lab, Inc.*)


DefineObjectType[Object[Maintenance,AlignLiquidHandlerDevicePrecision],{
	Description->"A protocol that checks and adjusts the alignment of a liquid handler's dispensing channels.",
	CreatePrivileges->None,
	Cache->Session,
	Fields->{
		ChannelCalibrationTool->{
			Format->Single,
			Class->Link,
			Pattern:>_Link,
			Relation->(Model[Part,AlignmentTool] | Object[Part,AlignmentTool]),
			Description->"The tool used to check that the positioning and tilt of the pipetting channels are within allowed limits.",
			Category->"General"
		},
		ChannelPositioningTool->{
			Format->Single,
			Class->Link,
			Pattern:>_Link,
			Relation->(Model[Part,AlignmentTool] | Object[Part,AlignmentTool]),
			Description->"The tool used to adjust the x-position and tilt of the pipetting channels to bring them into allowed limits.",
			Category->"General"
		},
		LeftTrack->{
			Format->Single,
			Class->Integer,
			Pattern:>GreaterP[0],
			Description->"The track position near the left edge of the instrument deck where the channel calibration tool will be placed.",
			Category->"General"
		},
		RightTrack->{
			Format->Single,
			Class->Integer,
			Pattern:>GreaterP[0],
			Description->"The track position near the right edge of the instrument deck where the channel calibration tool will be placed.",
			Category->"General"
		},
		DeckPlacements->{
			Format->Multiple,
			Class->{Link,Link,String},
			Pattern:>{_Link,_Link,LocationPositionP},
			Relation->{Object[Container],Object[Container],Null},
			Headers->{"Rack","Deck","Position"},
			Description->"A list of placements used to return mobile racks back to the deck after alignment.",
			Category->"Placements",
			Developer->True
		},
		ImmovableCarrierPlacement->{
			Format->Multiple,
			Class->{Link,Link,String},
			Pattern:>{_Link,_Link,LocationPositionP},
			Relation->{Object[Container],Object[Container],Null},
			Headers->{"Rack","Deck","Position"},
			Description->"A list of placements used to return and immobile racks that had to be moved back to the deck after alignment.",
			Category->"Placements",
			Developer->True
		},
		ValidationPlacements->{
			Format->Multiple,
			Class->{Link,Expression},
			Pattern:>{_Link,{LocationPositionP..}},
			Relation->{Object[Container],Null},
			Headers->{"Rack","Placement Tree"},
			Description->"A list of placements to validate that mobile racks are in their correct position.",
			Category->"Placements",
			Developer->True
		},
		AdjustmentScrewdriver->{
			Format->Single,
			Class->Link,
			Pattern:>_Link,
			Relation->(Model[Item,Screwdriver] | Object[Item,Screwdriver]),
			Description->"The screwdriver used to make fine adjustments to channel offset and tilt.",
			Category->"General"
		},
		FasteningScrewdriver->{
			Format->Single,
			Class->Link,
			Pattern:>_Link,
			Relation->(Model[Item,Screwdriver] | Object[Item,Screwdriver]),
			Description->"The screwdriver used to tightly fasten the channel positioning tool to the channels.",
			Category->"General"
		},
		Wrenches->{
			Format->Single,
			Class->Link,
			Pattern:>_Link,
			Relation->(Model[Item,Wrench] | Object[Item,Wrench]),
			Description->"The wrenches used to loosen and tighten the channel and to make fine adjustments to offset and tilt.",
			Category->"General"
		},
		DeckWrenches->{
			Format->Single,
			Class->Link,
			Pattern:>_Link,
			Relation->(Model[Item,Wrench] | Object[Item,Wrench]),
			Description->"The wrenches used to loosen and tighten immovable carriers.",
			Category->"General"
		},
		CoverTool->{
			Format->Single,
			Class->Link,
			Pattern:>_Link,
			Relation->(Model[Item,Wrench] | Object[Item,Wrench]),
			Description->"The tool required to remove and reattach the liquid handler's face plate.",
			Category->"General"
		},
		QualificationKey->{
			Format->Single,
			Class->String,
			Pattern:>_String,
			Description->"String generated from the Maintenance's ID that is used to tag files generated by the alignment macros.",
			Category->"General"
		},
		ChannelAdjustments->{
			Format->Single,
			Class->{
				Channel->Integer,
				TranslationDirection->Expression,
				TranslationRotation->Integer,
				TiltDirection->Expression,
				TiltRotation->Integer
			},
			Pattern:>{
				Channel->GreaterEqualP[0,1],
				TranslationDirection->(Right | Left),
				TranslationRotation->GreaterP[0],
				TiltDirection->RotationDirectionP,
				TiltRotation->GreaterP[0]
			},
			Description->"The next channel to be adjusted (0 and Null indicating none), including which directions to translate and tilt it and how many rotations to perform of the corresponding adjustment screws.",
			Category->"General",
			Developer->True
		},
		ChannelAdjustmentsLog->{
			Format->Multiple,
			Class->{
				Channel->Integer,
				TranslationDirection->Expression,
				TranslationRotation->Integer,
				TiltDirection->Expression,
				TiltRotation->Integer
			},
			Pattern:>{
				Channel->GreaterEqualP[0,1],
				TranslationDirection->(Right | Left),
				TranslationRotation->GreaterP[0],
				TiltDirection->RotationDirectionP,
				TiltRotation->GreaterP[0]
			},
			Description->"A log of the tilt and translation adjustments done to specific channels.",
			Category->"General",
			Developer->True
		},
		ChannelDeviationsFile->{
			Format->Single,
			Class->Link,
			Pattern:>_Link,
			Relation->Object[EmeraldCloudFile],
			Description->"A CSV file containing measured deviations along the x-axis and tilt deviations around the x and y axes of the liquid handler.",
			Category->"Analysis & Reports"
		},
		ChannelPrecisionFile->{
			Format->Single,
			Class->Link,
			Pattern:>_Link,
			Relation->Object[EmeraldCloudFile],
			Description->"A CSV file containing the final precision of each channel's positioning along the X, Y and Z axes after channel alignment.",
			Category->"Analysis & Reports"
		},
		ChannelPrecisions->{
			Format->Multiple,
			Class->{
				Channel->Integer,
				YPrecision->Integer,
				ZPrecision->Integer,
				Pass->Boolean
			},
			Pattern:>{
				Channel->GreaterP[0,1],
				YPrecision->_Integer,
				ZPrecision->_Integer,
				Pass->BooleanP
			},
			Description->"After automatic channel alignment, the precision of each channel's positioning along the Y and Z axes.",
			Category->"Analysis & Reports"
		},
		XArmPrecision->{
			Format->Single,
			Class->{Integer,Boolean},
			Pattern:>{_Integer,BooleanP},
			Description->"After automatic channel alignment, the measured precision of X-axis positioning of the channels.",
			Headers->{"Precision","Passing"},
			Category->"Analysis & Reports"
		},
		TraceFile->{
			Format->Single,
			Class->Link,
			Pattern:>_Link,
			Relation->Object[EmeraldCloudFile],
			Description->"File containing a log of events that occurred during the running of the alignment macros.",
			Category->"Analysis & Reports"
		},
		InitialSettingsFilePath->{
			Format->Single,
			Class->String,
			Pattern:>_String,
			Description->"The location on the public drive where the instrument settings file prior to adjustments should be saved.",
			Category->"General",
			Developer->True
		},
		FinalSettingsFilePath->{
			Format->Single,
			Class->String,
			Pattern:>_String,
			Description->"The location on the public drive where the instrument settings file after adjustments should be saved.",
			Category->"General",
			Developer->True
		},
		InitialSettingsFile->{
			Format->Single,
			Class->Link,
			Pattern:>_Link,
			Relation->Object[EmeraldCloudFile],
			Description->"The PDF file listing the liquid handler's settings prior to adjustments performed by this maintenance.",
			Category->"Analysis & Reports"
		},
		FinalSettingsFile->{
			Format->Single,
			Class->Link,
			Pattern:>_Link,
			Relation->Object[EmeraldCloudFile],
			Description->"The PDF file listing the liquid handler's settings after the adjustments performed by this maintenance.",
			Category->"Analysis & Reports"
		},
		MaintenanceKey -> {
			Format -> Single,
			Class -> String,
			Pattern :> _String,
			Description -> "String generated from the Maintenance's ID that is used to tag files generated by the alignment macros.",
			Category -> "General"
		},
		ProtocolKey -> {
			Format -> Single,
			Class -> String,
			Pattern :> _String,
			Description -> "String generated from the Maintenance's ID that is used to tag files generated by the alignment macros, required to use shared procedures and functions.",
			Developer->True,
			Category -> "General"
		},
		LiquidHandler -> {
			Format -> Single,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Alternatives[
				Object[Instrument],
				Model[Instrument]
			],
			Description -> "The liquid handler instrument that is being aligned. Used for compatibility with shared procedures/function.",
			Category -> "General",
			Developer->True
		},

		(* Information from instrument data report FinalSettingsFile *)
		(* MASTER *)
		FirmwareVersion->{
			Format->Single,
			Class->String,
			Pattern:>_String,
			Description->"The version of the liquid handler firmware.",
			Category->"Analysis & Reports"
		},
		MasterBoardTechnicalState->{
			Format->Single,
			Class->String,
			Pattern:>_String,
			Description->"The unique identification number describing the technical state of the liquid handler's master board.",
			Category->"Analysis & Reports"
		},
		InstrumentTechnicalState->{
			Format->Single,
			Class->String,
			Pattern:>_String,
			Description->"The unique identification number describing the technical state of the liquid handler's hardware.",
			Category->"Analysis & Reports"
		},
		SoftwareDownloadDate->{
			Format->Single,
			Class->Date,
			Pattern:>_?DateObjectQ,
			Description->"The date that the instrument software was downloaded.",
			Category->"Analysis & Reports"
		},
		InstallationDate->{
			Format->Single,
			Class->Date,
			Pattern:>_?DateObjectQ,
			Description->"The date that the instrument was installed and the software was configured.",
			Category->"Analysis & Reports"
		},
		SerialNumber->{
			Format->Single,
			Class->String,
			Pattern:>_String,
			Description->"The serial number of the liquid handler.",
			Category->"Analysis & Reports"
		},
		(* INSTRUMENT CONFIGURATIONS *)
		InstrumentConfigurations->{
			Format->Multiple,
			Class->Expression,
			Pattern:>LiquidHandlerConfigurationP,
			Description->"The physical components installed on the liquid handler.",
			Category->"Analysis & Reports"
		},
		PipettingChannelType->{
			Format->Single,
			Class->Expression,
			Pattern:>PipettingChannelTypeP,
			Description->"The type of the pipetting channel installed on the liquid handler.",
			Category->"Analysis & Reports"
		},
		NumberOfPipettors->{
			Format->Single,
			Class->Integer,
			Pattern:>GreaterEqualP[0,1],
			Description->"The number of the pipetting channels installed on the liquid handler.",
			Category->"Analysis & Reports"
		},
		(* X-DRIVE *)
		XDriveFirmwareVersion->{
			Format->Single,
			Class->String,
			Pattern:>_String,
			Description->"The version of the liquid handler X-drive's firmware.",
			Category->"Analysis & Reports"
		},
		XDriveAdjustmentDate->{
			Format->Single,
			Class->Date,
			Pattern:>_?DateObjectQ,
			Description->"The date that the liquid handler's X-drive was last adjusted and calibrated.",
			Category->"Analysis & Reports"
		},
		XDriveAdjustmentState->{
			Format->Single,
			Class->Integer,
			Pattern:>GreaterEqualP[0,1],
			Description->"The state of the X-drive adjustment.",
			Category->"Analysis & Reports"
		},
		XDriveTechnicalState->{
			Format->Single,
			Class->String,
			Pattern:>_String,
			Description->"The unique identification number describing the technical state of the liquid handler's X-drive hardware.",
			Category->"Analysis & Reports"
		},
		(* X-DRIVE 1 - LEFT ARM *)
		CoreLeftArmAdjustmentValue->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Units->Micrometer,
			Description->"The adjustment position of the X-drive 1 (left arm).",
			Category->"Analysis & Reports"
		},
		CoreLeftArmProportionalPartMove->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The proportional part move of the X-drive 1 (left arm).",
			Category->"Analysis & Reports"
		},
		CoreLeftArmDifferentialPartMove->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The differential part move of the X-drive 1 (left arm).",
			Category->"Analysis & Reports"
		},
		CoreLeftArmIntegralPartMove->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The integral part move of the X-drive 1 (left arm).",
			Category->"Analysis & Reports"
		},
		CoreLeftArmAntiWindupMove->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The anti windup move of the X-drive 1 (left arm).",
			Category->"Analysis & Reports"
		},
		CoreLeftArmMaxLagCountError->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The maximum lag error of the X-drive 1 (left arm) in counts.",
			Category->"Analysis & Reports"
		},
		CoreLeftArmMaxLagDifference->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The maximum lag difference of the X-drive 1 (left arm).",
			Category->"Analysis & Reports"
		},
		CoreLeftArmProportionalPartHold->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The proportional part hold of the X-drive 1 (left arm).",
			Category->"Analysis & Reports"
		},
		CoreLeftArmDifferentialPartHold->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The differential part hold of the X-drive 1 (left arm).",
			Category->"Analysis & Reports"
		},
		CoreLeftArmIntegralPartHold->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The integral part hold of the X-drive 1 (left arm).",
			Category->"Analysis & Reports"
		},
		CoreLeftArmAntiWindupHold->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The anti windup hold of the X-drive 1 (left arm).",
			Category->"Analysis & Reports"
		},
		CoreLeftArmInitialPosition->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Units->Micrometer,
			Description->"The initial parking position of the X-drive 1 (left arm).",
			Category->"Analysis & Reports"
		},
		(* X-DRIVE 2 - RIGHT ARM *)
		CoreRightArmAdjustmentValue->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Units->Micrometer,
			Description->"The adjustment position of the X-drive 2 (right arm).",
			Category->"Analysis & Reports"
		},
		CoreRightArmProportionalPartMove->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The proportional part move of the X-drive 2 (right arm).",
			Category->"Analysis & Reports"
		},
		CoreRightArmDifferentialPartMove->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The differential part move of the X-drive 2 (right arm).",
			Category->"Analysis & Reports"
		},
		CoreRightArmIntegralPartMove->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The integral part move of the X-drive 2 (right arm).",
			Category->"Analysis & Reports"
		},
		CoreRightArmAntiWindupMove->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The anti windup move of the X-drive 2 (right arm).",
			Category->"Analysis & Reports"
		},
		CoreRightArmMaxLagCountError->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The maximum lag error of the X-drive 2 (right arm) in counts.",
			Category->"Analysis & Reports"
		},
		CoreRightArmMaxLagDifference->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The maximum lag difference of the X-drive 2 (right arm).",
			Category->"Analysis & Reports"
		},
		CoreRightArmProportionalPartHold->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The proportional part hold of the X-drive 2 (right arm).",
			Category->"Analysis & Reports"
		},
		CoreRightArmDifferentialPartHold->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The differential part hold of the X-drive 2 (right arm).",
			Category->"Analysis & Reports"
		},
		CoreRightArmIntegralPartHold->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The integral part hold of the X-drive 2 (right arm).",
			Category->"Analysis & Reports"
		},
		CoreRightArmAntiWindupHold->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The anti windup hold of the X-drive 2 (right arm).",
			Category->"Analysis & Reports"
		},
		CoreRightArmInitialPosition->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Units->Micrometer,
			Description->"The initial parking position of the X-drive 2 (right arm).",
			Category->"Analysis & Reports"
		},

		(* iSWAP *)
		iSWAPFirmwareVersion->{
			Format->Single,
			Class->String,
			Pattern:>_String,
			Description->"The version of the liquid handler iSWAP gripper's firmware.",
			Category->"Analysis & Reports"
		},
		iSWAPDownloadDate->{
			Format->Single,
			Class->Date,
			Pattern:>_?DateObjectQ,
			Description->"The date that the liquid handler's iSWAP gripper was installed and configured.",
			Category->"Analysis & Reports"
		},
		iSWAPDriveTechnicalState->{
			Format->Single,
			Class->String,
			Pattern:>_String,
			Description->"The unique identification number describing the technical state of the liquid handler's iSWAP drive.",
			Category->"Analysis & Reports"
		},
		iSWAPBoardTechnicalState->{
			Format->Single,
			Class->String,
			Pattern:>_String,
			Description->"The unique identification number describing the technical state of the liquid handler's iSWAP board.",
			Category->"Analysis & Reports"
		},
		iSWAPAdjustmentDate->{
			Format->Single,
			Class->Date,
			Pattern:>_?DateObjectQ,
			Description->"The date that the liquid handler's iSWAP gripper was last adjusted and calibrated.",
			Category->"Analysis & Reports"
		},
		iSWAPAdjustmentState->{
			Format->Single,
			Class->Integer,
			Pattern:>GreaterEqualP[0,1],
			Description->"The state of the iSWAP gripper adjustment.",
			Category->"Analysis & Reports"
		},
		iSWAPExecutedGrippingCommands->{
			Format->Single,
			Class->String,
			Pattern:>_String,
			Description->"The executed gripping commands for the iSWAP gripper.",
			Category->"Analysis & Reports"
		},
		iSWAPBrakeSolenoidParameters->{
			Format->Multiple,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The brake solenoid parameters of the iSWAP gripper.",
			Category->"Analysis & Reports"
		},
		iSWAPXAxisOffset->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Units->Micrometer,
			Description->"The offset of the iSWAP gripper to X axis.",
			Category->"Analysis & Reports"
		},
		iSWAPYDriveMaxAmplitude->{
			Format->Multiple,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The maximum Y-drive amplitude of the iSWAP gripper.",
			Category->"Analysis & Reports"
		},
		iSWAPYDriveMechanicalAdjustment->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The mechanical adjustment of the iSWAP gripper along Y-drive.",
			Category->"Analysis & Reports"
		},
		iSWAPYDrivePredefinedPositions->{
			Format->Multiple,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The pre-defined Y-drive positions of the iSWAP gripper.",
			Category->"Analysis & Reports"
		},
		iSWAPZDriveMovingUpRegulations->{
			Format->Multiple,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The regulation parameters for moving up the iSWAP gripper along Z-drive.",
			Category->"Analysis & Reports"
		},
		iSWAPZDriveMovingDownRegulations->{
			Format->Multiple,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The regulation parameters for moving down the iSWAP gripper along Z-drive.",
			Category->"Analysis & Reports"
		},
		iSWAPZDriveHoldingRegulations->{
			Format->Multiple,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The regulation parameters for holding the iSWAP gripper along Z-drive.",
			Category->"Analysis & Reports"
		},
		iSWAPZDriveMaxControllerOutput->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The maximum controller output of the iSWAP gripper along Z-drive.",
			Category->"Analysis & Reports"
		},
		iSWAPZDriveMechanicalAdjustment->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The mechanical adjustment value of the iSWAP gripper along Z-drive.",
			Category->"Analysis & Reports"
		},
		iSWAPZDrivePredefinedPositions->{
			Format->Multiple,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The pre-defined Z-drive positions of the iSWAP gripper.",
			Category->"Analysis & Reports"
		},
		iSWAPZDriveHeighCorrectionValues->{
			Format->Multiple,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The height correction values of the iSWAP gripper along Z-Drive.",
			Category->"Analysis & Reports"
		},
		iSWAPWDriveMovingRegulations->{
			Format->Multiple,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The regulation parameters for moving the iSWAP gripper along W-drive.",
			Category->"Analysis & Reports"
		},
		iSWAPWDriveHoldingRegulations->{
			Format->Multiple,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The regulation parameters for holding the iSWAP gripper along W-drive.",
			Category->"Analysis & Reports"
		},
		iSWAPWDriveMaxControllerOutput->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The maximum controller output of the iSWAP gripper along W-drive.",
			Category->"Analysis & Reports"
		},
		iSWAPWDriveMechanicalAdjustment->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The mechanical adjustment value of the iSWAP gripper along W-drive.",
			Category->"Analysis & Reports"
		},
		iSWAPWDrivePredefinedPositions->{
			Format->Multiple,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The pre-defined W-drive positions of the iSWAP gripper.",
			Category->"Analysis & Reports"
		},
		iSWAPTDriveMovingRegulations->{
			Format->Multiple,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The regulation parameters for moving the iSWAP gripper along T-drive.",
			Category->"Analysis & Reports"
		},
		iSWAPTDriveHoldingRegulations->{
			Format->Multiple,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The regulation parameters for holding the iSWAP gripper along T-drive.",
			Category->"Analysis & Reports"
		},
		iSWAPTDriveMaxControllerOutput->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The maximum controller output of the iSWAP gripper along T-drive.",
			Category->"Analysis & Reports"
		},
		iSWAPTDriveMechanicalAdjustment->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The mechanical adjustment value of the iSWAP gripper along T-drive.",
			Category->"Analysis & Reports"
		},
		iSWAPTDrivePredefinedPositions->{
			Format->Multiple,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The pre-defined T-drive positions of the iSWAP gripper.",
			Category->"Analysis & Reports"
		},
		iSWAPGDriveMovingRegulations->{
			Format->Multiple,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The regulation parameters for moving the iSWAP gripper along G-drive.",
			Category->"Analysis & Reports"
		},
		iSWAPGDriveHoldingRegulations->{
			Format->Multiple,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The regulation parameters for holding the iSWAP gripper along G-drive.",
			Category->"Analysis & Reports"
		},
		iSWAPGDriveMaxControllerOutput->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The maximum controller output of the iSWAP gripper along G-drive.",
			Category->"Analysis & Reports"
		},
		iSWAPGDriveMechanicalAdjustment->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The mechanical adjustment value of the iSWAP gripper along G-drive.",
			Category->"Analysis & Reports"
		},
		iSWAPGDrivePredefinedPositions->{
			Format->Multiple,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The pre-defined G-drive positions of the iSWAP gripper.",
			Category->"Analysis & Reports"
		},
		iSWAPGDrivePredefinedCurrentLimits->{
			Format->Multiple,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The pre-defined G-drive current limits of the iSWAP gripper.",
			Category->"Analysis & Reports"
		},
		(* PIPETTING CHANNELS 1-8 *)
		PipettingChannelFirmwareVersion->{
			Format->Single,
			Class->{String,String,String,String,String,String,String,String},
			Pattern:>{_String,_String,_String,_String,_String,_String,_String,_String},
			Description->"The firmware version of the liquid handler's pipetting channels.",
			Headers->{"Channel 1","Channel 2","Channel 3","Channel 4","Channel 5","Channel 6","Channel 7","Channel 8"},
			Category->"Analysis & Reports"
		},
		PipettingChannelDownloadDate->{
			Format->Single,
			Class->{Date,Date,Date,Date,Date,Date,Date,Date},
			Pattern:>{_?DateObjectQ,_?DateObjectQ,_?DateObjectQ,_?DateObjectQ,_?DateObjectQ,_?DateObjectQ,_?DateObjectQ,_?DateObjectQ},
			Description->"The date that the liquid handler's pipetting channels were installed and the software was installed.",
			Headers->{"Channel 1","Channel 2","Channel 3","Channel 4","Channel 5","Channel 6","Channel 7","Channel 8"},
			Category->"Analysis & Reports"
		},
		PipettingChannelTechnicalState->{
			Format->Single,
			Class->{String,String,String,String,String,String,String,String},
			Pattern:>{_String,_String,_String,_String,_String,_String,_String,_String},
			Description->"The unique identification numbers describing the technical states of the liquid handler's pipetting channels.",
			Headers->{"Channel 1","Channel 2","Channel 3","Channel 4","Channel 5","Channel 6","Channel 7","Channel 8"},
			Category->"Analysis & Reports"
		},
		PipettingHeadTechnicalState->{
			Format->Single,
			Class->{String,String,String,String,String,String,String,String},
			Pattern:>{_String,_String,_String,_String,_String,_String,_String,_String},
			Description->"The unique identification numbers describing the technical states of the liquid handler's pipetting channel heads.",
			Headers->{"Channel 1","Channel 2","Channel 3","Channel 4","Channel 5","Channel 6","Channel 7","Channel 8"},
			Category->"Analysis & Reports"
		},
		PipettingChannelAdjustmentDate->{
			Format->Single,
			Class->{Date,Date,Date,Date,Date,Date,Date,Date},
			Pattern:>{_?DateObjectQ,_?DateObjectQ,_?DateObjectQ,_?DateObjectQ,_?DateObjectQ,_?DateObjectQ,_?DateObjectQ,_?DateObjectQ},
			Description->"The date that the liquid handler's pipetting channels were last adjusted and calibrated.",
			Headers->{"Channel 1","Channel 2","Channel 3","Channel 4","Channel 5","Channel 6","Channel 7","Channel 8"},
			Category->"Analysis & Reports"
		},
		PipettingChannelAdjustmentState->{
			Format->Single,
			Class->{Integer,Integer,Integer,Integer,Integer,Integer,Integer,Integer},
			Pattern:>{GreaterEqualP[0,1],GreaterEqualP[0,1],GreaterEqualP[0,1],GreaterEqualP[0,1],GreaterEqualP[0,1],GreaterEqualP[0,1],GreaterEqualP[0,1],GreaterEqualP[0,1]},
			Description->"The state of the pipetting channel adjustments.",
			Headers->{"Channel 1","Channel 2","Channel 3","Channel 4","Channel 5","Channel 6","Channel 7","Channel 8"},
			Category->"Analysis & Reports"
		},
		PipettingChannelTipPickUpCycles->{
			Format->Single,
			Class->{Integer,Integer,Integer,Integer,Integer,Integer,Integer,Integer},
			Pattern:>{GreaterEqualP[0,1],GreaterEqualP[0,1],GreaterEqualP[0,1],GreaterEqualP[0,1],GreaterEqualP[0,1],GreaterEqualP[0,1],GreaterEqualP[0,1],GreaterEqualP[0,1]},
			Description->"The number of tip pick-up cycles that the pipetting channels have gone through.",
			Headers->{"Channel 1","Channel 2","Channel 3","Channel 4","Channel 5","Channel 6","Channel 7","Channel 8"},
			Category->"Analysis & Reports"
		},
		PipettingChannelTipThrowOffCycles->{
			Format->Single,
			Class->{Integer,Integer,Integer,Integer,Integer,Integer,Integer,Integer},
			Pattern:>{GreaterEqualP[0,1],GreaterEqualP[0,1],GreaterEqualP[0,1],GreaterEqualP[0,1],GreaterEqualP[0,1],GreaterEqualP[0,1],GreaterEqualP[0,1],GreaterEqualP[0,1]},
			Description->"The number of tip throw-off cycles that the pipetting channels have gone through.",
			Headers->{"Channel 1","Channel 2","Channel 3","Channel 4","Channel 5","Channel 6","Channel 7","Channel 8"},
			Category->"Analysis & Reports"
		},
		PipettingChannelAspirationCycles->{
			Format->Single,
			Class->{Integer,Integer,Integer,Integer,Integer,Integer,Integer,Integer},
			Pattern:>{GreaterEqualP[0,1],GreaterEqualP[0,1],GreaterEqualP[0,1],GreaterEqualP[0,1],GreaterEqualP[0,1],GreaterEqualP[0,1],GreaterEqualP[0,1],GreaterEqualP[0,1]},
			Description->"The number of aspiration cycles that the pipetting channels have gone through.",
			Headers->{"Channel 1","Channel 2","Channel 3","Channel 4","Channel 5","Channel 6","Channel 7","Channel 8"},
			Category->"Analysis & Reports"
		},
		PipettingChannelDispensationCycles->{
			Format->Single,
			Class->{Integer,Integer,Integer,Integer,Integer,Integer,Integer,Integer},
			Pattern:>{GreaterEqualP[0,1],GreaterEqualP[0,1],GreaterEqualP[0,1],GreaterEqualP[0,1],GreaterEqualP[0,1],GreaterEqualP[0,1],GreaterEqualP[0,1],GreaterEqualP[0,1]},
			Description->"The number of dispensation cycles that the pipetting channels have gone through.",
			Headers->{"Channel 1","Channel 2","Channel 3","Channel 4","Channel 5","Channel 6","Channel 7","Channel 8"},
			Category->"Analysis & Reports"
		},
		PipettingChannelDispenserAdjustment->{
			Format->Single,
			Class->{Integer,Integer,Integer,Integer,Integer,Integer,Integer,Integer},
			Pattern:>{_Integer,_Integer,_Integer,_Integer,_Integer,_Integer,_Integer,_Integer},
			Description->"The dispenser adjustment value of the pipetting channels.",
			Headers->{"Channel 1","Channel 2","Channel 3","Channel 4","Channel 5","Channel 6","Channel 7","Channel 8"},
			Category->"Analysis & Reports"
		},
		PipettingChannelYDriveAdjustment->{
			Format->Single,
			Class->{Integer,Integer,Integer,Integer,Integer,Integer,Integer,Integer},
			Pattern:>{_Integer,_Integer,_Integer,_Integer,_Integer,_Integer,_Integer,_Integer},
			Description->"The Y-drive adjustment value of the pipetting channels.",
			Headers->{"Channel 1","Channel 2","Channel 3","Channel 4","Channel 5","Channel 6","Channel 7","Channel 8"},
			Category->"Analysis & Reports"
		},
		PipettingChannelZDriveAdjustment->{
			Format->Single,
			Class->{Integer,Integer,Integer,Integer,Integer,Integer,Integer,Integer},
			Pattern:>{_Integer,_Integer,_Integer,_Integer,_Integer,_Integer,_Integer,_Integer},
			Description->"The Z-drive adjustment value of the pipetting channels.",
			Headers->{"Channel 1","Channel 2","Channel 3","Channel 4","Channel 5","Channel 6","Channel 7","Channel 8"},
			Category->"Analysis & Reports"
		},
		PipettingChannelSqueezeDriveAdjustment->{
			Format->Single,
			Class->{Integer,Integer,Integer,Integer,Integer,Integer,Integer,Integer},
			Pattern:>{_Integer,_Integer,_Integer,_Integer,_Integer,_Integer,_Integer,_Integer},
			Description->"The squeeze drive adjustment value of the pipetting channels.",
			Headers->{"Channel 1","Channel 2","Channel 3","Channel 4","Channel 5","Channel 6","Channel 7","Channel 8"},
			Category->"Analysis & Reports"
		},
		PipettingChannelPressureLLDAdjustment->{
			Format->Single,
			Class->{Integer,Integer,Integer,Integer,Integer,Integer,Integer,Integer},
			Pattern:>{_Integer,_Integer,_Integer,_Integer,_Integer,_Integer,_Integer,_Integer},
			Description->"The pressure liquid level detection adjustment value of the pipetting channels.",
			Headers->{"Channel 1","Channel 2","Channel 3","Channel 4","Channel 5","Channel 6","Channel 7","Channel 8"},
			Category->"Analysis & Reports"
		},
		PipettingChannelClotDetectionAdjustment->{
			Format->Single,
			Class->{Integer,Integer,Integer,Integer,Integer,Integer,Integer,Integer},
			Pattern:>{_Integer,_Integer,_Integer,_Integer,_Integer,_Integer,_Integer,_Integer},
			Description->"The clot detection adjustment value of the pipetting channels.",
			Headers->{"Channel 1","Channel 2","Channel 3","Channel 4","Channel 5","Channel 6","Channel 7","Channel 8"},
			Category->"Analysis & Reports"
		},
		PipettingChannelDispenserMoveControlParameters->{
			Format->Multiple,
			Class->Expression,
			Pattern:>{_Integer...},
			Description->"The dispenser move control parameters of the pipetting channels.",
			Category->"Analysis & Reports"
		},
		PipettingChannelDispenserHoldControlParameters->{
			Format->Multiple,
			Class->Expression,
			Pattern:>{_Integer...},
			Description->"The dispenser hold control parameters of the pipetting channels.",
			Category->"Analysis & Reports"
		},
		PipettingChannelZDriveMoveControlParameters->{
			Format->Multiple,
			Class->Expression,
			Pattern:>{_Integer...},
			Description->"The Z-drive move control parameters of the pipetting channels.",
			Category->"Analysis & Reports"
		},
		PipettingChannelZDriveHoldControlParameters->{
			Format->Multiple,
			Class->Expression,
			Pattern:>{_Integer...},
			Description->"The Z-drive hold control parameters of the pipetting channels.",
			Category->"Analysis & Reports"
		},
		PipettingChannelPWMValues->{
			Format->Multiple,
			Class->Expression,
			Pattern:>{_Integer...},
			Description->"The pulse width modulation parameters of the pipetting channels.",
			Category->"Analysis & Reports"
		},
		PipettingChannelTypes->{
			Format->Single,
			Class->{Integer,Integer,Integer,Integer,Integer,Integer,Integer,Integer},
			Pattern:>{GreaterEqualP[0,1],GreaterEqualP[0,1],GreaterEqualP[0,1],GreaterEqualP[0,1],GreaterEqualP[0,1],GreaterEqualP[0,1],GreaterEqualP[0,1],GreaterEqualP[0,1]},
			Description->"The types of the pipetting channels.",
			Headers->{"Channel 1","Channel 2","Channel 3","Channel 4","Channel 5","Channel 6","Channel 7","Channel 8"},
			Category->"Analysis & Reports"
		},
		PipettingChannelExtendedAdjustmentValues->{
			Format->Multiple,
			Class->Expression,
			Pattern:>{_Integer...},
			Description->"The extended adjustment parameters of the pipetting channels.",
			Category->"Analysis & Reports"
		},
		PipettingChannelConfiguration->{
			Format->Multiple,
			Class->Expression,
			Pattern:>{_Integer...},
			Description->"The configuration states of the pipetting channels.",
			Category->"Analysis & Reports"
		},
		PipettingChannelSqueezingPosition->{
			Format->Single,
			Class->{Integer,Integer,Integer,Integer,Integer,Integer,Integer,Integer},
			Pattern:>{_Integer,_Integer,_Integer,_Integer,_Integer,_Integer,_Integer,_Integer},
			Description->"The squeezing positions of the pipetting channels.",
			Headers->{"Channel 1","Channel 2","Channel 3","Channel 4","Channel 5","Channel 6","Channel 7","Channel 8"},
			Category->"Analysis & Reports"
		},
		(* CORE 96 HEAD *)
		Core96HeadFirmwareVersion->{
			Format->Single,
			Class->String,
			Pattern:>_String,
			Description->"The version of the liquid handler core 96 head firmware.",
			Category->"Analysis & Reports"
		},
		Core96HeadDownloadDate->{
			Format->Single,
			Class->Date,
			Pattern:>_?DateObjectQ,
			Description->"The date that the liquid handler's core 96 head was installed and configured.",
			Category->"Analysis & Reports"
		},
		Core96HeadTechnicalState->{
			Format->Single,
			Class->String,
			Pattern:>_String,
			Description->"The unique identification number describing the technical state of the liquid handler's core 96 head.",
			Category->"Analysis & Reports"
		},
		Core96HeadBoardTechnicalState->{
			Format->Single,
			Class->String,
			Pattern:>_String,
			Description->"The unique identification number describing the technical state of the liquid handler's core 96 head board.",
			Category->"Analysis & Reports"
		},
		Core96HeadAdjustmentDate->{
			Format->Single,
			Class->Date,
			Pattern:>_?DateObjectQ,
			Description->"The date that the liquid handler's core 96 head was last adjusted and calibrated.",
			Category->"Analysis & Reports"
		},
		Core96HeadAdjustmentState->{
			Format->Single,
			Class->Integer,
			Pattern:>GreaterEqualP[0,1],
			Description->"The state of the core 96 head adjustment.",
			Category->"Analysis & Reports"
		},
		Core96HeadTipPickUpCycles->{
			Format->Single,
			Class->Integer,
			Pattern:>GreaterEqualP[0,1],
			Description->"The number of tip pick-up cycles that the core 96 head has gone through.",
			Category->"Analysis & Reports"
		},
		Core96HeadTipThrowOffCycles->{
			Format->Single,
			Class->Integer,
			Pattern:>GreaterEqualP[0,1],
			Description->"The number of tip throw-off cycles that the core 96 head has gone through.",
			Category->"Analysis & Reports"
		},
		Core96HeadAspirationCycles->{
			Format->Single,
			Class->Integer,
			Pattern:>GreaterEqualP[0,1],
			Description->"The number of aspiration cycles that the core 96 head has gone through.",
			Category->"Analysis & Reports"
		},
		Core96HeadDispensationCycles->{
			Format->Single,
			Class->Integer,
			Pattern:>GreaterEqualP[0,1],
			Description->"The number of dispensation cycles that the core 96 head has gone through.",
			Category->"Analysis & Reports"
		},
		Core96HeadXAxisOffset->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Units->Micrometer,
			Description->"The offset of the core 96 head to X axis.",
			Category->"Analysis & Reports"
		},
		Core96HeadConfiguration->{
			Format->Single,
			Class->Expression,
			Pattern:>{_Integer...},
			Description->"The configuration states of the core 96 head.",
			Category->"Analysis & Reports"
		},
		Core96HeadYDriveMovingRegulations->{
			Format->Multiple,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The regulation parameters for moving the core 96 head along Y-drive.",
			Category->"Analysis & Reports"
		},
		Core96HeadYDriveHoldingRegulations->{
			Format->Multiple,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The regulation parameters for holding the core 96 head along Y-drive.",
			Category->"Analysis & Reports"
		},
		Core96HeadYDriveMechanicalAdjustment->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The mechanical adjustment value of the core 96 head along Y-drive.",
			Category->"Analysis & Reports"
		},
		Core96HeadYDrivePredefinedPositions->{
			Format->Multiple,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The pre-defined Y-drive positions of the core 96 head.",
			Category->"Analysis & Reports"
		},
		Core96HeadZDriveMovingUpRegulations->{
			Format->Multiple,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The regulation parameters for moving up the core 96 head along Z-drive.",
			Category->"Analysis & Reports"
		},
		Core96HeadZDriveMovingDownRegulations->{
			Format->Multiple,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The regulation parameters for moving down the core 96 head along Z-drive.",
			Category->"Analysis & Reports"
		},
		Core96HeadZDriveHoldingRegulations->{
			Format->Multiple,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The regulation parameters for holding the core 96 head along Z-drive.",
			Category->"Analysis & Reports"
		},
		Core96HeadZDriveMechanicalAdjustment->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The mechanical adjustment value of the core 96 head along Z-drive.",
			Category->"Analysis & Reports"
		},
		Core96HeadZDrivePredefinedPositions->{
			Format->Multiple,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The pre-defined Z-drive positions of the core 96 head.",
			Category->"Analysis & Reports"
		},
		Core96HeadZDriveOverSurface->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The over surface value of the core 96 head along Z-drive.",
			Category->"Analysis & Reports"
		},
		Core96HeadZDriveTipPickUpZPositions->{
			Format->Multiple,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The tip pick up z positions of the core 96 head.",
			Category->"Analysis & Reports"
		},
		Core96HeadDDriveMovingRegulations->{
			Format->Multiple,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The regulation parameters for moving the core 96 head along D-drive.",
			Category->"Analysis & Reports"
		},
		Core96HeadDDriveHoldingRegulations->{
			Format->Multiple,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The regulation parameters for holding the core 96 head along D-drive.",
			Category->"Analysis & Reports"
		},
		Core96HeadDDriveMechanicalAdjustment->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The mechanical adjustment value of the core 96 head along D-drive.",
			Category->"Analysis & Reports"
		},
		Core96HeadDDriveBacklashIncrements->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The backlash increments value of the core 96 head along D-drive.",
			Category->"Analysis & Reports"
		},
		Core96HeadDDrivePredefinedPositions->{
			Format->Multiple,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The pre-defined D-drive positions of the core 96 head.",
			Category->"Analysis & Reports"
		},
		Core96HeadSqueezerMovingRegulations->{
			Format->Multiple,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The regulation parameters for moving the core 96 head squeezer.",
			Category->"Analysis & Reports"
		},
		Core96HeadSqueezerHoldingRegulations->{
			Format->Multiple,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The regulation parameters for holding the core 96 head squeezer.",
			Category->"Analysis & Reports"
		},
		Core96HeadSqueezerMechanicalAdjustment->{
			Format->Single,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The mechanical adjustment value of the core 96 head squeezer.",
			Category->"Analysis & Reports"
		},
		Core96HeadSqueezerPredefinedPositions->{
			Format->Multiple,
			Class->Integer,
			Pattern:>_Integer,
			Description->"The pre-defined squeezer positions of the core 96 head.",
			Category->"Analysis & Reports"
		}
	}
}];
