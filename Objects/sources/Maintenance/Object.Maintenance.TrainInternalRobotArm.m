(* ::Package:: *)

(* ::Text:: *)
(*\[Copyright] 2011-2023 Emerald Cloud Lab, Inc.*)


DefineObjectType[Object[Maintenance, TrainInternalRobotArm], {
	Description->"A maintenance to adjust the position of the positions reachable by iSWAP on and off deck.",
	CreatePrivileges->None,
	Cache->Session,
	Fields -> {
		LiquidHandler -> {
			Format -> Single,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Alternatives[
				Object[Instrument, LiquidHandler],
				Model[Instrument, LiquidHandler]
			],
			Description -> "The liquid handler instrument whose robot arm is being trained.",
			Category -> "General",
			Developer->True
		},
		IntegratedPlateReader -> {
			Format -> Single,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Object[Instrument, PlateReader],
			Description -> "The plate reader which position will be trained.",
			Category -> "General",
			Developer->True
		},
		IntegratedPressureManifold -> {
			Format -> Single,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Object[Instrument, PressureManifold],
			Description -> "The pressure manifold which position will be trained.",
			Category -> "General",
			Developer->True
		},
		TrainingPlate ->{
			Format -> Single,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Alternatives[
				Object[Container,Plate],
				Model[Container,Plate]
			],
			Description -> "The training plate used in this maintenance.",
			Category -> "General"
		},
		TrainingPositions ->{
			Format -> Multiple,
			Class -> String,
			Pattern :> _String,
			Description -> "List of position names that will be trained by this maintenance.",
			Category -> "Organizational Information",
			Abstract -> True
		},
		DeckPlacements->{
			Format->Multiple,
			Class->{Link,Expression},
			Pattern:>{_Link,{LocationPositionP..}},
			Relation->{Object[Container],Null},
			Description->"A list of deck placements used to set-up the robotic liquid handler deck.",
			Headers->{"Object to Place","Placement Tree"},
			Category->"Placements",
			Developer->True
		},
		HamiltonManipulationsFile->{
			Format->Single,
			Class->Link,
			Pattern:>_Link,
			Relation->Object[EmeraldCloudFile],
			Description->"The method file used to perform the robotic manipulations on the Hamilton liquid handler as specified in the OutputUnitOperations.",
			Category->"General"
		},
		HamiltonDeckFiles -> {
			Format -> Single,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Object[EmeraldCloudFile],
			Description -> "The archive containing labware and deck file used in this method.",
			Category -> "General",
			Developer->True
		},
		DataFile -> {
			Format -> Single,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Object[EmeraldCloudFile],
			Description -> "The file containing the raw unprocessed measurements of the well coordinates as well as theoretical positions of those wells without any offsets.",
			Category -> "General"
		},
		MaintenanceKey -> {
			Format -> Single,
			Class -> String,
			Pattern :> _String,
			Description -> "String generated from the Maintenance's ID that is used to locate important files, required to use shared procedures and functions.",
			Developer -> True,
			Category -> "General"
		},
		ProtocolKey -> {
			Format -> Single,
			Class -> String,
			Pattern :> _String,
			Description -> "String generated from the Maintenance's ID that is used to tag files generated by the procedure; required to use shared procedures and functions.",
			Category -> "General",
			Developer -> True
		},
		CarrierPositionOffsets->{
			Format->Multiple,
			Class->{
				Item->Link,
				LiquidHandlerCarrierPrefix->String,
				OffsetType->String,
				Position->String,
				XOffset->Real,
				YOffset->Real,
				ZOffset->Real,
				ZRotation->Real
			},
			Pattern:>{
				Item->_Link,
				LiquidHandlerCarrierPrefix->_String,
				OffsetType->_String,
				Position->_String,
				XOffset->DistanceP,
				YOffset->DistanceP,
				ZOffset->DistanceP,
				ZRotation->RangeP[-360 AngularDegree,0 AngularDegree]
			},
			Relation->{
				Item->Alternatives[Model[Container,Rack],Model[Instrument]],
				LiquidHandlerCarrierPrefix->Null,
				OffsetType->Null,
				Position->Null,
				XOffset->Null,
				YOffset->Null,
				ZOffset->Null,
				ZRotation->Null
			},
			Units->{
				Item->None,
				LiquidHandlerCarrierPrefix->None,
				OffsetType->None,
				Position->None,
				XOffset->Millimeter,
				YOffset->Millimeter,
				ZOffset->Millimeter,
				ZRotation->AngularDegree
			},
			Description->"A set of physical adjustments for the plate positions on the carriers created to account for the instrument variation.",
			Category->"Dimensions & Positions"
		},
		InitializationStartTime->{
			Format->Single,
			Class->Expression,
			Pattern:>_?DateObjectQ,
			Description->"The time we start to initialize the liquid handler at the beginning of the method. We wait a maximum of 20 minutes after this time for a success or failure message from the instrument before further troubleshooting steps are performed.",
			Category->"Instrument Processing",
			Developer->True
		},
		VerificationCode -> {
			Format -> Single,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Object[Container,Site],
			Description -> "The object used to verify that the run was completed on the instrument.",
			Category -> "Instrument Processing",
			Developer -> True
		}
	}
}];