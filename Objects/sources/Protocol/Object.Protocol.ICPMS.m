(* ::Package:: *)

(* ::Text:: *)
(*\[Copyright] 2011-2023 Emerald Cloud Lab, Inc.*)


DefineObjectType[Object[Protocol, ICPMS], {
	Description->"Protocol for determining the atomic composition of samples by ionizing them into monoatomic ions via inductively coupled plasma (ICP) and measuring their mass-to-charge ratio (m/z)..",
	CreatePrivileges->None,
	Cache->Session,
	Fields -> {
		(* General Method information *)
		Instrument -> {
			Format -> Single,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Alternatives[Object[Instrument, MassSpectrometer], Model[Instrument, MassSpectrometer]],
			Description -> "The instrument used to atomize and ionize sample via plasma to measure trace element content via Inductively-Coupled Plasma Mass Spectrometry.",
			Category -> "General"
		},
		IonSource -> {
			Format -> Single,
			Class -> Expression,
			Pattern :> IonSourceP|ICP,
			Description -> "The type of ionization used to create gas phase ions from the molecules in the sample. Electrospray ionization (ESI) produces ions using an electrospray in which a high voltage is applied to a liquid to create an aerosol, and gas phase ions are formed from the fine spray of charged droplets as a result of solvent evaporation and Coulomb fission. In matrix-assisted laser desorption/ionization (MALDI), the sample is embedded in a laser energy absorbing matrix which is then irradiated with a pulsed laser, ablating and desorbing the molecules with minimal fragmentation and creating gas phase ions from the analyte molecules in the sample. For Inductively-coupled plasma (ICP), Sample particles are atomized and ionized by argon ion plasma, which is generated by passing radio-frequency current through an induction coil.",
			Category -> "General"
		},
		IonMode -> {
			Format -> Single,
			Class -> Expression,
			Pattern :> IonModeP,
			Description -> "Indicates if positively or negatively charged ions are selected and analyzed.",
			Category -> "General"
		},
		MassAnalyzer -> {
			Format -> Single,
			Class -> Expression,
			Pattern :> MassAnalyzerTypeP,
			Description -> "The component of the mass spectrometer that performs separation of ion according to its mass-to-charge ratio.",
			Category -> "General"
		},
		MinMass -> {
			Format -> Single,
			Class -> Real,
			Pattern :> GreaterP[(0*Gram)/Mole],
			Units -> Gram/Mole,
			Description -> "The lowest recorded value of the range of measured mass-to-charge ratio (m/z) of this mass spectrometry data.",
			Category -> "Method Information"
		},
		MaxMass -> {
			Format -> Single,
			Class -> Real,
			Pattern :> GreaterP[(0*Gram)/Mole],
			Units -> Gram/Mole,
			Description -> "The highest recorded value of the range of measured mass-to-charge ratio (m/z) of this mass spectrometry data.",
			Category -> "Method Information"
		},
		StandardType -> {
			Format -> Single,
			Class -> Expression,
			Pattern :> Alternatives[External, StandardAddition, None],
			Description -> "Indicates for each sample what type of Standard was introduced.",
			Category -> "Standards"
		},
		(*Digestion Information*)
		Digestion -> {
			Format -> Multiple,
			Class -> Boolean,
			Pattern :> BooleanP,
			Description -> "For each member of SamplesIn, indicates whether digestion was performed for each sample before ICP-MS measurement.",
			IndexMatching -> SamplesIn,
			Category -> "Digestion"
		},
		DigestionProtocol -> {
			Format -> Single,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Object[Protocol,MicrowaveDigestion],
			Description -> "Links to the digestion protocol for samples with Digestion set to True.",
			Category -> "Digestion"
		},
		DigestionSamplesOut -> {
			Format -> Multiple,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Object[Sample],
			IndexMatching -> SamplesIn,
			Description -> "For each member of SamplesIn, relates the sample after digestion. Null indicates no digestion is performed.",
			Category -> "Digestion"
		},
		DigestionInstrument -> {
			Format -> Single,
			Class -> Expression,
			Pattern :> ObjectP[{Object[Instrument, Reactor, Microwave], Model[Instrument, Reactor, Microwave]}],
			Description -> "The reactor used to perform the microwave digestion.",
			Category -> "General"
		},
		SampleType -> {
			Format -> Multiple,
			Class -> Expression,
			Pattern :> Alternatives[Organic, Inorganic, Tablet, Biological],
			IndexMatching -> SamplesIn,
			Description -> "For each member of SamplesIn, Specifies if the sample is primarily composed of organic material, inorganic material, or is a tablet formulation. If the sample in tablet form, select Tablet regardless of the composition.",
			Category -> "General"
		},
		SampleDigestionAmount -> {
			Format -> Multiple,
			Class -> VariableUnit,
			Pattern :> Alternatives[GreaterP[0 Milligram], GreaterP[0 Microliter]],
			IndexMatching -> SamplesIn,
			Description -> "For each member of SamplesIn, The amount of sample used for digestion.",
			Category -> "General"
		},
		CrushSample -> {
			Format -> Multiple,
			Class -> Boolean,
			Pattern :> BooleanP,
			IndexMatching -> SamplesIn,
			Description -> "For each member of SamplesIn, Indicates if the tablet is crushed to a powder prior to digestion.",
			Category -> "Sample Preparation"
		},
		PreDigestionMix -> {
			Format -> Multiple,
			Class -> Boolean,
			Pattern :> BooleanP,
			IndexMatching -> SamplesIn,
			Description -> "For each member of SamplesIn, Indicates if the reaction mixture is stirred at ambient temperature directly prior to being subjected to microwave heating. Pre-mixing can ensure that a sample is fully dissolved or suspended prior to heating.",
			Category -> "Sample Preparation"
		},
		PreDigestionMixTime -> {
			Format -> Multiple,
			Class -> Real,
			Pattern :> GreaterEqualP[0 Second],
			Units -> Second,
			IndexMatching -> SamplesIn,
			Description -> "For each member of SamplesIn, The amount of time for which the reaction mixture is stirred at ambient temperature directly prior to being subjected to microwave heating.",
			Category -> "Sample Preparation"
		},
		PreDigestionMixRate -> {
			Format -> Multiple,
			Class -> Expression,
			Pattern :> Alternatives[None, Low, Medium, High],
			IndexMatching -> SamplesIn,
			Description -> "For each member of SamplesIn, The rate at which the reaction mixture is stirred at ambient temperature directly prior to being subjected to microwave heating.",
			Category -> "Sample Preparation"
		},
		PreparedPreDigestionSample -> {
			Format -> Multiple,
			Class -> Boolean,
			Pattern :> BooleanP,
			IndexMatching -> SamplesIn,
			Description -> "For each member of SamplesIn, Indicates if the member of SampleIn is already mixed with an appropriate digestion agent. Setting PreparedSample -> True will change the upper limit on the SampleAmount to 20 mL.",
			Category -> "Sample Preparation"
		},
		DigestionAgents -> {
			Format -> Multiple,
			Class -> Expression,
			Pattern :> {{ObjectP[Model[Sample]], VolumeP}...},
			IndexMatching -> SamplesIn,
			Description -> "For each member of SamplesIn, The volume and identity of the digestion agents used to digest and dissolve the SamplesIn.",
			Category -> "Digestion"
		},
		DigestionTemperature -> {
			Format -> Multiple,
			Class -> Real,
			Pattern :> GreaterEqualP[0 Kelvin],
			Units -> Celsius,
			IndexMatching -> SamplesIn,
			Description -> "For each member of SamplesIn, The temperature to which the sample is heated for the duration of the DigestionDuration.",
			Category -> "Sample Preparation"
		},
		DigestionDuration -> {
			Format -> Multiple,
			Class -> Real,
			Pattern :> GreaterP[0 Minute],
			Units -> Minute,
			IndexMatching -> SamplesIn,
			Description -> "For each member of SamplesIn, The amount of time for which the sample is incubated at the set DigestionTemperature during digestion.",
			Category -> "Digestion"
		},
		DigestionRampDuration -> {
			Format -> Multiple,
			Class -> Real,
			Pattern :> GreaterP[0 Minute],
			Units -> Minute,
			IndexMatching -> SamplesIn,
			Description -> "For each member of SamplesIn, The amount of time taken for the sample chamber temperature from ambient temperature to reach the DigestionTemperature.",
			Category -> "Digestion"
		},
		DigestionTemperatureProfile -> {
			Format -> Multiple,
			Class -> Expression,
			Pattern :> {{TimeP, TemperatureP}...},
			IndexMatching -> SamplesIn,
			Description -> "For each member of SamplesIn, The heating profile for the reaction mixture in the form {{Time, Target Temperature}..}. Consecutive entries with different temperatures result in a linear ramp between the temperatures, while consecutive entries with the same temperature indicate an isothermal region at the specified temperature.",
			Category -> "Digestion"
		},
		DigestionMixRateProfile -> {
			Format -> Multiple,
			Class -> Expression,
			Pattern :> {{TimeP, Alternatives[Low, Medium, High]}...} | Low | Medium | High,
			IndexMatching -> SamplesIn,
			Description -> "For each member of SamplesIn, The relative rate of the magnetic stir bar rotation that will be used to mix the sample, either for the duration of the digestion (fixed), or from the designated time point to the next time point (variable). For safety reasons, the sample must be mixed during microwave heating.",
			Category -> "Digestion"
		},
		DigestionMaxPower -> {
			Format -> Multiple,
			Class -> Real,
			Pattern :> GreaterP[0 Watt],
			Units -> Watt,
			IndexMatching -> SamplesIn,
			Description -> "For each member of SamplesIn, The maximum power of the microwave radiation output that will be used during heating.",
			Category -> "Digestion"
		},
		DigestionMaxPressure -> {
			Format -> Multiple,
			Class -> Real,
			Pattern :> GreaterP[0 PSI],
			Units -> PSI,
			IndexMatching -> SamplesIn,
			Description -> "For each member of SamplesIn, The pressure at which the magnetron will cease to heat the reaction vessel. If the vessel internal pressure exceeds 500 PSI, the instrument will cease heating regardless of this option.",
			Category -> "Digestion"
		},
		DigestionPressureVenting -> {
			Format -> Multiple,
			Class -> Boolean,
			Pattern :> BooleanP,
			IndexMatching -> SamplesIn,
			Description -> "For each member of SamplesIn, The pressure at which the magnetron will cease to heat the reaction vessel. If the vessel internal pressure exceeds 500 PSI, the instrument will cease heating regardless of this option.",
			Category -> "Digestion"
		},
		DigestionPressureVentingTriggers -> {
			Format -> Multiple,
			Class -> Expression,
			Pattern :> {{PressureP, _Integer}...},
			IndexMatching -> SamplesIn,
			Description -> "For each member of SamplesIn, The set point pressures at which venting will begin, and the number of times that the system will vent the vessel in an attempt to reduce the pressure by the value of TargetPressureReduction. If the pressure set points are not reached, no venting will occur. Be aware that excessive venting may result in sample evaporation, leading to dry out of sample, loss of sample and damage of reaction vessel.",
			Category -> "Digestion"
		},
		DigestionTargetPressureReduction -> {
			Format -> Multiple,
			Class -> Real,
			Pattern :> GreaterEqualP[1 PSI],
			Units -> PSI,
			Description -> "For each member of SamplesIn, For each member of SamplesIn, the desired reduction in pressure during sample venting.",
			Category -> "Digestion",
			IndexMatching -> SamplesIn
		},
		DigestionOutputAliquot -> {
			Format -> Multiple,
			Class -> Expression,
			Pattern :> Alternatives[GreaterP[0 Milliliter], All],
			IndexMatching -> SamplesIn,
			Description -> "For each member of SamplesIn, Indicates if the OutputAliquot is added to a specified volume (DiluentVolume) of Diluent prior to storage or use in subsequent experiments. Dilution reduces the risk and cost associated with storage of caustic/oxidizing reagents commonly employed in digestion protocols.",
			Category -> "Digestion"
		},
		DiluteDigestionOutputAliquot -> {
			Format -> Multiple,
			Class -> Boolean,
			Pattern :> BooleanP,
			IndexMatching -> SamplesIn,
			Description -> "For each member of SamplesIn, Indicates if the OutputAliquot is added to a specified volume (DiluentVolume) of Diluent prior to storage or use in subsequent experiments. Dilution reduces the risk and cost associated with storage of caustic/oxidizing reagents commonly employed in digestion protocols.",
			Category -> "Digestion"
		},
		PostDigestionDiluent -> {
			Format -> Multiple,
			Class -> Expression,
			Pattern :> ObjectP[{Model[Sample], Object[Sample]}],
			IndexMatching -> SamplesIn,
			Description -> "For each member of SamplesIn, The solution used to dilute the OutputAliquot of the digested sample.",
			Category -> "Digestion"
		},
		PostDigestionDiluentVolume -> {
			Format -> Multiple,
			Class -> Real,
			Pattern :> VolumeP,
			IndexMatching -> SamplesIn,
			Description -> "For each member of SamplesIn, The volume of diluent into which the OutputAliquot will be added.",
			Category -> "Digestion"
		},
		PostDigestionDilutionFactor -> {
			Format -> Multiple,
			Class -> Real,
			Pattern :> GreaterP[1],
			IndexMatching -> SamplesIn,
			Description -> "For each member of SamplesIn, The desired dilution factor for this mixture.",
			Category -> "Digestion"
		},
		PostDigestionSampleVolume -> {
			Format -> Multiple,
			Class -> Real,
			Pattern :> VolumeP,
			Units -> Milliliter,
			IndexMatching -> SamplesIn,
			Description -> "For each member of SamplesIn, The volume of output sample after DigestionOutputAliquot has been removed, and subsequently been diluted by the DiluentVolume of the provided Diluent sample.",
			Category -> "Digestion"
		},
		DigestionContainerOut -> {
			Format -> Multiple,
			Class -> Expression,
			Pattern :> ObjectP[{Model[Container, Vessel], Object[Container, Vessel]}],
			IndexMatching -> SamplesIn,
			Description -> "For each member of SamplesIn, The container model into which the OutputAliquotVolume or dilutions thereof is placed as the output of digestion.",
			Category -> "Digestion"
		},
		SampleAmounts -> {
			Format -> Multiple,
			Class -> Real,
			Pattern :> GreaterEqualP[0 Milliliter],
			Units -> Microliter,
			IndexMatching -> SamplesIn,
			Description -> "For each member of SamplesIn, indicates the volume that will be used for ICP-MS measurement after digestion but before standard addition and internal standard addition.",
			Category -> "Sample Loading"
		},
		(*Blank and Rinse parameters*)
		Blank -> {
			Format -> Single,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Alternatives[Object[Sample],Model[Sample]],
			Description -> "Solution containing zero analyte.",
			Category -> "Blank"
		},
		BlankDiluent -> {
			Format -> Single,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Alternatives[Object[Sample],Model[Sample]],
			Description -> "Solution containing zero analyte that is specifically for dilution.",
			Category -> "Blank"
		},
		Rinse -> {
			Format -> Single,
			Class -> Boolean,
			Pattern :> BooleanP,
			Description -> "Indicates whether rinse was conducted between set amount of sample measurements.",
			Category -> "Flushing"
		},
		RinseInterval -> {
			Format -> Single,
			Class -> Integer,
			Pattern :> GreaterEqualP[1],
			Description -> "Indicate how many samples were run between two rinses.",
			Category -> "Flushing"
		},
		RinseSolution -> {
			Format -> Single,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Alternatives[Object[Sample],Model[Sample]],
			Description -> "Solution employed for rinsing inlet line between set amount of sample measurements.",
			Category -> "Flushing"
		},
		RinseTime -> {
			Format -> Single,
			Class -> Real,
			Pattern :> GreaterEqualP[0 Second],
			Units -> Second,
			Description -> "Indicate how long each rinse last.",
			Category -> "Flushing"
		},
		InjectionDuration -> {
			Format -> Single,
			Class -> Real,
			Pattern :> GreaterP[0 Second],
			Units -> Second,
			Description->"Duration of the input sample being continuously injected into the instrument for each measurement.",
			Category -> "Sample Loading"
		},
		InjectionPumpSpeed -> {
			Format -> Single,
			Class -> Real,
			Pattern :> GreaterP[0 RPM],
			Units -> RPM,
			Description->"Peristaltic pump speed for drawing the liquid sample into the injector.",
			Category -> "Sample Loading"
		},
		SprayChamberTemperature -> {
			Format -> Single,
			Class -> Real,
			Pattern :> TemperatureP,
			Units -> Celsius,
			Description->"Temperature setting in the nebulizer spray chamber.",
			Category -> "Sample Loading"
		},
		NebulizerGasFlowRate -> {
			Format -> Single,
			Class -> Real,
			Pattern:>GreaterEqualP[0 Liter/Minute],
			Units->Liter/Minute,
			Description->"Rate at which the Ar gas flows into the injector to deliver and aerosolize the input sample.",
			Category -> "Sample Loading"
		},
		AuxillaryGasFlowRate -> {
			Format -> Single,
			Class -> Real,
			Pattern:>GreaterEqualP[0 Liter/Minute],
			Units->Liter/Minute,
			Description->"Rate at which the Ar gas flows into the injector to generate plasma.",
			Category -> "Ionization"
		},
		CoolGasFlowRate -> {
			Format -> Single,
			Class -> Real,
			Pattern:>GreaterEqualP[0 Liter/Minute],
			Units->Liter/Minute,
			Description->"Rate at which the Ar gas flows into the injector to cool the torch.",
			Category -> "Method Information"
		},
		(*Initialization information*)
		WarmUpTime -> {
			Format -> Single,
			Class -> Real,
			Pattern :> GreaterEqualP[0 * Minute],
			Units -> Minute,
			Description -> "The amount of time after plasma lit and before validation test / first experiment.",
			Category -> "Method Information"
		},
		ValidationTestResult -> {
			Format -> Single,
			Class -> Expression,
			Pattern :> Alternatives[Pass, Fail],
			Description -> "Indicates whether Instrument Validation test has passed.",
			Category -> "Method Information"
		},
		(*Parameters for each element/isotope analyte, IndexMatched to Elements*)
		Elements -> {
			Format -> Multiple,
			Class -> Expression,
			Pattern :> ICPMSNucleusP,
			Description -> "Indicate the list of elements or isotopes being measured across all samples.",
			Category -> "Method Information"
		},
		QuantifyConcentration -> {
			Format -> Multiple,
			Class -> Boolean,
			Pattern :> BooleanP,
			Description -> "For each member of Elements, Indicates whether the concentration of each element analyte should be calculated.",
			IndexMatching -> Elements,
			Category -> "Method Information"
		},
		InternalStandardElement -> {
			Format -> Multiple,
			Class -> Boolean,
			Pattern :> BooleanP,
			Description -> "For each member of Elements, indicates if this element is employed as internal standard.",
			IndexMatching -> Elements,
			Category -> "Method Information"
		},
		(*TODO: Nominal*)
		NominalPlasmaPower -> {
			Format -> Multiple,
			Class -> Real,
			Pattern :> GreaterP[0 Watt],
			Units -> Watt,
			Description->"For each member of Elements, Electric power of the coil generating the Ar-ion plasma flowing through the torch set by the user.",
			IndexMatching -> Elements,
			Category -> "Ionization"
		},
		PlasmaPower -> {
			Format -> Multiple,
			Class -> Real,
			Pattern :> GreaterP[0 Watt],
			Units -> Watt,
			Description->"For each member of Elements, Actual electric power of the coil generating the Ar-ion plasma flowing through the torch measured by the instrument.",
			IndexMatching -> Elements,
			Category -> "Ionization"
		},
		CollisionCellPressurization -> {
			Format -> Multiple,
			Class -> Boolean,
			Pattern :> BooleanP,
			Description -> "For each member of Elements, Indicates whether gas should be allowed to enter the collision cell to enable reaction or Kinetic Energy Discrimination (KED).",
			IndexMatching -> Elements,
			Category -> "Method Information"
		},
		CollisionCellGas -> {
			Format -> Single,
			Class -> Expression,
			Pattern :> Alternatives[Helium, Oxygen],
			Description -> "Indicates what type of gas should be released into the collision cell to enable reaction or Kinetic Energy Discrimination (KED).",
			Category -> "Method Information"
		},
		CollisionCellGasFlowRate -> {
			Format -> Multiple,
			Class -> Real,
			Pattern :> RangeP[(0*Milliliter)/Minute, (10*Milliliter)/Minute],
			Units -> Milliliter / Minute,
			Description -> "For each member of Elements, The flux of gas flowing through the collision cell.",
			IndexMatching -> Elements,
			Category -> "Method Information"
		},
		CollisionCellBias -> {
			Format -> Multiple,
			Class -> Boolean,
			Pattern :> BooleanP,
			Description -> "For each member of Elements, Indicate if quadrupole in the collision cell is switched on or not.",
			IndexMatching -> Elements,
			Category -> "Method Information"
		},
		ConeDiameter -> {
			Format -> Single,
			Class -> Real,
			Pattern :> GreaterP[0*Millimeter],
			Units -> Millimeter,
			Description -> "Indicates diameter of the vacuum interface cone. Higher cone diameter should be used for higher matrix content.",
			Category -> "Method Information"
		},
		Cone -> {
			Format -> Single,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Alternatives[Model[Item], Object[Item]],
			Description -> "Indicates the vacuum interface cone.",
			Category -> "Method Information"
		},
		(*TODO: All quantities range should be what is physically possible, not instrument allowed*)
		DwellTime -> {
			Format -> Multiple,
			Class -> Real,
			Pattern :> GreaterP[0 Second],
			Units -> Second,
			Description -> "For each member of Elements, Time spent to measure a single Analyte of a single sample.",
			IndexMatching -> Elements,
			Category -> "Method Information"
		},
		NumberOfReads -> {
			Format -> Multiple,
			Class -> Integer,
			Pattern :> GreaterEqualP[1],
			Description -> "For each member of Elements, Number of channels used for each peak.",
			IndexMatching -> Elements,
			Category -> "Method Information"
		},
		ReadSpacing -> {
			Format -> Multiple,
			Class -> Real,
			Pattern :> GreaterP[0 Gram/Mole],
			Units -> Gram / Mole,
			Description -> "For each member of Elements, Distance of mass units between adjacent channels.",
			IndexMatching -> Elements,
			Category -> "Method Information"
		},
		Bandpass -> {
			Format -> Multiple,
			Class -> Real,
			Pattern :> GreaterP[0 Gram/Mole],
			Units -> Gram/Mole,
			Description->"For each member of Elements, The bandwidth of allowed m/z ratio for each reading by the quadrupole at 10% peak height. A higher resolution can better differentiate some isotopes, with a trade-off of reduced signal level.",
			IndexMatching -> Elements,
			Category -> "Method Information"
		},
		QuantifyElements -> {
			Format -> Single,
			Class -> Boolean,
			Pattern :> BooleanP,
			Description -> "Indicates if concentration of elements will be quantified in addition to each isotopes.",
			Category -> "Method Information"
		},
		Sweep -> {
			Format -> Single,
			Class -> Boolean,
			Pattern :> BooleanP,
			Description -> "Indicates if a sweep scan across a defined mass range is performed.",
			Category -> "Method Information"
		},
		SweepParameters -> {
			Format -> Multiple,
			Class -> {Expression, Expression},
			Pattern :> {
				Alternatives[_String, _Symbol],
				Alternatives[_String, _Symbol, _Integer, _Quantity]
			},
			Description -> "Parameters for sweep scan.",
			Category -> "Method Information",
			Headers -> {"Parameter", "Value"}
		},
		MeasurementMode -> {
			Format -> Multiple,
			Class -> String,
			Pattern :> Alternatives["STD", "STDR", "STDS", "CCT", "CCTR", "CCTS", "KED", "KEDR", "KEDS", "Cold_Ins"],
			Description -> "For each member of Elements, indicate the mode of measurement that is configured for the software.",
			Category -> "Method Information",
			IndexMatching -> Elements
		},
		DwellTimeString -> {
			Format -> Multiple,
			Class -> String,
			Pattern :> _String,
			Description -> "For each member of Elements, indicate the DwellTime in unit of Second, converted into string.",
			Category -> "Method Information",
			Developer -> True,
			IndexMatching -> Elements
		},
		Channels -> {
			Format -> Multiple,
			Class -> String,
			Pattern :> _String,
			Description -> "For each member of Elements, indicate the total number of channels that will be measured.",
			Category -> "Method Information",
			Developer -> True,
			IndexMatching -> Elements
		},
		Spacing -> {
			Format -> Multiple,
			Class -> String,
			Pattern :> _String,
			Description -> "For each member of Elements, indicate the spacing between two adjacent measurement channels, in unit of amu.",
			Category -> "Method Information",
			Developer -> True,
			IndexMatching -> Elements
		},
		Resolution -> {
			Format -> Multiple,
			Class -> String,
			Pattern :> _String,
			Description -> "For each member of Elements, indicate the resolution setting for measurement.",
			Category -> "Method Information",
			Developer -> True,
			IndexMatching -> Elements
		},
		TuneFileFolderName -> {
			Format -> Single,
			Class -> String,
			Pattern :> _String,
			Description -> "The name of the folder that holds the .xml file of performance report.",
			Category -> "General",
			Developer -> True
		},
		(*Parameters specifically for external standard*)
		ExternalStandard -> {
			Format -> Multiple,
			Class -> {
				PreDilutionSample -> Link,
				StandardVolume -> Real,
				BlankVolume -> Real,
				Label -> String,
				Sample -> Link,
				Container -> Link,
				Data -> Link
			},
			Pattern :> {
				PreDilutionSample -> ObjectP[{Object[Sample], Model[Sample]}],
				StandardVolume -> VolumeP,
				BlankVolume -> VolumeP,
				Label -> _String,
				Sample -> ObjectP[{Object[Sample], Model[Sample]}],
				Container -> _Link,
				Data -> _Link
			},
			Relation -> {
				PreDilutionSample -> Alternatives[Object[Sample], Model[Sample]],
				StandardVolume -> Null,
				BlankVolume -> Null,
				Label -> Null,
				Sample -> Alternatives[Object[Sample], Model[Sample]],
				Container -> Alternatives[Object[Container, Vessel], Model[Container, Vessel]],
				Data -> Object[Data, ICPMS]
			},
			Units -> {
				PreDilutionSample -> None,
				StandardVolume -> Milliliter,
				BlankVolume -> Milliliter,
				Label -> None,
				Sample -> None,
				Container -> None,
				Data -> None
			},
			Description -> "The list of standard that is employed as external standard for ICPMS measurements. Identical standard diluted by different ratio were counted as different ones.",
			Category -> "Method Information"
		},
		(*Parameters specifically for standard addition*)
		StandardSpikedSamples -> {
			Format -> Multiple,
			Class -> {
				AdditionStandard -> Link,
				PreDilutionSample -> Link,
				StandardVolume -> Real,
				SampleVolume -> Real,
				BlankVolume -> Real,
				Sample -> Link,
				Container -> Link,
				Label -> String,
				Data -> Link
			},
			Pattern :> {
				AdditionStandard -> _Link,
				PreDilutionSample -> _Link,
				StandardVolume -> VolumeP,
				SampleVolume -> VolumeP,
				BlankVolume -> VolumeP,
				Sample -> _Link,
				Container -> _Link,
				Label -> _String,
				Data -> _Link
			},
			Relation -> {
				AdditionStandard -> Alternatives[Object[Sample], Model[Sample]],
				PreDilutionSample -> Alternatives[Object[Sample], Model[Sample]],
				StandardVolume -> Null,
				SampleVolume -> Null,
				BlankVolume -> Null,
				Sample -> Alternatives[Object[Sample], Model[Sample]],
				Container -> Alternatives[Object[Container, Vessel], Model[Container, Vessel]],
				Label -> Null,
				Data -> Object[Data, ICPMS]
			},
			Units -> {
				AdditionStandard -> None,
				PreDilutionSample -> None,
				StandardVolume -> Milliliter,
				SampleVolume -> Milliliter,
				BlankVolume -> Milliliter,
				Sample -> None,
				Container -> None,
				Label -> None,
				Data -> None
			},
			Description -> "The list of standard added samples from the same experiment.",
			Category -> "Method Information"
		},
		InternalStandard -> {
			Format -> Single,
			Class -> {Link, Real},
			Pattern :> {_Link, GreaterEqualP[0]},
			Relation -> {Alternatives[Object[Sample], Model[Sample]], Null},
			Units -> {None, None},
			Description -> "Internal standard that is added into the sample to compensate for detector drift.",
			Category -> "Method Information",
			Headers -> {"Internal Standard", "Standard : Sample ratio"}
		},
		ExternalStandardElements -> {
			Format -> Multiple,
			Class -> {
				Element -> Expression,
				Sample -> Link,
				Label -> String,
				Concentration -> Real,
				Standard -> Link,
				StandardConcentration -> Real
			},
			Pattern :> {
				Element -> ICPMSNucleusP|ICPMSElementP,
				Sample -> _Link,
				Label -> _String,
				Concentration -> MassConcentrationP,
				Standard -> _Link,
				StandardConcentration -> MassConcentrationP
			},
			Relation -> {
				Element -> Null,
				Sample -> Alternatives[Object[Sample], Model[Sample]],
				Label -> Null,
				Concentration -> Null,
				Standard -> Alternatives[Object[Sample], Model[Sample]],
				StandardConcentration -> Null
			},
			Units -> {
				Element -> None,
				Sample -> None,
				Label -> None,
				Concentration -> Milligram/Liter,
				Standard -> None,
				StandardConcentration -> Milligram/Liter
			},
			Description -> "The list of elements/isotopes and their concentrations in the external standard, after dilution.",
			Category -> "Method Information"
		},
		StandardAdditionElements -> {
			Format -> Multiple,
			Class -> {
				Element -> Expression,
				Sample -> Link,
				Label -> String,
				Concentration -> Real,
				Standard -> Link,
				StandardConcentration -> Real
			},
			Pattern :> {
				Element -> ICPMSNucleusP|ICPMSElementP,
				Sample -> _Link,
				Label -> _String,
				Concentration -> MassConcentrationP,
				Standard -> _Link,
				StandardConcentration -> MassConcentrationP
			},
			Relation -> {
				Element -> Null,
				Sample -> Alternatives[Object[Sample], Model[Sample]],
				Label -> Null,
				Concentration -> Null,
				Standard -> Alternatives[Object[Sample], Model[Sample]],
				StandardConcentration -> Null
			},
			Units -> {
				Element -> None,
				Sample -> None,
				Label -> None,
				Concentration -> Milligram/Liter,
				Standard -> None,
				StandardConcentration -> Milligram/Liter
			},
			Description -> "The list of elements/isotopes and their concentrations in the sample, after mixing with addition standard.",
			Category -> "Method Information"
		},
		TuningStandard -> {
			Format -> Single,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Alternatives[Model[Sample], Object[Sample]],
			Description -> "The tuning standard solution used for validation tests during instrument start-up.",
			Category -> "Method Information"
		},
		(* hidden options for procedures *)
		PostDigestionSample -> {
			Format -> Multiple,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Alternatives[Object[Sample], Model[Sample]],
			Description -> "For each member of SamplesIn, Indicate either the digested samples if Digestion -> True, or the original samples if Digestion -> False.",
			Developer -> True,
			IndexMatching -> SamplesIn,
			Category -> "Method Information"
		},
		InternalStandardAdditionTable -> {
			Format -> Multiple,
			Class -> {
				InternalStandard -> Link,
				Sample -> Link,
				InternalStandardVolume -> Real,
				SampleVolume -> Real
			},
			Pattern :> {
				InternalStandard -> _Link,
				Sample -> _Link,
				InternalStandardVolume -> VolumeP,
				SampleVolume -> VolumeP
			},
			Relation -> {
				InternalStandard -> Alternatives[Object[Sample], Model[Sample]],
				Sample -> Alternatives[Object[Sample], Model[Sample], Object[Container, Vessel]],
				InternalStandardVolume -> Null,
				SampleVolume -> Null
			},
			Units -> {
				InternalStandard -> None,
				Sample -> None,
				InternalStandardVolume -> Milliliter,
				SampleVolume -> Milliliter
			},
			Developer -> True,
			Description -> "Indicates how much volume of InternalStandard is added to all samples and standards.",
			Category -> "Method Information"
		},
		MeasurementMethod -> {
			Format -> Multiple,
			Class -> String,
			Pattern :> Alternatives["STD", "STDR", "STDS", "CCT", "CCTR", "CCTS", "KED", "KEDR", "KEDS", "Cold_Ins"],
			Developer -> True,
			Description -> "Indicates the MeasurementMethod that are done so corresponding validation tests can be done when starting up the instrument.",
			Category -> "Method Information"
		},
		SamplesInAliquots -> {
			Format -> Multiple,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Alternatives[Model[Container, Vessel], Object[Container, Vessel], Object[Sample]],
			Developer -> True,
			Description -> "For each member of SamplesIn, indicates the samples that has bypassed or went through digestion and aliquoted into 15mL Tube.",
			Category -> "Method Information"
		},
		SampleQueueFilePath -> {
			Format -> Single,
			Class -> String,
			Pattern :> FilePathP,
			Description -> "The full file path of the sample queue file necessary for the instrument to load the sample list and execute this protocol.",
			Category -> "General",
			Developer -> True
		},
		DataFilePath -> {
			Format -> Single,
			Class -> String,
			Pattern :> FilePathP,
			Description -> "The full file path of the data csv file originated from this protocol.",
			Category -> "General",
			Developer -> True
		},
		TuneExportFilePath -> {
			Format -> Single,
			Class -> String,
			Pattern :> FilePathP,
			Description -> "The full file path of tune report file originated from this protocol.",
			Category -> "General",
			Developer -> True
		},
		DataFileName -> {
			Format -> Single,
			Class -> String,
			Pattern :> _String,
			Description -> "Name of the Labbook data file, without extension.",
			Category -> "General",
			Developer -> True
		},
		ElementAnalytes -> {
			Format -> Multiple,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Model[Physics, ElementData],
			Description -> "List of element analytes that needs to be analyzed by ICPMS instrument. Sweep scan is omitted.",
			Category -> "Method Information",
			Developer -> True
		},
		IsotopeAnalytes -> {
			Format -> Multiple,
			Class -> Expression,
			Pattern :> {_String..},
			Description -> "For each member of ElementAnalytes, indicate the list of isotope analytes that needs to be analyzed by ICPMS instrument. Sweep scan is omitted.",
			Category -> "Method Information",
			Developer -> True,
			IndexMatching -> ElementAnalytes
		},
		Standards -> {
			Format -> Multiple,
			Class -> {String, Expression},
			Pattern :> {_String, {{_String, _String, _String}...}},
			Description -> "List of standards that are used in the experiment, sorted and formatted for operators to enter into Qtegra software.",
			Category -> "Method Information",
			Developer -> True,
			Headers -> {"Standard", "Standard Concentration"}
		},
		CurrentStandard -> {
			Format -> Single,
			Class -> String,
			Pattern :> _String,
			Description -> "Indicate the current standard name of which isotopes are being entered by operators into the Qtegra software.",
			Category -> "Method Information",
			Developer -> True
		},
		StandardLabels -> {
			Format -> Multiple,
			Class -> String,
			Pattern :> _String,
			Description -> "For each member of Standards, indicate the string label that will be entered into Qtegra software.",
			Category -> "Method Information",
			Developer -> True,
			IndexMatching -> Standards
		},
		StandardAnalytes -> {
			Format -> Multiple,
			Class -> String,
			Pattern :> _String,
			Description -> "Indicate the isotope or element in the CurrentStandard that needs to be entered by operators into the Qtegra software.",
			Category -> "Method Information",
			Developer -> True
		},
		StandardAnalyteConcentrations -> {
			Format -> Multiple,
			Class -> String,
			Pattern :> _String,
			Description -> "For each member of StandardAnalytes, Indicate the numerical value of concentration of that isotope or element in the CurrentStandard that needs to be entered by operators into the Qtegra software.",
			Category -> "Method Information",
			Developer -> True
		},
		StandardAnalyteConcentrationUnits -> {
			Format -> Multiple,
			Class -> String,
			Pattern :> _String,
			Description -> "For each member of StandardAnalytes, Indicate the concentration unit of that isotope or element in the CurrentStandard that needs to be entered by operators into the Qtegra software.",
			Category -> "Method Information",
			Developer -> True
		},
		SamplePlacements -> {
			Format -> Multiple,
			Class -> {Link, Expression},
			Pattern :> {_Link, {LocationPositionP..}},
			Relation -> {Object[Container], Null},
			Description -> "A list  of placements used to move all samples, blank and standards on to the ICP-MS autosampler.",
			Headers -> {"Sample Container", "Placement Tree"},
			Category -> "Placements",
			Developer -> True
		},
		ICPMSSampleContainers -> {
			Format -> Multiple,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Model[Container, Vessel]|Object[Container, Vessel],
			Description -> "For each member of SamplesIn, the containers that holds the aliquoted samples that are used for ICP-MS measurements.",
			Category -> "Sample Preparation",
			IndexMatching -> SamplesIn
		},
		RawDataFile -> {
			Format -> Single,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Object[EmeraldCloudFile],
			Description -> "The raw data (in .imexp format) pertaining to the ICP-MS measurement of all SamplesIn zipped into one directory.",
			Category -> "Experimental Results"
		},
		RawDataFilePaths -> {
			Format -> Single,
			Class -> String,
			Pattern :> FilePathP,
			Description -> "The full file path of raw data file file (in .imexp format) originated from this protocol.",
			Category -> "General",
			Developer -> True
		},
		AnalyteData -> {
			Format -> Multiple,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Object[Data][Protocol],
			Description -> "Data object of user-input samples generated by this protocol.",
			Category -> "Experimental Results"
		},
		StandardData -> {
			Format -> Multiple,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Object[Data][Protocol],
			Description -> "Data object of external standards or standard spiked samples generated by this protocol.",
			Category -> "Experimental Results"
		},
		BlankData -> {
			Format -> Single,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Object[Data][Protocol],
			Description -> "Data object of blank sample generated by this protocol.",
			Category -> "Experimental Results"
		},
		TuneReportFile -> {
			Format -> Single,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Object[EmeraldCloudFile],
			Description -> "The tuning and mass calibration report from this protocol.",
			Category -> "Analysis & Reports"
		},
		PerformanceTestResults -> {
			Format -> Multiple,
			Class -> {String, Real, Real, Real, Boolean},
			Pattern :> {_String, _?NumberQ, _?NumberQ, _?NumberQ, BooleanP},
			Headers -> {"Test item", "measured value", "Min allowed value", "Max allowed value", "Passing"},
			Description -> "The result of the tuning and mass calibration before data acquisition.",
			Category -> "Analysis & Reports"
		},
		StandardPreparationUnitOperations -> {
			Format -> Multiple,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Object[UnitOperation],
			Description -> "The UnitOperation objects used to prepare standard solution or standard spiked samples.",
			Category -> "Sample Preparation"
		},
		LoadingSamples -> {
			Format -> Multiple,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Object[Sample],
			Description -> "The aliquoted samples that were directly measured for ICP-MS experiment.",
			Category -> "Sample Preparation"
		},
		MeasurementContainers -> {
			Format -> Multiple,
			Class -> Link,
			Pattern :> _Link,
			Relation -> Object[Container],
			Description -> "The container to hold the aliquoted samples that were directly measured for ICP-MS experiment.",
			Category -> "Sample Preparation"
		},
		DataCollectionTime -> {
			Format -> Single,
			Class -> Real,
			Pattern :> GreaterP[0*Minute],
			Units -> Minute,
			Description -> "The estimated completion time for the collection of ICP-MS data.",
			Category -> "General",
			Developer -> True
		}
	}
}];


