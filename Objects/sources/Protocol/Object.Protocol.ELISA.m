(* ::Package:: *)

(* ::Text:: *)
(*\[Copyright] 2011-2023 Emerald Cloud Lab, Inc.*)

DefineObjectType[Object[Protocol, ELISA],
	{
		Description->"A protocol for performing a Enzyme-Linked Immunosorbent Assay (ELISA) experiment on the provided samples for the detection and quantification of an analyte using antibodies.",
		CreatePrivileges->None,
		Cache->Session,
		Fields->{
			Instrument->{
				Format->Single,
				Class->Link,
				Pattern :> ObjectP[{Object[Instrument, LiquidHandler], Model[Instrument, LiquidHandler]}],
				Relation->Object[Instrument, LiquidHandler] | Model[Instrument, LiquidHandler],
				Description->"The detection and quantification  ELISA device on which the protocol is used to perform the ELISA experiment and detects the signals to quantify certain analytes.",
				Category->"General"
			},

			(* ----------Files------------ *)
			ProtocolKey -> {
				Format -> Single,
				Class -> String,
				Pattern :> _String,
				Description -> "The protocol key.",
				Category -> "General",
				Developer -> True
			},
			MethodFilePath->{
				Format->Single,
				Class->String,
				Pattern :> FilePathP,
				Description->"The file path of the folder containing the protocol file which contains the run parameters.",
				Category->"General",
				Developer->True
			},
			MethodFileName->{
				Format->Single,
				Class->String,
				Pattern :> _String,
				Description->"The file name of the folder containing the protocol file which contains the run parameters.",
				Category->"General",
				Developer->True
			},
			MethodFile->{
				Format->Single,
				Class->Link,
				Pattern :> _Link,
				Relation->Object[EmeraldCloudFile],
				Description->"The json file containing the run information generated for the ELISA experiment.",
				Category->"Experimental Results"
			},
			DataFilePath->{
				Format->Single,
				Class->String,
				Pattern :> FilePathP,
				Description->"The file path of the folder containing the data file generated at the conclusion of the experiment.",
				Category->"General",
				Developer->True
			},
			DataFileNames->{
				Format->Multiple,
				Class->String,
				Pattern :> _String,
				Description->"The file names of the data file generated at the conclusion of the experiment.",
				Category->"General",
				Developer->True
			},
			PrereadDataFileNames->{
				Format->Multiple,
				Class->String,
				Pattern :> _String,
				Description->"The file names of the preread data file generated during the substrate incubation, before quenched by the Stopsolution.",
				Category->"General",
				Developer->True
			},
(*			PooledPrereadDataFileNames->{*)
(*				Format -> Multiple,*)
(*				Class -> Expression,*)
(*				Pattern :> {ObjectReferenceP[Object[Sample]]..},*)
(*				Description->"For each member of PrereadTimepoints, the file names of the preread data file generated during the substrate incubation, before quenched by the Stopsolution.",*)
(*				Category->"General",*)
(*				IndexMatching->PrereadTimepoints,*)
(*				Developer->True*)
(*			},*)
			DataFiles->{
				Format->Multiple,
				Class->Link,
				Pattern :> _Link,
				Relation->Object[EmeraldCloudFile],
				Description->"The txt files containing the experiment data generated by the ELISA instrument.",
				Category->"Experimental Results"
			},
			PrereadDataFiles->{
				Format->Multiple,
				Class->Link,
				Pattern :> _Link,
				Relation->Object[EmeraldCloudFile],
				Description->"For each member of PrereadTimepoints, the txt files containing the experiment data generated by the ELISA instrument.",
				Category->"Experimental Results"
			},
			ELISALiquidHandlingLog -> {
				Format -> Single,
				Class -> Link,
				Pattern :> _Link,
				Relation -> Object[EmeraldCloudFile],
				Description -> "The instrumentation trace file that monitored and recorded the execution of this robotic liquid handling by the ELISA Instrument.",
				Category -> "General"
			},
			ELISALiquidHandlingLogPath -> {
				Format -> Single,
				Class -> String,
				Pattern :> FilePathP,
				Description -> "The file path of the instrumentation trace file that monitored and recorded the execution of this robotic liquid handling by the ELISA Instrument.",
				Category -> "General",
				Developer -> True
			},
			Method->{
				Format->Single,
				Description->"Defines the type of ELISA experiment to be performed. Types include DirectELISA, IndirectELISA, DirectSandwichELISA, IndirectSandwichELISA, DirectCompetitiveELISA, IndirectCompetitiveELISA, and FastELISA. In a DirectELISA experiment, the Sample is coated on the ELISAPlate, and then a primary antibody is used to detect the target antigen. In a DirectSandwichELISA experiment, a capture antibody is coated onto the ELISAPlate to pull down the target antigen from the sample. Then primary antibody is used to detect the target antigen. In a DirectCompetitiveELISA and IndirectCompetitiveELISA experiment, a reference antigen is used to coat the ELISAPlate. Samples are incubated with the primary antibody. Then, when the Sample-Antibody-Complex solution is loaded on the ELISAPlate, the remaining free primary antibody binds to the reference antigen. In a FastELISA experiment, a coating antibody against a small protein tag is coated to the ELISAPlate. A capture antibody containing this small tag and a primary antibody for antigen detection is incubated with the sample to form a CaptureAntibody-TargetAntigen-PrimaryAntibody complex. Then this complex is pulled down by the coating antibody to the surface of the plate. Compared with the Direct methods where the primary antibody is conjugated with an enzyme (such as Horse Radish Peroxidase/HRP or Alkaline Phosphatas/AP) for detection, in Indirect methods a secondary antibody is, instead, conjugated with this enzyme. During Indirect methods, an additional step of SecondaryAntibody incubation is added to the corresponding Direct methods.",
				Pattern:>ELISAMethodP,
				Class->Expression,
				Category->"General"
			},

			TargetAntigens->{
				Format->Multiple,
				Description->"For each member of SamplesIn, the Analyte molecule(e.g., peptide, protein, and hormone) detected and quantified in the samples by Antibodies in the ELISA experiment. This option is used to automatically set sample Antibodies and the corresponding experiment conditions of Standards and Blanks.",
				Pattern:>ObjectP[Model[Molecule]],
				Class->Link,
				Relation->Model[Molecule],
				Category->"General",
				IndexMatching->SamplesIn
			},
			WashingBuffer->{
				Format->Single,
				Description->"The solution used to rinse off unbound molecules from the assay plate.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Model[Sample]|Object[Sample],
				Category->"General"
			},
			SampleAssemblyPrimitives->{
				Format->Multiple,
				Class->Expression,
				Pattern :> SampleManipulationP,
				Description->"A set of SampleManipulation instructions specifying the dilution, spiking, and antibody mixings of Samples, Standards, and Blanks.",
				Category->"General"
			},

			AntibodyAntigenDilutionPrimitives->{
				Format->Multiple,
				Class->Expression,
				Pattern :> SampleManipulationP,
				Description->"A set of SampleManipulation instructions specifying the dilution of antibodies and reference antigen using their corresponding diluents.",
				Category->"General"
			},
			CoatingPlateAssemblyPrimitives->{
				Format->Multiple,
				Class->Expression,
				Pattern :> SampleManipulationP,
				Description->"A set of SampleManipulation instructions specifying the coating of ELISAPlate and SecondaryELISAPlate.",
				Category->"General"
			},
			ELISAPrimitives->{
				Format->Multiple,
				Class->Expression,
				Pattern :> ELISAPrimitivesP,
				Description->"A set of SampleManipulation instructions specifying the blocking, immunosorbent steps, substratrate incubation, and plate reading performed in the ELISA instrument.",
				Category->"General"
			},
			SampleAssemblyProtocol->{
				Format->Single,
				Class->Link,
				Pattern :> ObjectP[Object[Protocol, SampleManipulation]],
				Relation->Object[Protocol, SampleManipulation],
				Description->"The sample manipulation protocol used for the dilution, spiking, and antibody mixings of Samples, Standards, and Blanks.",
				Category->"General"
			},
			AntibodyAntigenDilutionProtocol->{
				Format->Single,
				Class->Link,
				Pattern :> ObjectP[Object[Protocol, SampleManipulation]],
				Relation->Object[Protocol, SampleManipulation],
				Description->"The sample manipulation protocol used for the dilution of antibodies and reference antigen using their corresponding diluents.",
				Category->"General"
			},
			CoatingPlateAssemblyProtocol->{
				Format->Single,
				Class->Link,
				Pattern :> ObjectP[Object[Protocol, SampleManipulation]],
				Relation->Object[Protocol, SampleManipulation],
				Description->"The sample manipulation protocol used for transfering the solutions for the coating of ELISAPlate and SecondaryELISAPlate.",
				Category->"General"
			},
			CoatingPlateIncubationProtocol->{
				Format->Single,
				Class->Link,
				Pattern :> ObjectP[Object[Protocol]],
				Relation->Object[Protocol],
				Description->"The ExperimentIncubation protocol used for the coating of ELISAPlate and SecondaryELISAPlate.",
				Category->"General"
			},
			Spikes->{
				Format->Multiple,
				Description->"For each member of SamplesIn, the Spike sample with a known concentration of analyte to be mixed with the input sample. The purpose of spiking is to perform a spike-and-recovery assessment to determine whether the ELISA can accurately test the concentration of analyte within the context of the sample.Spike-and-Recovery experiment is used to test whether the ELISA can reliably measure TargetAntigen concentration in the context of the sample. For example, if molecules in the sample inhibits the binding between the antibody and TargetAntigen, the results from the ELISA becomes inaccurate. In a Spike-and-Recovery experiment,an aliquote of a sample (in a different wells than the main ELISA experiment) is mixed with Spike (a sample containing known amount of TargetAntigen, the Standard sample can be used). ELISA is performed on the Sample alone (also called Neat Sample) and the Spiked Sample at the same time, where the Spike concentration in the sample can be measured. This measured Spike concentration can be then compared with the known Spike concentration. Typically a 20% difference between measured Spike concentration and the known Spike concentration is acceptable. Spiked sample can be further diluted to perform linearity-of-dilution assessment.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Model[Sample]|Object[Sample],
				Category->"Sample Preparation",
				IndexMatching->SamplesIn
			},
			SpikeDilutionFactors->{
				Format->Multiple,
				Description->"For each member of SamplesIn, the ratio of dilution by which the Spike is mixed with the input sample before further dilution is performed.",
				Pattern:>RangeP[0,1],
				Class->Real,
				Category->"Sample Preparation",
				IndexMatching->SamplesIn
			},
			SpikeStorageConditions->{
				Format->Multiple,
				Description->"For each member of SamplesIn, the condition under which the unused portion of Spike stock sample should be stored after the protocol is completed.",
				Pattern:>SampleStorageTypeP|Disposal,
				Class->Expression,
				Category->"Antibody Antigen Preparation",
				IndexMatching->SamplesIn
			},
			SampleDilutionCurves->{
				Format->Multiple,
				Description->"For each member of SamplesIn, the multi-step dilutions of (spiked) sample, presented as {Sample transfer volume, Diluent transfer volume}.",
				Pattern:>{{GreaterEqualP[0Microliter], GreaterEqualP[0Microliter]}..},
				Class->Expression,
				Category->"Sample Preparation",
				IndexMatching->SamplesIn
			},
			SampleSerialDilutionCurves->{
				Format->Multiple,
				Description->"For each member of SamplesIn, the multi-step serial dilutions of (spiked) sample, presented as {Transfer volume of previous dilution, Diluent transfer volume}.",
				Pattern:>{{GreaterEqualP[0Microliter], GreaterEqualP[0Microliter]}..},
				Class->Expression,
				Category->"Sample Preparation",
				IndexMatching->SamplesIn
			},
			SampleDiluent->{
				Format->Single,
				Description->"The buffer used to perform multiple dilutions of samples or spiked samples.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Model[Sample]|Object[Sample],
				Category->"Sample Preparation"
			},
			CoatingAntibodies->{
				Format->Multiple,
				Description->"For each member of SamplesIn, the sample containing the antibody that is used in for coating in FastELISA.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Model[Sample]|Object[Sample],
				Category->"Antibody Antigen Preparation",
				IndexMatching->SamplesIn
			},
			CoatingAntibodyDilutionFactors->{
				Format->Multiple,
				Description->"For each member of SamplesIn, the ratio of dilution of CoatingAntibody. CoatingAntibody is diluted with CoatingBuffer. Either AssayConcentration or DilutionFactor should be provided but not both.",
				Pattern:>RangeP[0,1],
				Class->Real,
				Category->"Antibody Antigen Preparation",
				IndexMatching->SamplesIn
			},
			CoatingAntibodyVolumes->{
				Format->Multiple,
				Description->"For each member of SamplesIn, the volume of Coating added into the corresponding well of the assay plate. CoatingAntibody is diluted with CoatingBuffer. AntibodyVolume is used as an alternative to AssayConcentration or DilutionFactor. During antibody preparation, a master mix will be made for antibody dilution, and the diluted Antibodies will be aliquoted into each well.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Antibody Antigen Preparation",
				IndexMatching->SamplesIn
			},
			CoatingAntibodyDiluent->{
				Format->Single,
				Description->"The buffer used to dilute CoatingAntibodies.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Model[Sample]|Object[Sample],
				Category->"Antibody Antigen Preparation"
			},
			CoatingAntibodyStorageConditions->{
				Format->Multiple,
				Description->"For each member of SamplesIn, the condition under which the unused portion of Coating Antibody stock sample should be stored after the protocol is completed.",
				Pattern:>SampleStorageTypeP|Disposal,
				Class->Expression,
				Category->"Antibody Antigen Preparation",
				IndexMatching->SamplesIn
			},
			CaptureAntibodies->{
				Format->Multiple,
				Description->"For each member of SamplesIn, the sample containing the antibody that is used to pull down the antigen from sample solution to the surface of the assay plate wll in DirectSandwichELISA, IndirectSandwichELISA, and FastELISA.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Model[Sample]|Object[Sample],
				Category->"Antibody Antigen Preparation",
				IndexMatching->SamplesIn
			},
			CaptureAntibodyDilutionFactors->{
				Format->Multiple,
				Description->"For each member of SamplesIn, the ratio of dilution of CaptureAntibody. For DirectSandwichELISA and IndirectSandwichELISA, CaptureAntibody is diluted with CoatingBuffer. For FastELISA, CaptureAntibody is diluted in the corresponding sample. Either AssayConcentration or DilutionFactor should be provided but not both.",
				Pattern:>RangeP[0,1],
				Class->Real,
				Category->"Antibody Antigen Preparation",
				IndexMatching->SamplesIn
			},
			CaptureAntibodyVolumes->{
				Format->Multiple,
				Description->"For each member of SamplesIn, the volume of CaptureAntibody added into the corresponding well of the assay plate. AntibodyVolume is used as an alternative to AssayConcentration or DilutionFactor. During antibody preparation, a master mix will be made for antibody dilution, and the diluted Antibodies will be aliquoted into each well.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Antibody Antigen Preparation",
				IndexMatching->SamplesIn
			},
			CaptureAntibodyDiluent->{
				Format->Single,
				Description->"The buffer used to dilute CaptureAntibodies. If Null, CaptureAntibody will be diluted into the corresponding Sample.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Model[Sample]|Object[Sample],
				Category->"Antibody Antigen Preparation"
			},
			CaptureAntibodyStorageConditions->{
				Format->Multiple,
				Description->"For each member of SamplesIn, the condition under which the unused portion of Capture Antibody stock sample should be stored after the protocol is completed.",
				Pattern:>SampleStorageTypeP|Disposal,
				Class->Expression,
				Category->"Antibody Antigen Preparation",
				IndexMatching->SamplesIn
			},
			ReferenceAntigens->{
				Format->Multiple,
				Description->"For each member of SamplesIn, the SAMPLE containing the antigen that is used in DirectCompetitiveELISA or IndirectCompetitiveELISA. The ReferenceAntigen competes with sample antigen for the binding of the PrimaryAntibody. Reference Antigen is sometimes also referred to as Inhibitor Antigen.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Model[Sample]|Object[Sample],
				Category->"Antibody Antigen Preparation",
				IndexMatching->SamplesIn
			},
			ReferenceAntigenDilutionFactors->{
				Format->Multiple,
				Description->"For each member of SamplesIn, the ratio of dilution of ReferenceAntigen. The ReferenceAntigenSample is always diluted in CoatingBuffer. Either AssayConcentration or DilutionFactor should be provided but not both.",
				Pattern:>RangeP[0,1],
				Class->Real,
				Category->"Antibody Antigen Preparation",
				IndexMatching->SamplesIn
			},
			ReferenceAntigenVolumes->{
				Format->Multiple,
				Description->"For each member of SamplesIn, the volume of ReferenceAntigen added into the corresponding well of the assay plate. ReferenceAntigenVolume is used as an alternative to AssayConcentration or DilutionFactor. During antibody preparation, a master mix will be made for antibody dilution, and the diluted Antibodies will be aliquoted into each well.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Antibody Antigen Preparation",
				IndexMatching->SamplesIn
			},
			ReferenceAntigenDiluent->{
				Format->Single,
				Description->"The buffer used to dilute the ReferenceAntigen. If Null, ReferenceAntigen will be mixed with the corresponding sample.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Model[Sample]|Object[Sample],
				Category->"Antibody Antigen Preparation"
			},
			ReferenceAntigenStorageConditions->{
				Format->Multiple,
				Description->"For each member of SamplesIn, the condition under which the unused portion of Reference Antigen stock sample should be stored after the protocol is completed.",
				Pattern:>SampleStorageTypeP|Disposal,
				Class->Expression,
				Category->"Antibody Antigen Preparation",
				IndexMatching->SamplesIn
			},
			PrimaryAntibodies->{
				Format->Multiple,
				Description->"For each member of SamplesIn, the antibody that directly binds with the TargetAntigen (analyte).",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Model[Sample]|Object[Sample],
				Category->"Antibody Antigen Preparation",
				IndexMatching->SamplesIn
			},
			PrimaryAntibodyDilutionFactors->{
				Format->Multiple,
				Description->"For each member of SamplesIn, the ratio of dilution of PrimaryAntibody. For DirectELISA, IndirectELISA, DirectSandwichELISA, and IndirectSandwichELISA, the antibody is diluted with ImmunosorbentBuffer. For DirectCompetitiveELISA, IndirectCompetitiveELISA, and FastELISA, the antibody is diluted in the corresponding sample. Either AssayConcentration or DilutionFactor should be provided but not both.",
				Pattern:>RangeP[0,1],
				Class->Real,
				Category->"Antibody Antigen Preparation",
				IndexMatching->SamplesIn
			},
			PrimaryAntibodyVolumes->{
				Format->Multiple,
				Description->"For each member of SamplesIn, the volume of PrimaryAntibody added into the corresponding well of the assay plate. AntibodyVolume is used as an alternative to AssayConcentration or DilutionFactor. During antibody preparation, a master mix will be made for antibody dilution, and the diluted Antibodies will be aliquoted into each well.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Antibody Antigen Preparation",
				IndexMatching->SamplesIn
			},
			PrimaryAntibodyDiluent->{
				Format->Single,
				Description->"The buffer used to dilute PrimaryAntibodies.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Model[Sample]|Object[Sample],
				Category->"Antibody Antigen Preparation"
			},
			PrimaryAntibodyStorageConditions->{
				Format->Multiple,
				Description->"For each member of SamplesIn, the condition under which the unused portion of Primary Antibody stock sample should be stored after the protocol is completed.",
				Pattern:>SampleStorageTypeP|Disposal,
				Class->Expression,
				Category->"Antibody Antigen Preparation",
				IndexMatching->SamplesIn
			},
			SecondaryAntibodies->{
				Format->Multiple,
				Description->"For each member of SamplesIn, the antibody that binds to the primary antibody.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Model[Sample]|Object[Sample],
				Category->"Antibody Antigen Preparation",
				IndexMatching->SamplesIn
			},
			SecondaryAntibodyDilutionFactors->{
				Format->Multiple,
				Description->"For each member of SamplesIn, the ratio of dilution of SecondaryAntibody. SecondaryAntibody is always diluted in the ImmunosorbentBuffer. Either AssayConcentration or DilutionFactor should be provided but not both.",
				Pattern:>RangeP[0,1],
				Class->Real,
				Category->"Antibody Antigen Preparation",
				IndexMatching->SamplesIn
			},
			SecondaryAntibodyVolumes->{
				Format->Multiple,
				Description->"For each member of SamplesIn, the volume of SecondaryAntibody added into the corresponding well of the assay plate. AntibodyVolume is used as an alternative to AssayConcentration or DilutionFactor. During antibody preparation, a master mix will be made for antibody dilution, and the diluted Antibodies will be aliquoted into each well.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Antibody Antigen Preparation",
				IndexMatching->SamplesIn
			},
			SecondaryAntibodyDiluent->{
				Format->Single,
				Description->"The buffer used to dilute CoatingAntibodies.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Model[Sample]|Object[Sample],
				Category->"Antibody Antigen Preparation"
			},
			SecondaryAntibodyStorageConditions->{
				Format->Multiple,
				Description->"For each member of SamplesIn, the condition under which the unused portion of Secondary Antibody stock sample should be stored after the protocol is completed.",
				Pattern:>SampleStorageTypeP|Disposal,
				Class->Expression,
				Category->"Antibody Antigen Preparation",
				IndexMatching->SamplesIn
			},
			SampleAntibodyComplexIncubation->{
				Format->Single,
				Description->"Indicates if the pre-mixed sample and Antibodies should be incubated before loaded into the assay plate.",
				Pattern:>Alternatives[BooleanP],
				Class->Expression,
				Category->"General"
			},
			SampleAntibodyComplexIncubationTime->{
				Format->Single,
				Description->"The duration of SampleAntibodyComplex Incubation (If needed). In DirectCompetitiveELISA and IndirectCompetitiveELISA, PrimaryAntibody is incubated with the sample. In FastELISA, PrimaryAntibody and CaptureAntibody is incubated with the sample. If Null, the prepared sample-antibody complex will be kept at 4 degree Celsius till ready to use.",
				Pattern:>RangeP[0 Minute,24 Hour],
				Class->Real,
				Units->Hour,
				Category->"Sample Antibody Complex Incubation"
			},
			SampleAntibodyComplexIncubationTemperature->{
				Format->Single,
				Description->"The temperature at which sample mixed with Antibodies are incubated. In DirectCompetitiveELISA and IndirectCompetitiveELISA, PrimaryAntibody is incubated with the sample. In FastELISA, PrimaryAntibody and CaptureAntibody is incubated with the sample. If Null, the prepared sample-antibody complex will be kept at 4 degree Celsius till ready to use.",
				Pattern:>Alternatives[Ambient,RangeP[4Celsius,50Celsius]],
				Class->Expression,
				Category->"Sample Antibody Complex Incubation"
			},
			Coating->{
				Format->Single,
				Description->"Indicates if Coating is required. Coating is a procedure to non-sepcifically adsorb protein molecules to the surface of wells of an assay plate.",
				Pattern:>Alternatives[BooleanP],
				Class->Expression,
				Category->"General"
			},
			SampleCoatingVolumes->{
				Format->Multiple,
				Description->"For each member of SamplesIn, the amount of Sample that is aliquoted into the assay plate, in order for the Sample to be adsorbed to the surface of the well.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Coating",
				IndexMatching->SamplesIn
			},
			CoatingAntibodyCoatingVolumes->{
				Format->Multiple,
				Description->"For each member of SamplesIn, the amount of diluted CoatingAntibody that is aliquoted into the assay plate, in order for the CoatingAntibody to be adsorbed to the surface of the well.",
				Pattern:>RangeP[0 Microliter,300 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Coating",
				IndexMatching->SamplesIn
			},
			ReferenceAntigenCoatingVolumes->{
				Format->Multiple,
				Description->"For each member of SamplesIn, the amount of ReferenceAntigen that is aliquoted into the assay plate, in order for the ReferenceAntigen to be adsorbed to the surface of the well.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Coating",
				IndexMatching->SamplesIn
			},
			CaptureAntibodyCoatingVolumes->{
				Format->Multiple,
				Description->"For each member of SamplesIn, the amount of diluted CaptureAntibody that is aliquoted into the assay plate, in order for the CaptureAntibody to be adsorbed to the surface of the well.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Coating",
				IndexMatching->SamplesIn
			},
			CoatingTemperature->{
				Format->Single,
				Description->"The temperature at which the Coating Solution is kept in the assay plate, in order for the coating molecules to be adsorbed to the surface of the well.",
				Pattern:>Alternatives[Ambient,RangeP[4Celsius,50Celsius]],
				Class->Expression,
				Category->"Coating"
			},
			CoatingTime->{
				Format->Single,
				Description->"The duration when the Coating Solution is kept in the assay plate, in order for the coating molecules to be adsorbed to the surface of the well.",
				Pattern:>RangeP[0 Hour,20 Hour],
				Class->Real,
				Units->Hour,
				Category->"Coating"
			},
			CoatingWashVolume->{
				Format->Single,
				Description->"The volume of WashBuffer added for to rinse off unbound molecule.",
				Pattern:>RangeP[25 Microliter,300 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Coating"
			},
			CoatingNumberOfWashes->{
				Format->Single,
				Description->"The number of washes performed after coating.",
				Pattern:>GreaterP[0],
				Class->Real,
				Category->"Coating"
			},
			Blocking->{
				Format->Single,
				Description->"Indicates if a protein solution should be incubated with the assay plate to prevent non-specific binding of molecules to the assay plate.",
				Pattern:>Alternatives[BooleanP],
				Class->Expression,
				Category->"Blocking"
			},
			BlockingBuffer->{
				Format->Single,
				Description->"The protein-containing solution used to prevent non-specific binding of antigen or antibody to the surface of the assay plate.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Model[Sample]|Object[Sample],
				Category->"Blocking"
			},
			BlockingVolumes->{
				Format->Multiple,
				Description->"For each member of SamplesIn, the amount of BlockingBuffer that is aliquoted into the appropriate wells of the assay plate, in order to prevent non-specific binding of molecules to the assay plate.",
				Pattern:>RangeP[25 Microliter,300 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Blocking",
				IndexMatching->SamplesIn
			},
			BlockingTime->{
				Format->Single,
				Description->"The duration when the Blocking Solution is kept with the assay plate, in order to prevent non-specific binding of molecules to the assay plate.",
				Pattern:>RangeP[0 Hour,20 Hour],
				Class->Real,
				Units->Hour,
				Category->"Blocking"
			},
			BlockingTemperature->{
				Format->Single,
				Description->"The duration of time when the Blocking Solution is kept with the assay plate, in order to prevent non-specific binding of molecules to the assay plate.",
				Pattern:>Alternatives[Ambient,RangeP[4Celsius,50Celsius]],
				Class->Expression,
				Category->"Blocking"
			},
			BlockingMixRate->{
				Format->Single,
				Description->"The speed at which the plate is shaken (orbitally, at a radius of 2 mm) during Blocking incubation. Mixing is not recommended particularly when incubation volume is high, in which case the options should be set to Null.",
				Pattern:>RangeP[0 RPM,1000 RPM],
				Class->Real,
				Units->RPM,
				Category->"Blocking"
			},
			BlockingWashVolume->{
				Format->Single,
				Description->"The volume of WashBuffer added after Blocking, in order to rinse off the unbound molecules from the surface of the wells.",
				Pattern:>RangeP[25 Microliter,300 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Blocking"
			},
			BlockingNumberOfWashes->{
				Format->Single,
				Description->"The number of washes performed after Blocking, in order to rinse off the unbound molecules from the surface of the wells.",
				Pattern:>GreaterP[0],
				Class->Real,
				Category->"Blocking"
			},
			SampleAntibodyComplexImmunosorbentVolumes->{
				Format->Multiple,
				Description->"For each member of SamplesIn, the volume of the SampleAntibodyComplex to be loaded on the ELISAPlate. In DirectCompetitiveELISA and IndirectCompetitiveELISA, this step enables the free primary antibody to bind to the ReferenceAntigen coated on the plate. In FastELISA, this step enables the PrimaryAntibody-TargetAntigen-CaptureAntibody complex to bind to the CoatingAntibody on the plate.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Immunosorbent Step",
				IndexMatching->SamplesIn
			},
			SampleAntibodyComplexImmunosorbentTime->{
				Format->Single,
				Description->"The duration of SampleAntibodyComplex incubation.",
				Pattern:>RangeP[0 Minute,24 Hour],
				Class->Real,
				Units->Hour,
				Category->"Immunosorbent Step"
			},
			SampleAntibodyComplexImmunosorbentTemperature->{
				Format->Single,
				Description->"The temperature of the SampleAntibodyComplex incubation.",
				Pattern:>Alternatives[Ambient,RangeP[4Celsius,50Celsius]],
				Class->Expression,
				Category->"Immunosorbent Step"
			},
			SampleAntibodyComplexImmunosorbentMixRate->{
				Format->Single,
				Description->"The speed at which the plate is shaken (orbitally, at a radius of 2 mm) during SampleAntibodyComplex incubation in the ELISA Plate. Mixing is not recommended when incubation volume is higher than 200 Microliters, in which case the options should be set to Null.",
				Pattern:>RangeP[0 RPM,1000 RPM],
				Class->Real,
				Units->RPM,
				Category->"Immunosorbent Step"
			},
			SampleAntibodyComplexImmunosorbentWashVolume->{
				Format->Single,
				Description->"The volume of WashBuffer added to rinse off the unbound primary antibody after SampleAntibodyComplex incubation.",
				Pattern:>RangeP[25 Microliter,300 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Immunosorbent Step"
			},
			SampleAntibodyComplexImmunosorbentNumberOfWashes->{
				Format->Single,
				Description->"The number of rinses performed after SampleAntibodyComplex incubation.",
				Pattern:>GreaterP[0],
				Class->Real,
				Category->"Immunosorbent Step"
			},
			SampleImmunosorbentVolumes->{
				Format->Multiple,
				Description->"For each member of SamplesIn, the volume of the Sample to be loaded on the ELISAPlate for the target antigen to bind to the capture antibody in DirectSandwichELISA and IndirectSandwichELISA.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Immunosorbent Step",
				IndexMatching->SamplesIn
			},
			SampleImmunosorbentTime->{
				Format->Single,
				Description->"The duration of Sample incubation.",
				Pattern:>RangeP[0 Minute,24 Hour],
				Class->Real,
				Units->Hour,
				Category->"Immunosorbent Step"
			},
			SampleImmunosorbentTemperature->{
				Format->Single,
				Description->"The temperature of the Sample incubation.",
				Pattern:>Alternatives[Ambient,RangeP[4Celsius,50Celsius]],
				Class->Expression,
				Category->"Immunosorbent Step"
			},
			SampleImmunosorbentMixRate->{
				Format->Single,
				Description->"The speed at which the plate is shaken (orbitally, at a radius of 2 mm) during Sample incubation. Mixing is not recommended when incubation volume is higher than 200 Microliters, in which case the options should be set to Null.",
				Pattern:>RangeP[0 RPM,1000 RPM],
				Class->Real,
				Units->RPM,
				Category->"Immunosorbent Step"
			},
			SampleImmunosorbentWashVolume->{
				Format->Single,
				Description->"The volume of WashBuffer added to rinse off the unbound primary antibody after Sample incubation.",
				Pattern:>RangeP[25 Microliter,300 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Immunosorbent Step"
			},
			SampleImmunosorbentNumberOfWashes->{
				Format->Single,
				Description->"The number of rinses performed after Sample incubation.",
				Pattern:>GreaterP[0],
				Class->Real,
				Category->"Immunosorbent Step"
			},
			PrimaryAntibodyImmunosorbentVolumes->{
				Format->Multiple,
				Description->"For each member of SamplesIn, the volume of the Primary Antibody to be loaded on the ELISAPlate for immunosordent assay.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Immunosorbent Step",
				IndexMatching->SamplesIn
			},
			PrimaryAntibodyImmunosorbentTime->{
				Format->Single,
				Description->"The duration of Primary Antibody incubation.",
				Pattern:>RangeP[0 Minute,24 Hour],
				Class->Real,
				Units->Hour,
				Category->"Immunosorbent Step"
			},
			PrimaryAntibodyImmunosorbentTemperature->{
				Format->Single,
				Description->"The temperature of the Primary Antibody incubation.",
				Pattern:>Alternatives[Ambient,RangeP[4Celsius,50Celsius]],
				Class->Expression,
				Category->"Immunosorbent Step"
			},
			PrimaryAntibodyImmunosorbentMixRate->{
				Format->Single,
				Description->"The speed at which the plate is shaken (orbitally, at a radius of 2 mm) during Primary Antibody incubation. Mixing is not recommended when incubation volume is higher than 200 Microliters, in which case the options should be set to Null.",
				Pattern:>RangeP[0 RPM,1000 RPM],
				Class->Real,
				Units->RPM,
				Category->"Immunosorbent Step"
			},
			PrimaryAntibodyImmunosorbentWashVolume->{
				Format->Single,
				Description->"The volume of WashBuffer added to rinse off the unbound primary antibody after PrimaryAntibody incubation.",
				Pattern:>RangeP[25 Microliter,300 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Immunosorbent Step"
			},
			PrimaryAntibodyImmunosorbentNumberOfWashes->{
				Format->Single,
				Description->"The number of rinses performed after PrimaryAntibody incubation.",
				Pattern:>GreaterP[0],
				Class->Real,
				Category->"Immunosorbent Step"
			},
			SecondaryAntibodyImmunosorbentVolumes->{
				Format->Multiple,
				Description->"For each member of SamplesIn, the volume of the Secondary Antibody to be loaded on the ELISAPlate for immunosordent assay.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Immunosorbent Step",
				IndexMatching->SamplesIn
			},
			SecondaryAntibodyImmunosorbentTime->{
				Format->Single,
				Description->"The duration of Secondary Antibody incubation.",
				Pattern:>RangeP[0 Minute,24 Hour],
				Class->Real,
				Units->Hour,
				Category->"Immunosorbent Step"
			},
			SecondaryAntibodyImmunosorbentTemperature->{
				Format->Single,
				Description->"The temperature of the Secondary Antibody incubation.",
				Pattern:>Alternatives[Ambient,RangeP[4Celsius,50Celsius]],
				Class->Expression,
				Category->"Immunosorbent Step"
			},
			SecondaryAntibodyImmunosorbentMixRate->{
				Format->Single,
				Description->"The speed at which the plate is shaken (orbitally, at a radius of 2 mm) during Secondary Antibody incubation. Mixing is not recommended when incubation volume is higher than 200 Microliters, in which case the options should be set to Null.",
				Pattern:>RangeP[0 RPM,1000 RPM],
				Class->Real,
				Units->RPM,
				Category->"Immunosorbent Step"
			},
			SecondaryAntibodyImmunosorbentWashVolume->{
				Format->Single,
				Description->"The volume of WashBuffer added to rinse off the unbound Secondary antibody after SecondaryAntibody incubation.",
				Pattern:>RangeP[25 Microliter,300 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Immunosorbent Step"
			},
			SecondaryAntibodyImmunosorbentNumberOfWashes->{
				Format->Single,
				Description->"The number of rinses performed after SecondaryAntibody incubation.",
				Pattern:>GreaterP[0],
				Class->Real,
				Category->"Immunosorbent Step"
			},
			SubstrateSolutions->{
				Format->Multiple,
				Description->"For each member of SamplesIn, defines the one-part substrate solution such as PNPP.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Model[Sample]|Object[Sample],
				Category->"Detection",
				IndexMatching->SamplesIn
			},

			StopSolutions->{
				Format->Multiple,
				Description->"For each member of SamplesIn, the reagent that is used to stop the reaction between the enzyme and its substrate.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Model[Sample]|Object[Sample],
				Category->"Detection",
				IndexMatching->SamplesIn
			},
			SubstrateSolutionVolumes->{
				Format->Multiple,
				Description->"For each member of SamplesIn, the volume of substrate to be added to the corresponding well.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Detection",
				IndexMatching->SamplesIn
			},
			StopSolutionVolumes->{
				Format->Multiple,
				Description->"For each member of SamplesIn, the volume of StopSolution to be added to the corresponding well.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Detection",
				IndexMatching->SamplesIn
			},
			SubstrateIncubationTime->{
				Format->Single,
				Description->"The time during which the colorimetric reaction occurs.",
				Pattern:>RangeP[0 Minute,24 Hour],
				Class->Real,
				Units->Hour,
				Category->"Detection"
			},
			SubstrateIncubationTemperature->{
				Format->Single,
				Description->"The temperature of the Substrate incubation, in order for the detection reaction to take place where the antibody-conjugated enzyme (such as Horseradish Peroxidase or Alkaline Phosphatase) catalyzes the colorimetric reaction.",
				Pattern:>Alternatives[Ambient,RangeP[4Celsius,50Celsius]],
				Class->Expression,
				Category->"Detection"
			},
			SubstrateIncubationMixRate->{
				Format->Single,
				Description->"The speed at which the plate is shaken (orbitally, at a radius of 2 mm) during Substrate incubation. Mixing is not recommended when incubation volume is higher than 200 Microliters, in which case the options should be set to Null.",
				Pattern:>RangeP[0 RPM,1000 RPM],
				Class->Real,
				Units->RPM,
				Category->"Detection"
			},
			PrereadTimepoints->{
				Format->Multiple,
				Class->Real,
				Pattern:>GreaterP[0 Minute],
				Units->Minute,
				Description->"The list of time points when the absorbance intensities were recorded at PrereadAbsorbanceWavelengths during the preread process.",
				Category -> "General"
			},
			PrereadAbsorbanceWavelengths->{
				Format->Multiple,
				Description->"The wavelength used to detect the absorbance of light produced by colorimetric reaction before the sample is quenched by the StopSolutions.",
				Pattern:>GreaterP[0 Nanometer],
				Class->Real,
				Units->Nanometer,
				Category->"Detection"
			},
			AbsorbanceWavelengths->{
				Format->Multiple,
				Description->"The wavelength used to detect the absorbance of light by the product of the detection reaction.",
				Pattern:>GreaterP[0 Nanometer],
				Class->Real,
				Units->Nanometer,
				Category->"Detection"
			},
			SignalCorrection->{
				Format->Single,
				Description->"The absorbance reading that is used to eliminate the interference of background absorption (such as from ELISAPlate material and dust). If True, a reading at 620 nm is read at the same time of the AbsorbanceWavelength. The correction is done by subtracting the reading at 620nm from that at the AbsorbanceWavelength.",
				Pattern:>Alternatives[BooleanP],
				Class->Expression,
				Category->"Detection"
			},
			Standards->{
				Format->Multiple,
				Description->"For each member of Standards, a sample containing known amount of TargetAntigen molecule. Standard is used for the quantification of Standard analyte.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Model[Sample]|Object[Sample],
				Category->"Standard",
				IndexMatching->Standards
			},
			StandardTargetAntigens->{
				Format->Multiple,
				Description->"For each member of Standards, the Analyte molecule(e.g., peptide, protein, and hormone) detected and quantified in the samples by Antibodies in the ELISA experiment. This option is used to automatically set sample Antibodies and the corresponding experiment conditions of Standards and Blanks.",
				Pattern:>ObjectP[Model[Molecule]],
				Class->Link,
				Relation->Model[Molecule],
				Category->"Standard",
				IndexMatching->Standards
			},
			StandardDilutionCurves->{
				Format->Multiple,
				Description->"For each member of Standards, the multi-step dilutions of standards, presented as {Standard transfer volume, Diluent transfer volume}.",
				Pattern:>{{GreaterEqualP[0Microliter], GreaterEqualP[0Microliter]}..},
				Class->Expression,
				Category->"Standard",
				IndexMatching->Standards
			},
			StandardSerialDilutionCurves->{
				Format->Multiple,
				Description->"For each member of Standards, the multi-step serial dilutions of standards, presented as {Transfer volume of previous dilution, Diluent transfer volume}.",
				Pattern:>{{GreaterEqualP[0Microliter], GreaterEqualP[0Microliter]}..},
				Class->Expression,
				Category->"Standard",
				IndexMatching->Standards
			},
			StandardDiluent->{
				Format->Single,
				Description->"The buffer used to dilute Standards.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Model[Sample]|Object[Sample],
				Category->"Standard"
			},
			StandardStorageConditions->{
				Format->Multiple,
				Description->"For each member of Standards, the condition under which the unused portion of Standardstock sample should be stored after the protocol is completed.",
				Pattern:>SampleStorageTypeP|Disposal,
				Class->Expression,
				Category->"Standard",
				IndexMatching->Standards
			},
			StandardCoatingAntibodies->{
				Format->Multiple,
				Description->"For each member of Standards, the sample containing the antibody that is used in for coating in FastELISA.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Model[Sample]|Object[Sample],
				Category->"Standard",
				IndexMatching->Standards
			},
			StandardCoatingAntibodyDilutionFactors->{
				Format->Multiple,
				Description->"For each member of Standards, the ratio of dilution of StandardCoatingAntibody. StandardCoatingAntibody is diluted with CoatingBuffer. Either AssayConcentration or DilutionFactor should be provided but not both.",
				Pattern:>RangeP[0,1],
				Class->Real,
				Category->"Standard",
				IndexMatching->Standards
			},
			StandardCoatingAntibodyVolumes->{
				Format->Multiple,
				Description->"For each member of Standards, the volume of Coating added into the corresponding well of the assay plate. CoatingAntibody is diluted with CoatingBuffer. AntibodyVolume is used as an alternative to AssayConcentration or DilutionFactor. During antibody preparation, a master mix will be made for antibody dilution, and the diluted Antibodies will be aliquoted into each well.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Standard",
				IndexMatching->Standards
			},
			(*)StandardCoatingAntibodyStorageConditions->{
				Format->Multiple,
				Description->"For each member of Standards, the condition under which the unused portion of Standard Coating Antibody stock sample should be stored after the protocol is completed.",
				Pattern:>SampleStorageTypeP|Disposal,
				Class->Expression,
				Category->"Standard",
				IndexMatching->Standards
			},*)
			StandardCaptureAntibodies->{
				Format->Multiple,
				Description->"For each member of Standards, the sample containing the antibody that is used to pull down the antigen from sample solution to the plate in DirectSandwichELISA, IndirectSandwichELISA, and FastELISA.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Model[Sample]|Object[Sample],
				Category->"Standard",
				IndexMatching->Standards
			},
			StandardCaptureAntibodyDilutionFactors->{
				Format->Multiple,
				Description->"For each member of Standards, the ratio of dilution of StandardCaptureAntibody. For DirectSandwichELISA and IndirectSandwichELISA, StandardCaptureAntibody is diluted with CoatingBuffer. For FastELISA, StandardCaptureAntibody is diluted in the corresponding sample. Either AssayConcentration or DilutionFactor should be provided but not both.",
				Pattern:>RangeP[0,1],
				Class->Real,
				Category->"Standard",
				IndexMatching->Standards
			},
			StandardCaptureAntibodyVolumes->{
				Format->Multiple,
				Description->"For each member of Standards, the volume of CaptureAntibody added into the corresponding well of the assay plate. AntibodyVolume is used as an alternative to AssayConcentration or DilutionFactor. During antibody preparation, a master mix will be made for antibody dilution, and the diluted Antibodies will be aliquoted into each well.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Standard",
				IndexMatching->Standards
			},
			(*)StandardCaptureAntibodyStorageConditions->{
				Format->Multiple,
				Description->"For each member of Standards, the condition under which the unused portion of Capture Antibody stock sample should be stored after the protocol is completed.",
				Pattern:>SampleStorageTypeP|Disposal,
				Class->Expression,
				Category->"Standard",
				IndexMatching->Standards
			},*)
			StandardReferenceAntigens->{
				Format->Multiple,
				Description->"For each member of Standards, the SAMPLE containing the antigen that is used in DirectCompetitiveELISA or InirectCompetitiveELISA. The StandardReferenceAntigen competes with sample antigen for the binding of the StandardPrimaryAntibody. Reference Antigen is sometimes also referred to as Inhibitor Antigen.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Model[Sample]|Object[Sample],
				Category->"Standard",
				IndexMatching->Standards
			},
			StandardReferenceAntigenDilutionFactors->{
				Format->Multiple,
				Description->"For each member of Standards, the ratio of dilution of StandardReferenceAntigen. For DirectCompetitiveELISA and IndirectCompetitiveELISA, the StandardReferenceAntigenStandard is diluted in CoatingBuffer. Either AssayConcentration or DilutionFactor should be provided but not both.",
				Pattern:>RangeP[0,1],
				Class->Real,
				Category->"Standard",
				IndexMatching->Standards
			},
			StandardReferenceAntigenVolumes->{
				Format->Multiple,
				Description->"For each member of Standards, the volume of ReferenceAntigen added into the corresponding well of the assay plate. ReferenceAntigenVolume is used as an alternative to AssayConcentration or DilutionFactor. During antibody preparation, a master mix will be made for antibody dilution, and the diluted Antibodies will be aliquoted into each well.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Standard",
				IndexMatching->Standards
			},
			(*)StandardReferenceAntigenStorageConditions->{
				Format->Multiple,
				Description->"For each member of Standards, the condition under which the unused portion of Reference Antigen stock sample should be stored after the protocol is completed.",
				Pattern:>SampleStorageTypeP|Disposal,
				Class->Expression,
				Category->"Standard",
				IndexMatching->Standards
			},*)
			StandardPrimaryAntibodies->{
				Format->Multiple,
				Description->"For each member of Standards, the antibody that directly binds with the analyte.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Model[Sample]|Object[Sample],
				Category->"Standard",
				IndexMatching->Standards
			},
			StandardPrimaryAntibodyDilutionFactors->{
				Format->Multiple,
				Description->"For each member of Standards, the ratio of dilution of StandardPrimaryAntibody. For DirectELISA, IndirectELISA, DirectSandwichELISA, and IndirectSandwichELISA, the antibody is diluted with ImmunosorbentBuffer. For DirectCompetitiveELISA, IndirectCompetitiveELISA, and FastELISA, the antibody is diluted in the corresponding sample. Either AssayConcentration or DilutionFactor should be provided but not both.",
				Pattern:>RangeP[0,1],
				Class->Real,
				Category->"Standard",
				IndexMatching->Standards
			},
			StandardPrimaryAntibodyVolumes->{
				Format->Multiple,
				Description->"For each member of Standards, the volume of PrimaryAntibody added into the corresponding well of the assay plate. AntibodyVolume is used as an alternative to AssayConcentration or DilutionFactor. During antibody preparation, a master mix will be made for antibody dilution, and the diluted Antibodies will be aliquoted into each well.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Standard",
				IndexMatching->Standards
			},
			(*)StandardPrimaryAntibodyStorageConditions->{
				Format->Multiple,
				Description->"For each member of Standards, the condition under which the unused portion of Primary Antibody stock sample should be stored after the protocol is completed.",
				Pattern:>SampleStorageTypeP|Disposal,
				Class->Expression,
				Category->"Standard",
				IndexMatching->Standards
			},*)
			StandardSecondaryAntibodies->{
				Format->Multiple,
				Description->"For each member of Standards, the antibody that binds to the primary antibody.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Model[Sample]|Object[Sample],
				Category->"Standard",
				IndexMatching->Standards
			},
			StandardSecondaryAntibodyDilutionFactors->{
				Format->Multiple,
				Description->"For each member of Standards, the ratio of dilution of StandardSecondaryAntibody. StandardSecondaryAntibody is always diluted in the ImmunosorbentBuffer. Either AssayConcentration or DilutionFactor should be provided but not both.",
				Pattern:>RangeP[0,1],
				Class->Real,
				Category->"Standard",
				IndexMatching->Standards
			},
			StandardSecondaryAntibodyVolumes->{
				Format->Multiple,
				Description->"For each member of Standards, the volume of SecondaryAntibody added into the corresponding well of the assay plate. AntibodyVolume is used as an alternative to AssayConcentration or DilutionFactor. During antibody preparation, a master mix will be made for antibody dilution, and the diluted Antibodies will be aliquoted into each well.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Standard",
				IndexMatching->Standards
			},
			(*)StandardSecondaryAntibodyStorageConditions->{
				Format->Multiple,
				Description->"For each member of Standards, the condition under which the unused portion of Secondary Antibody stock sample should be stored after the protocol is completed.",
				Pattern:>SampleStorageTypeP|Disposal,
				Class->Expression,
				Category->"Standard",
				IndexMatching->Standards
			},*)
			StandardCoatingVolumes->{
				Format->Multiple,
				Description->"For each member of Standards, the amount of Standard that is aliquoted into the ELISAPlate, in order for the Standard to be adsorbed to the surface of the well.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Standard",
				IndexMatching->Standards
			},
			StandardReferenceAntigenCoatingVolumes->{
				Format->Multiple,
				Description->"For each member of Standards, the amount of ReferenceAntigen that is aliquoted into the assay plate, in order for the ReferenceAntigen to be adsorbed to the surface of the well.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Standard",
				IndexMatching->Standards
			},
			StandardCoatingAntibodyCoatingVolumes->{
				Format->Multiple,
				Description->"For each member of Standards, the amount of diluted CoatingAntibody that is aliquoted into the ELISAPlate, in order for the CoatingAntibody to be adsorbed to the surface of the well.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Standard",
				IndexMatching->Standards
			},
			StandardCaptureAntibodyCoatingVolumes->{
				Format->Multiple,
				Description->"For each member of Standards, the amount of diluted CaptureAntibody that is aliquoted into the ELISAPlate, in order for the CaptureAntibody to be adsorbed to the surface of the well.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Coating",
				IndexMatching->Standards
			},
			StandardBlockingVolumes->{
				Format->Multiple,
				Description->"For each member of Standards, the amount of BlockingBuffer that is aliquoted into the appropriate wells of the ELISAPlate.",
				Pattern:>RangeP[0 Microliter,300 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Standard",
				IndexMatching->Standards
			},
			StandardAntibodyComplexImmunosorbentVolumes->{
				Format->Multiple,
				Description->"For each member of Standards, the volume of the StandardAntibodyComplex to be loaded on the ELISAPlate. In DirectCompetitiveELISA and IndirectCompetitiveELISA, this step enables the free primary antibody to bind to the ReferenceAntigen coated on the plate. In FastELISA, this step enables the PrimaryAntibody-TargetAntigen-CaptureAntibody complex to bind to the CoatingAntibody on the plate.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Standard",
				IndexMatching->Standards
			},
			StandardImmunosorbentVolumes->{
				Format->Multiple,
				Description->"For each member of Standards, the volume of the Standard to be loaded on the ELISAPlate for the target antigen to bind to the capture antibody in DirectSandwichELISA and IndirectSandwichELISA.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Standard",
				IndexMatching->Standards
			},
			StandardPrimaryAntibodyImmunosorbentVolumes->{
				Format->Multiple,
				Description->"For each member of Standards, the volume of the Primary Antibody to be loaded on the ELISAPlate for Immunosorbent assay.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Standard",
				IndexMatching->Standards
			},
			StandardSecondaryAntibodyImmunosorbentVolumes->{
				Format->Multiple,
				Description->"For each member of Standards, the volume of the Secondary Antibody to be loaded on the ELISAPlate for immunosordent assay.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Standard",
				IndexMatching->Standards
			},
			StandardSubstrateSolutions->{
				Format->Multiple,
				Description->"For each member of Standards, defines the one-part substrate solution such as PNPP.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Model[Sample]|Object[Sample],
				Category->"Standard",
				IndexMatching->Standards
			},
			StandardStopSolutions->{
				Format->Multiple,
				Description->"For each member of Standards, the reagent that is used to stop the reacelisaMasterSwitchtion between the enzyme and its substrate.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Model[Sample]|Object[Sample],
				Category->"Standard",
				IndexMatching->Standards
			},
			StandardSubstrateSolutionVolumes->{
				Format->Multiple,
				Description->"For each member of Standards, the volume of substrate to be added to the corresponding well.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Standard",
				IndexMatching->Standards
			},
			StandardStopSolutionVolumes->{
				Format->Multiple,
				Description->"For each member of Standards, the volume of StopSolution to be added to the corresponding well.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Standard",
				IndexMatching->Standards
			},
			Blanks->{
				Format->Multiple,
				Description->"For each member of Blanks, a sample containing no TargetAntigen, used as a baseline or negative control for the ELISA.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Model[Sample]|Object[Sample],
				Category->"Blank",
				IndexMatching->Blanks
			},
			BlankTargetAntigens->{
				Format->Multiple,
				Description->"For each member of Blanks,The Analyte molecule(e.g., peptide, protein, and hormone) detected and quantified in the blanks by Antibodies in the ELISA experiment. This option is used to automatically set Antibodies and the corresponding experiment conditions.",
				Pattern:>ObjectP[Model[Molecule]],
				Class->Link,
				Relation->Model[Molecule],
				Category->"Blank",
				IndexMatching->Blanks
			},
			BlankStorageConditions->{
				Format->Multiple,
				Description->"For each member of Blanks, the condition under which the unused portion of Blank sample should be stored after the protocol is completed.",
				Pattern:>SampleStorageTypeP|Disposal,
				Class->Expression,
				Category->"Blank",
				IndexMatching->Blanks
			},
			BlankCoatingAntibodies->{
				Format->Multiple,
				Description->"For each member of Blanks,The sample containing the antibody that is used in for coating in FastELISA.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Model[Sample]|Object[Sample],
				Category->"Blank",
				IndexMatching->Blanks
			},
			BlankCoatingAntibodyDilutionFactors->{
				Format->Multiple,
				Description->"For each member of Blanks,The ratio of dilution of BlankCoatingAntibody. BlankCoatingAntibody is diluted with CoatingBuffer. Either AssayConcentration or DilutionFactor should be provided but not both.",
				Pattern:>RangeP[0,1],
				Class->Real,
				Category->"Blank",
				IndexMatching->Blanks
			},
			BlankCoatingAntibodyVolumes->{
				Format->Multiple,
				Description->"For each member of Blanks,The volume of Coating added into the corresponding well of the assay plate. CoatingAntibody is diluted with CoatingBuffer. AntibodyVolume is used as an alternative to AssayConcentration or DilutionFactor. During antibody preparation, a master mix will be made for antibody dilution, and the diluted Antibodies will be aliquoted into each well.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Blank",
				IndexMatching->Blanks
			},
			(*)BlankCoatingAntibodyStorageConditions->{
				Format->Multiple,
				Description->"For each member of Blanks,The condition under which the unused portion of BlankCoatingantibody stock sample should be stored after the protocol is completed.",
				Pattern:>SampleStorageTypeP|Disposal,
				Class->Expression,
				Category->"Blank",
				IndexMatching->Blanks
			},*)
			BlankCaptureAntibodies->{
				Format->Multiple,
				Description->"For each member of Blanks,The sample containing the antibody that is used to pull down the antigen from sample solution to the plate in DirectSandwichELISA, IndirectSandwichELISA, and FastELISA.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Model[Sample]|Object[Sample],
				Category->"Blank",
				IndexMatching->Blanks
			},
			BlankCaptureAntibodyDilutionFactors->{
				Format->Multiple,
				Description->"For each member of Blanks,The ratio of dilution of BlankCaptureAntibody. For DirectSandwichELISA and IndirectSandwichELISA, BlankCaptureAntibody is diluted with CoatingBuffer. For FastELISA, BlankCaptureAntibody is diluted in the corresponding sample. Either AssayConcentration or DilutionFactor should be provided but not both.",
				Pattern:>RangeP[0,1],
				Class->Real,
				Category->"Blank",
				IndexMatching->Blanks
			},
			BlankCaptureAntibodyVolumes->{
				Format->Multiple,
				Description->"For each member of Blanks,The volume of CaptureAntibody added into the corresponding well of the assay plate. AntibodyVolume is used as an alternative to AssayConcentration or DilutionFactor. During antibody preparation, a master mix will be made for antibody dilution, and the diluted Antibodies will be aliquoted into each well.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Blank",
				IndexMatching->Blanks
			},
			(*)BlankCaptureAntibodyStorageConditions->{
				Format->Multiple,
				Description->"For each member of Blanks,The condition under which the unused portion of Capture Antibody stock sample should be stored after the protocol is completed.",
				Pattern:>SampleStorageTypeP|Disposal,
				Class->Expression,
				Category->"Blank",
				IndexMatching->Blanks
			},*)
			BlankReferenceAntigens->{
				Format->Multiple,
				Description->"For each member of Blanks, the SAMPLE containing the antigen that is used in DirectCompetitiveELISA or InirectCompetitiveELISA. The BlankReferenceAntigen competes with sample antigen for the binding of the BlankPrimaryAntibody. Reference Antigen is sometimes also referred to as Inhibitor Antigen.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Model[Sample]|Object[Sample],
				Category->"Blank",
				IndexMatching->Blanks
			},
			BlankReferenceAntigenDilutionFactors->{
				Format->Multiple,
				Description->"For each member of Blanks, the ratio of dilution of BlankReferenceAntigen. For DirectCompetitiveELISA and IndirectCompetitiveELISA, the BlankReferenceAntigenBlank is diluted in CoatingBuffer. Either AssayConcentration or DilutionFactor should be provided but not both.",
				Pattern:>RangeP[0,1],
				Class->Real,
				Category->"Blank",
				IndexMatching->Blanks
			},
			BlankReferenceAntigenVolumes->{
				Format->Multiple,
				Description->"For each member of Blanks, the volume of ReferenceAntigen added into the corresponding well of the assay plate. ReferenceAntigenVolume is used as an alternative to AssayConcentration or DilutionFactor. During antibody preparation, a master mix will be made for antibody dilution, and the diluted Antibodies will be aliquoted into each well.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Blank",
				IndexMatching->Blanks
			},
			(*)BlankReferenceAntigenStorageConditions->{
				Format->Multiple,
				Description->"For each member of Blanks, the condition under which the unused portion of Reference Antigen stock sample should be stored after the protocol is completed.",
				Pattern:>SampleStorageTypeP|Disposal,
				Class->Expression,
				Category->"Blank",
				IndexMatching->Blanks
			},*)
			BlankPrimaryAntibodies->{
				Format->Multiple,
				Description->"For each member of Blanks, the antibody that directly binds with the analyte.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Model[Sample]|Object[Sample],
				Category->"Blank",
				IndexMatching->Blanks
			},
			BlankPrimaryAntibodyDilutionFactors->{
				Format->Multiple,
				Description->"For each member of Blanks, the ratio of dilution of BlankPrimaryAntibody. For DirectELISA, IndirectELISA, DirectSandwichELISA, and IndirectSandwichELISA, the antibody is diluted with ImmunosorbentBuffer. For DirectCompetitiveELISA, IndirectCompetitiveELISA, and FastELISA, the antibody is diluted in the corresponding sample. Either AssayConcentration or DilutionFactor should be provided but not both.",
				Pattern:>RangeP[0,1],
				Class->Real,
				Category->"Blank",
				IndexMatching->Blanks
			},
			BlankPrimaryAntibodyVolumes->{
				Format->Multiple,
				Description->"For each member of Blanks, the volume of PrimaryAntibody added into the corresponding well of the assay plate. AntibodyVolume is used as an alternative to AssayConcentration or DilutionFactor. During antibody preparation, a master mix will be made for antibody dilution, and the diluted Antibodies will be aliquoted into each well.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Blank",
				IndexMatching->Blanks
			},
			(*)BlankPrimaryAntibodyStorageConditions->{
				Format->Multiple,
				Description->"For each member of Blanks, the condition under which the unused portion of Primary Antibody stock sample should be stored after the protocol is completed.",
				Pattern:>SampleStorageTypeP|Disposal,
				Class->Expression,
				Category->"Blank",
				IndexMatching->Blanks
			},*)
			BlankSecondaryAntibodies->{
				Format->Multiple,
				Description->"For each member of Blanks, the antibody that binds to the primary antibody.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Model[Sample]|Object[Sample],
				Category->"Blank",
				IndexMatching->Blanks
			},
			BlankSecondaryAntibodyDilutionFactors->{
				Format->Multiple,
				Description->"For each member of Blanks, the ratio of dilution of BlankSecondaryAntibody. BlankSecondaryAntibody is always diluted in the ImmunosorbentBuffer. Either AssayConcentration or DilutionFactor should be provided but not both.",
				Pattern:>RangeP[0,1],
				Class->Real,
				Category->"Blank",
				IndexMatching->Blanks
			},
			BlankSecondaryAntibodyVolumes->{
				Format->Multiple,
				Description->"For each member of Blanks, the volume of SecondaryAntibody added into the corresponding well of the assay plate. AntibodyVolume is used as an alternative to AssayConcentration or DilutionFactor. During antibody preparation, a master mix will be made for antibody dilution, and the diluted Antibodies will be aliquoted into each well.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Blank",
				IndexMatching->Blanks
			},
			(*)BlankSecondaryAntibodyStorageConditions->{
				Format->Multiple,
				Description->"For each member of Blanks, the condition under which the unused portion of Secondary Antibody stock sample should be stored after the protocol is completed.",
				Pattern:>SampleStorageTypeP|Disposal,
				Class->Expression,
				Category->"Blank",
				IndexMatching->Blanks
			},*)
			BlankCoatingVolumes->{
				Format->Multiple,
				Description->"For each member of Blanks, the amount of Blank that is aliquoted into the ELISAPlate.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Blank",
				IndexMatching->Blanks
			},
			BlankReferenceAntigenCoatingVolumes->{
				Format->Multiple,
				Description->"For each member of Blanks, the amount of ReferenceAntigen that is aliquoted into the assay plate, in order for the ReferenceAntigen to be adsorbed to the surface of the well.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Blank",
				IndexMatching->Blanks
			},
			BlankCoatingAntibodyCoatingVolumes->{
				Format->Multiple,
				Description->"For each member of Blanks, the amount of diluted CoatingAntibody that is aliquoted into the ELISAPlate, in order for the CoatingAntibody to be adsorbed to the surface of the well.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Blank",
				IndexMatching->Blanks
			},
			BlankCaptureAntibodyCoatingVolumes->{
				Format->Multiple,
				Description->"For each member of Blanks, the amount of diluted CaptureAntibody that is aliquoted into the ELISAPlate, in order for the CaptureAntibody to be adsorbed to the surface of the well.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Blank",
				IndexMatching->Blanks
			},
			BlankBlockingVolumes->{
				Format->Multiple,
				Description->"For each member of Blanks, the amount of BlockingBuffer that is aliquoted into the appropriate wells of the ELISAPlate.",
				Pattern:>RangeP[0 Microliter,300 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Blank",
				IndexMatching->Blanks
			},
			BlankAntibodyComplexImmunosorbentVolumes->{
				Format->Multiple,
				Description->"For each member of Blanks, the volume of the BlankAntibodyComplex to be loaded on the ELISAPlate. In DirectCompetitiveELISA and IndirectCompetitiveELISA, this step enables the free primary antibody to bind to the ReferenceAntigen coated on the plate. In FastELISA, this step enables the PrimaryAntibody-TargetAntigen-CaptureAntibody complex to bind to the CoatingAntibody on the plate.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Blank",
				IndexMatching->Blanks
			},
			BlankImmunosorbentVolumes->{
				Format->Multiple,
				Description->"For each member of Blanks, the volume of the Blank to be loaded on the ELISAPlate for the target antigen to bind to the capture antibody in DirectSandwichELISA and IndirectSandwichELISA.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Blank",
				IndexMatching->Blanks
			},
			BlankPrimaryAntibodyImmunosorbentVolumes->{
				Format->Multiple,
				Description->"For each member of Blanks, the volume of the Primary Antibody to be loaded on the ELISAPlate for Immunosorbent assay.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Blank",
				IndexMatching->Blanks
			},
			BlankSecondaryAntibodyImmunosorbentVolumes->{
				Format->Multiple,
				Description->"For each member of Blanks, the volume of the Secondary Antibody to be loaded on the ELISAPlate for immunosordent assay.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Blank",
				IndexMatching->Blanks
			},
			BlankSubstrateSolutions->{
				Format->Multiple,
				Description->"For each member of Blanks, defines the one-part substrate solution such as PNPP.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Model[Sample]|Object[Sample],
				Category->"Blank",
				IndexMatching->Blanks
			},
			BlankStopSolutions->{
				Format->Multiple,
				Description->"For each member of Blanks, the reagent that is used to stop the reaction between the enzyme and its substrate.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Model[Sample]|Object[Sample],
				Category->"Blank",
				IndexMatching->Blanks
			},
			BlankSubstrateSolutionVolumes->{
				Format->Multiple,
				Description->"For each member of Blanks, the volume of substrate to be added to the corresponding well.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Blank",
				IndexMatching->Blanks
			},
			BlankStopSolutionVolumes->{
				Format->Multiple,
				Description->"For each member of Blanks, the volume of StopSolution to be added to the corresponding well.",
				Pattern:>RangeP[0 Microliter,200 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Blank",
				IndexMatching->Blanks
			},
			ELISAPlate->{
				Format->Single,
				Description->"The assay plate each sample, standard, and blank will be loaded into and the immunosorbent assay will take place. This plate can be pre-coated and blocked in advance.",
				Pattern:>ObjectP[{Model[Container,Plate],Object[Container,Plate]}],
				Class->Link,
				Relation->Model[Container,Plate]|Object[Container,Plate],
				Category->"Assay Plate"
			},
			SecondaryELISAPlate->{
				Format->Single,
				Description->"The second assay plate, if needed.",
				Pattern:>ObjectP[{Model[Container,Plate],Object[Container,Plate]}],
				Class->Link,
				Relation->Model[Container,Plate]|Object[Container,Plate],
				Category->"Assay Plate"
			},

			ELISAPlateAssignment->{
				Category->"Assay Plate",
				Description->"The arrangement of samples and their corresponding reagents in the ELISAPlate.",
				Format->Multiple,
				Class->{
					Type->Expression,
					Sample->Link,
					Spike->Link,
					SpikeDilutionFactor->Real,
					SampleDilutionFactors->Expression,
					CoatingAntibody->Link,
					CoatingAntibodyDilutionFactor->Real,
					CaptureAntibody->Link,
					CaptureAntibodyDilutionFactor->Real,
					ReferenceAntigen->Link,
					ReferenceAntigenDilutionFactor->Real,
					PrimaryAntibody->Link,
					PrimaryAntibodyDilutionFactor->Real,
					SecondaryAntibody->Link,
					SecondaryAntibodyDilutionFactor->Real,
					CoatingVolume->Real,
					BlockingVolume->Real,
					SampleAntibodyComplexImmunosorbentVolume->Real,
					SampleImmunosorbentVolume->Real,
					PrimaryAntibodyImmunosorbentVolume->Real,
					SecondaryAntibodyImmunosorbentVolume->Real,
					SubstrateSolution->Link,
					StopSolution->Link,
					SubstrateSolutionVolume->Real,
					StopSolutionVolume->Real,
					Data->Link
				},

				Pattern :> {
					Type->ELISASampleTypeP,
					Sample->ObjectP[{Model[Sample], Object[Sample]}],
					Spike->ObjectP[{Model[Sample], Object[Sample]}],
					SpikeDilutionFactor->RangeP[0,1],
					SampleDilutionFactors->{RangeP[0,1]..},
					CoatingAntibody->ObjectP[{Model[Sample], Object[Sample]}],
					CoatingAntibodyDilutionFactor->RangeP[0,1],
					CaptureAntibody->ObjectP[{Model[Sample], Object[Sample]}],
					CaptureAntibodyDilutionFactor->RangeP[0,1],
					ReferenceAntigen->ObjectP[{Model[Sample], Object[Sample]}],
					ReferenceAntigenDilutionFactor->RangeP[0,1],
					PrimaryAntibody->ObjectP[{Model[Sample], Object[Sample]}],
					PrimaryAntibodyDilutionFactor->RangeP[0,1],
					SecondaryAntibody->ObjectP[{Model[Sample], Object[Sample]}],
					SecondaryAntibodyDilutionFactor->RangeP[0,1],
					CoatingVolume->RangeP[0Microliter,300Microliter],
					BlockingVolume->RangeP[0Microliter,300Microliter],
					SampleAntibodyComplexImmunosorbentVolume->RangeP[0Microliter,300Microliter],
					SampleImmunosorbentVolume->RangeP[0Microliter,300Microliter],
					PrimaryAntibodyImmunosorbentVolume->RangeP[0Microliter,300Microliter],
					SecondaryAntibodyImmunosorbentVolume->RangeP[0Microliter,300Microliter],
					SubstrateSolution->ObjectP[{Model[Sample], Object[Sample]}],
					StopSolution->ObjectP[{Model[Sample], Object[Sample]}],
					SubstrateSolutionVolume->RangeP[0Microliter,300Microliter],
					StopSolutionVolume->RangeP[0Microliter,300Microliter],
					Data->_Link

				},
				Units->{
					Type->None,
					Sample ->None,
					Spike->None,
					SpikeDilutionFactor->None,
					SampleDilutionFactors->None,
					CoatingAntibody->None,
					CoatingAntibodyDilutionFactor->None,
					CaptureAntibody->None,
					CaptureAntibodyDilutionFactor->None,
					ReferenceAntigen->None,
					ReferenceAntigenDilutionFactor->None,
					PrimaryAntibody->None,
					PrimaryAntibodyDilutionFactor->None,
					SecondaryAntibody->None,
					SecondaryAntibodyDilutionFactor->None,
					CoatingVolume->Microliter,
					BlockingVolume->Microliter,
					SampleAntibodyComplexImmunosorbentVolume->Microliter,
					SampleImmunosorbentVolume->Microliter,
					PrimaryAntibodyImmunosorbentVolume->Microliter,
					SecondaryAntibodyImmunosorbentVolume->Microliter,
					SubstrateSolution->None,
					StopSolution->None,
					SubstrateSolutionVolume->Microliter,
					StopSolutionVolume->Microliter,
					Data->None
				},
				Relation->{
					Type->Null,
					Sample ->Object[Sample]|Model[Sample],
					Spike->Object[Sample]|Model[Sample],
					SpikeDilutionFactor->Null,
					SampleDilutionFactors->Null,
					CoatingAntibody->Object[Sample]|Model[Sample],
					CoatingAntibodyDilutionFactor->Null,
					CaptureAntibody->Object[Sample]|Model[Sample],
					CaptureAntibodyDilutionFactor->Null,
					ReferenceAntigen->Object[Sample]|Model[Sample],
					ReferenceAntigenDilutionFactor->Null,
					PrimaryAntibody->Object[Sample]|Model[Sample],
					PrimaryAntibodyDilutionFactor->Null,
					SecondaryAntibody->Object[Sample]|Model[Sample],
					SecondaryAntibodyDilutionFactor->Null,
					CoatingVolume->Null,
					BlockingVolume->Null,
					SampleAntibodyComplexImmunosorbentVolume->Null,
					SampleImmunosorbentVolume->Null,
					PrimaryAntibodyImmunosorbentVolume->Null,
					SecondaryAntibodyImmunosorbentVolume->Null,
					SubstrateSolution->Object[Sample]|Model[Sample],
					StopSolution->Object[Sample]|Model[Sample],
					SubstrateSolutionVolume->Null,
					StopSolutionVolume->Null,
					Data->Object[Data]
				}
			},
			SecondaryELISAPlateAssignment->{
				Category->"Assay Plate",
				Description->"The arrangement of samples and their corresponding reagents in the SecondaryELISAPlate.",
				Format->Multiple,
				Class->{
					Type->Expression,
					Sample->Link,
					Spike->Link,
					SpikeDilutionFactor->Real,
					SampleDilutionFactors->Expression,
					CoatingAntibody->Link,
					CoatingAntibodyDilutionFactor->Real,
					CaptureAntibody->Link,
					CaptureAntibodyDilutionFactor->Real,
					ReferenceAntigen->Link,
					ReferenceAntigenDilutionFactor->Real,
					PrimaryAntibody->Link,
					PrimaryAntibodyDilutionFactor->Real,
					SecondaryAntibody->Link,
					SecondaryAntibodyDilutionFactor->Real,
					CoatingVolume->Real,
					BlockingVolume->Real,
					SampleAntibodyComplexImmunosorbentVolume->Real,
					SampleImmunosorbentVolume->Real,
					PrimaryAntibodyImmunosorbentVolume->Real,
					SecondaryAntibodyImmunosorbentVolume->Real,
					SubstrateSolution->Link,
					StopSolution->Link,
					SubstrateSolutionVolume->Real,
					StopSolutionVolume->Real,
					Data->Link
				},

				Pattern :> {
					Type->ELISASampleTypeP,
					Sample->ObjectP[{Model[Sample], Object[Sample]}],
					Spike->ObjectP[{Model[Sample], Object[Sample]}],
					SpikeDilutionFactor->RangeP[0,1],
					SampleDilutionFactors->{RangeP[0,1]..},
					CoatingAntibody->ObjectP[{Model[Sample], Object[Sample]}],
					CoatingAntibodyDilutionFactor->RangeP[0,1],
					CaptureAntibody->ObjectP[{Model[Sample], Object[Sample]}],
					CaptureAntibodyDilutionFactor->RangeP[0,1],
					ReferenceAntigen->ObjectP[{Model[Sample], Object[Sample]}],
					ReferenceAntigenDilutionFactor->RangeP[0,1],
					PrimaryAntibody->ObjectP[{Model[Sample], Object[Sample]}],
					PrimaryAntibodyDilutionFactor->RangeP[0,1],
					SecondaryAntibody->ObjectP[{Model[Sample], Object[Sample]}],
					SecondaryAntibodyDilutionFactor->RangeP[0,1],
					CoatingVolume->RangeP[0Microliter,300Microliter],
					BlockingVolume->RangeP[0Microliter,300Microliter],
					SampleAntibodyComplexImmunosorbentVolume->RangeP[0Microliter,300Microliter],
					SampleImmunosorbentVolume->RangeP[0Microliter,300Microliter],
					PrimaryAntibodyImmunosorbentVolume->RangeP[0Microliter,300Microliter],
					SecondaryAntibodyImmunosorbentVolume->RangeP[0Microliter,300Microliter],
					SubstrateSolution->ObjectP[{Model[Sample], Object[Sample]}],
					StopSolution->ObjectP[{Model[Sample], Object[Sample]}],
					SubstrateSolutionVolume->RangeP[0Microliter,300Microliter],
					StopSolutionVolume->RangeP[0Microliter,300Microliter],
					Data->_Link

				},
				Units->{
					Type->None,
					Sample ->None,
					Spike->None,
					SpikeDilutionFactor->None,
					SampleDilutionFactors->None,
					CoatingAntibody->None,
					CoatingAntibodyDilutionFactor->None,
					CaptureAntibody->None,
					CaptureAntibodyDilutionFactor->None,
					ReferenceAntigen->None,
					ReferenceAntigenDilutionFactor->None,
					PrimaryAntibody->None,
					PrimaryAntibodyDilutionFactor->None,
					SecondaryAntibody->None,
					SecondaryAntibodyDilutionFactor->None,
					CoatingVolume->Microliter,
					BlockingVolume->Microliter,
					SampleAntibodyComplexImmunosorbentVolume->Microliter,
					SampleImmunosorbentVolume->Microliter,
					PrimaryAntibodyImmunosorbentVolume->Microliter,
					SecondaryAntibodyImmunosorbentVolume->Microliter,
					SubstrateSolution->None,
					StopSolution->None,
					SubstrateSolutionVolume->Microliter,
					StopSolutionVolume->Microliter,
					Data->None
				},
				Relation->{
					Type->Null,
					Sample ->Object[Sample]|Model[Sample],
					Spike->Object[Sample]|Model[Sample],
					SpikeDilutionFactor->Null,
					SampleDilutionFactors->Null,
					CoatingAntibody->Object[Sample]|Model[Sample],
					CoatingAntibodyDilutionFactor->Null,
					CaptureAntibody->Object[Sample]|Model[Sample],
					CaptureAntibodyDilutionFactor->Null,
					ReferenceAntigen->Object[Sample]|Model[Sample],
					ReferenceAntigenDilutionFactor->Null,
					PrimaryAntibody->Object[Sample]|Model[Sample],
					PrimaryAntibodyDilutionFactor->Null,
					SecondaryAntibody->Object[Sample]|Model[Sample],
					SecondaryAntibodyDilutionFactor->Null,
					CoatingVolume->Null,
					BlockingVolume->Null,
					SampleAntibodyComplexImmunosorbentVolume->Null,
					SampleImmunosorbentVolume->Null,
					PrimaryAntibodyImmunosorbentVolume->Null,
					SecondaryAntibodyImmunosorbentVolume->Null,
					SubstrateSolution->Object[Sample]|Model[Sample],
					StopSolution->Object[Sample]|Model[Sample],
					SubstrateSolutionVolume->Null,
					StopSolutionVolume->Null,
					Data->Object[Data]
				}
			},
			SampleAssemblyPlate->{
				Format->Single,
				Description->"The deep well plate used to dilute samples, standards, spiking samples, mixing samples and antibodies, and antibody-sample complex incubation before loading them onto ELISAplate.",
				Pattern:>ObjectP[{Model[Container,Plate],Object[Container,Plate]}],
				Class->Link,
				Relation->Model[Container,Plate]|Object[Container,Plate],
				Category->"Sample Preparation"
			},
			SecondarySampleAssemblyPlate->{
				Format->Single,
				Description->"The deep well plated used to dilute samples, standards, spiking samples, mixing samples and antibodies, and antibody-sample complex incubation before loading them onto the SecondaryELISAPlate.",
				Pattern:>ObjectP[{Model[Container,Plate],Object[Container,Plate]}],
				Class->Link,
				Relation->Model[Container,Plate]|Object[Container,Plate],
				Category->"Sample Preparation"
			},
			Tips->{
				Format->Multiple,
				Description->"The tips needed for the liquid transfers in the ELISA instrument.",
				Pattern:>ObjectP[{Model[Item,Tips],Object[Item,Tips]}],
				Relation->Model[Item,Tips]|Object[Item,Tips],
				Class->Link,
				Developer->True,
				Category->"General"
			},
			(*Dilution parameters*)
			PrimaryAntibodyConcentrates->{
				Format->Multiple,
				Description->"All of the primary antibody resources that need to be diluted.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Model[Sample]|Object[Sample],
				Category->"Antibody Antigen Preparation"
			},
			PrimaryAntibodyDilutionVolumes->{
				Format->Multiple,
				Description->"The volumes of each of the primary antibody that need to be diluted.",
				Pattern:>GreaterEqualP[0 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Antibody Antigen Preparation"
			},
			PrimaryAntibodyDiluentDilutionVolumes->{
				Format->Multiple,
				Description->"The total volumes of the primary antibody diluent needed to dilute each primary antibody.",
				Pattern:>GreaterEqualP[0 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Antibody Antigen Preparation"
			},
			PrimaryAntibodyDilutionContainers->{
				Format->Multiple,
				Description->"The containers used to dilute primary antibodies.",
				Pattern:>ObjectP[{Model[Container],Object[Container]}],
				Class->Link,
				Relation->Model[Container]|Object[Container],
				Category->"Antibody Antigen Preparation"
			},
			PrimaryAntibodyConcentrateStorageConditions->{
				Format->Multiple,
				Description->"The condition under which the unused portion of PrimaryAntibodyConcentrate samples should be stored after the protocol is completed.",
				Pattern:>SampleStorageTypeP|Disposal,
				Class->Expression,
				Category->"Antibody Antigen Preparation"
			},
			SecondaryAntibodyConcentrates->{
				Format->Multiple,
				Description->"All of the secondary antibody resources that need to be diluted.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Model[Sample]|Object[Sample],
				Category->"Antibody Antigen Preparation"
			},
			SecondaryAntibodyDilutionVolumes->{
				Format->Multiple,
				Description->"The total volumes of the secondary antibodies that need to be diluted.",
				Pattern:>GreaterEqualP[0 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Antibody Antigen Preparation"
			},
			SecondaryAntibodyDiluentDilutionVolumes->{
				Format->Multiple,
				Description->"The total volumes of the secondary antibody diluents needed to dilute each secondary antibody.",
				Pattern:>GreaterEqualP[0 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Antibody Antigen Preparation"
			},
			SecondaryAntibodyDilutionContainers->{
				Format->Multiple,
				Description->"The containers used to dilute secondary antibodies.",
				Pattern:>ObjectP[{Model[Container],Object[Container]}],
				Class->Link,
				Relation->Model[Container]|Object[Container],
				Category->"Antibody Antigen Preparation"
			},
			SecondaryAntibodyConcentrateStorageConditions->{
				Format->Multiple,
				Description->"The condition under which the unused portion of SecondaryAntibodyConcentrate samples should be stored after the protocol is completed.",
				Pattern:>SampleStorageTypeP|Disposal,
				Class->Expression,
				Category->"Antibody Antigen Preparation"
			},
			CaptureAntibodyConcentrates->{
				Format->Multiple,
				Description->"All of the capture antibody resources that need to be diluted.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Model[Sample]|Object[Sample],
				Category->"Antibody Antigen Preparation"
			},
			CaptureAntibodyDilutionVolumes->{
				Format->Multiple,
				Description->"The volumes of the capture antibodies that need to be diluted.",
				Pattern:>GreaterEqualP[0 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Antibody Antigen Preparation"
			},
			CaptureAntibodyDiluentDilutionVolumes->{
				Format->Multiple,
				Description->"The volume of capture antibody diluent added into the dilution container.",
				Pattern:>GreaterEqualP[0 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Antibody Antigen Preparation"
			},
			CaptureAntibodyDilutionContainers->{
				Format->Multiple,
				Description->"The containers used to dilute capture antibodies.",
				Pattern:>ObjectP[{Model[Container],Object[Container]}],
				Class->Link,
				Relation->Model[Container]|Object[Container],
				Category->"Antibody Antigen Preparation"
			},
			CaptureAntibodyConcentrateStorageConditions->{
				Format->Multiple,
				Description->"The condition under which the unused portion of CaptureAntibodyConcentrate samples should be stored after the protocol is completed.",
				Pattern:>SampleStorageTypeP|Disposal,
				Class->Expression,
				Category->"Antibody Antigen Preparation"
			},
			CoatingAntibodyConcentrates->{
				Format->Multiple,
				Description->"All of the coating antibody resources that need to be diluted.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Model[Sample]|Object[Sample],
				Category->"Antibody Antigen Preparation"
			},
			CoatingAntibodyDilutionVolumes->{
				Format->Multiple,
				Description->"The volumes of the coating antibodies that need to be diluted.",
				Pattern:>GreaterEqualP[0 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Antibody Antigen Preparation"
			},
			CoatingAntibodyDiluentDilutionVolumes->{
				Format->Multiple,
				Description->"The volume of the coating antibody diluent added into the dilution container.",
				Pattern:>GreaterEqualP[0 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Antibody Antigen Preparation"
			},
			CoatingAntibodyDilutionContainers->{
				Format->Multiple,
				Description->"The containers used to dilute coating antibodies.",
				Pattern:>ObjectP[{Model[Container],Object[Container]}],
				Class->Link,
				Relation->Model[Container]|Object[Container],
				Category->"Antibody Antigen Preparation"
			},
			CoatingAntibodyConcentrateStorageConditions->{
				Format->Multiple,
				Description->"The condition under which the unused portion of CoatingAntibodyConcentrate samples should be stored after the protocol is completed.",
				Pattern:>SampleStorageTypeP|Disposal,
				Class->Expression,
				Category->"Antibody Antigen Preparation"
			},
			ReferenceAntigenConcentrates->{
				Format->Multiple,
				Description->"All of the reference antigen resources that need to be diluted.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Model[Sample]|Object[Sample],
				Category->"Antibody Antigen Preparation"
			},
			ReferenceAntigenDilutionVolumes->{
				Format->Multiple,
				Description->"The volumes of the reference antigens that need to be diluted.",
				Pattern:>GreaterEqualP[0 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Antibody Antigen Preparation"
			},
			ReferenceAntigenDiluentDilutionVolumes->{
				Format->Multiple,
				Description->"The volume of reference antigen diluent added into the dilution container.",
				Pattern:>GreaterEqualP[0 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"Antibody Antigen Preparation"
			},
			ReferenceAntigenDilutionContainers->{
				Format->Multiple,
				Description->"The containers used to dilute reference antigens.",
				Pattern:>ObjectP[{Model[Container],Object[Container]}],
				Class->Link,
				Relation->Model[Container]|Object[Container],
				Category->"Antibody Antigen Preparation"
			},
			ReferenceAntigenConcentrateStorageConditions->{
				Format->Multiple,
				Description->"The condition under which the unused portion of ReferenceAntigenConcentrate samples should be stored after the protocol is completed.",
				Pattern:>SampleStorageTypeP|Disposal,
				Class->Expression,
				Category->"Antibody Antigen Preparation"
			},
			StandardData->{
				Format->Multiple,
				Class->Link,
				Pattern:>_Link,
				Relation->Object[Data][Protocol],
				Description->"Data of Standards generated by this protocol.",
				Category->"Experimental Results"
			},
			BlankData->{
				Format->Multiple,
				Class->Link,
				Pattern:>_Link,
				Relation->Object[Data][Protocol],
				Description->"Data of Blanks generated by this protocol.",
				Category->"Experimental Results"
			},
			PrereadData->{
				Format->Multiple,
				Class->Link,
				Pattern:>_Link,
				Relation->Object[Data][Protocol],
				Description->"Preread data generated by this protocol.",
				Category->"Experimental Results"
			},
			(*----Developer Fields----*)
			(*Diluted antibodies*)
			WorkingPrimaryAntibodies->{
				Format->Multiple,
				Description->"The (diluted) primary antibody used directly for ELISA.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample],Model[Container],Object[Container]}],
				Class->Link,
				Relation->Alternatives[Model[Sample],Object[Sample],Model[Container],Object[Container]],
				Category->"Antibody Antigen Preparation",
				Developer->True
			},
			WorkingSecondaryAntibodies->{
				Format->Multiple,
				Description->"The (diluted) secondary antibody used directly for ELISA.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample],Model[Container],Object[Container]}],
				Class->Link,
				Relation->Alternatives[Model[Sample],Object[Sample],Model[Container],Object[Container]],
				Category->"Antibody Antigen Preparation",
				Developer->True
			},
			WorkingCaptureAntibodies->{
				Format->Multiple,
				Description->"The (diluted) capture antibody used directly for ELISA.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample],Model[Container],Object[Container]}],
				Class->Link,
				Relation->Alternatives[Model[Sample],Object[Sample],Model[Container],Object[Container]],
				Category->"Antibody Antigen Preparation",
				Developer->True
			},
			WorkingCoatingAntibodies->{
				Format->Multiple,
				Description->"The (diluted) coating antibody used directly for ELISA.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample],Model[Container],Object[Container]}],
				Class->Link,
				Relation->Alternatives[Model[Sample],Object[Sample],Model[Container],Object[Container]],
				Category->"Antibody Antigen Preparation",
				Developer->True
			},
			WorkingReferenceAntigens->{
				Format->Multiple,
				Description->"The (diluted) reference antigen used directly for ELISA.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample],Model[Container],Object[Container]}],
				Class->Link,
				Relation->Alternatives[Model[Sample],Object[Sample],Model[Container],Object[Container]],
				Category->"Antibody Antigen Preparation",
				Developer->True
			},
			SampleAssemblyWellIDs->{
				Format->Multiple,
				Description->"The sample assembly plate and well number each sample/standars/blank and their dilutions correspond to.",
				Pattern:>{ObjectP[{Model[Container],Object[Container]}],WellP},
				Relation->{(Model[Container]|Object[Container]),Null},
				Class->{Link,Expression},
				Category->"General",
				Headers->{"Sample Assembly Container","Well"},
				Developer->True
			},

			AssayPlateAssemblyWellIDs->{
				Format->Multiple,
				Description->"The ELISA plate and well number each sample/standars/blank and their dilutions correspond to.",
				Pattern:>{ObjectP[{Model[Container],Object[Container]}],WellP},
				Class->{Link,Expression},
				Relation->{(Model[Container]|Object[Container]),Null},
				Category->"General",
				Headers->{"Assay Plate","Well"},
				Developer->True
			},
			AntibodyAntigenDilutionQ->{
				Format->Single,
				Description->"Indicating if any antibodies need to be diluted with its diluent.",
				Pattern:>BooleanP,
				Class->Boolean,
				Category->"General",
				Developer->True
			},

			ExpandedWorkingSamples->{
				Format->Multiple,
				Description->"Working samples joined with Standards and Blanks and expanded to match its corresponding well used for making SM primitives.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample],Model[Container],Object[Container]}],
				Relation->Alternatives[Model[Sample],Object[Sample],Model[Container],Object[Container]],
				Class->Link,
				Category->"General",
				Developer->True
			},
			ExpandedDiluents->{
				Format->Multiple,
				Description->"The Sample and Standard diluents expanded to match its corresponding well.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Relation->Alternatives[Model[Sample],Object[Sample]],
				Class->Link,
				Category->"General",
				Developer->True
			},
			ExpandedSpikes->{
				Format->Multiple,
				Description->"The Spikes expanded to match its corresponding well.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Relation->Alternatives[Model[Sample],Object[Sample]],
				Class->Link,
				Category->"General",
				Developer->True
			},
			ExpandedConcentrateVolumes->{
				Format->Multiple,
				Description->"The concentrate volumes (Sample or previous dilution) expanded to match its corresponding well.",
				Pattern:>GreaterEqualP[0 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"General",
				Developer->True
			},
			ExpandedDiluentVolumes->{
				Format->Multiple,
				Description->"The Sample and Antibody volumes expanded to match its corresponding well.",
				Pattern:>GreaterEqualP[0 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"General",
				Developer->True
			},
			ExpandedSpikeVolumes->{
				Format->Multiple,
				Description->"The Spike volumes expanded to match its corresponding well.",
				Pattern:>GreaterEqualP[0 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"General",
				Developer->True
			},
			ExpandedPrimaryAntibodySampleMixingVolumes->{
				Format->Multiple,
				Description->"The PrimaryAntibody volumes used to mix with samples, expanded to match its corresponding well.",
				Pattern:>GreaterEqualP[0 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"General",
				Developer->True
			},
			ExpandedCaptureAntibodySampleMixingVolumes->{
				Format->Multiple,
				Description->"The PrimaryAntibody volumes used to mix with samples, expanded to match its corresponding well.",
				Pattern:>GreaterEqualP[0 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"General",
				Developer->True
			},
			ExpandedSampleAssemblyTotalVolumes->{
				Format->Multiple,
				Description->"The Total volumes in each SampleAssembly well, used for pipetting mixing after sample assembly.",
				Pattern:>GreaterEqualP[0 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"General",
				Developer->True
			},
			ExpandedSerialDilutionQ->{
				Format->Multiple,
				Description->"Indicating if the Concentrate of this dilution is drawn from the original sample or the previous dilution.",
				Pattern:>BooleanP,
				Class->Boolean,
				Category->"General",
				Developer->True
			},
			ExpandedWorkingPrimaryAntibodies->{
				Format->Multiple,
				Description->"The PrimaryAntibodies directly used for sample mixing or immunosorbent step, expanded to match its corresponding well.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample],Model[Container],Object[Container]}],
				Relation->Alternatives[Model[Sample],Object[Sample],Model[Container],Object[Container]],
				Class->Link,
				Category->"General",
				Developer->True
			},
			ExpandedWorkingSecondaryAntibodies->{
				Format->Multiple,
				Description->"The SecondaryAntibodies directly used for immunosorbent step,expanded to match its corresponding well.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample],Model[Container],Object[Container]}],
				Relation->Alternatives[Model[Sample],Object[Sample],Model[Container],Object[Container]],
				Class->Link,
				Category->"General",
				Developer->True
			},
			ExpandedWorkingCaptureAntibodies->{
				Format->Multiple,
				Description->"The CaptureAntibodies directly used for sample mixing or coating, expanded to match its corresponding well.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample],Model[Container],Object[Container]}],
				Relation->Alternatives[Model[Sample],Object[Sample],Model[Container],Object[Container]],
				Class->Link,
				Category->"General",
				Developer->True
			},
			ExpandedWorkingCoatingAntibodies->{
				Format->Multiple,
				Description->"The CoatingAntibodies directly used for coating, expanded to match its corresponding well.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample],Model[Container],Object[Container]}],
				Relation->Alternatives[Model[Sample],Object[Sample],Model[Container],Object[Container]],
				Class->Link,
				Category->"General",
				Developer->True
			},
			ExpandedWorkingReferenceAntigens->{
				Format->Multiple,
				Description->"The ReferenceAntigens directly used for coating, expanded to match its corresponding well.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample],Model[Container],Object[Container]}],
				Relation->Alternatives[Model[Sample],Object[Sample],Model[Container],Object[Container]],
				Class->Link,
				Category->"General",
				Developer->True
			},
			ExpandedSampleCoatingVolumes->{
				Format->Multiple,
				Description->"The SampleCoatingVolumes expanded to match its corresponding well.",
				Pattern:>GreaterEqualP[0 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"General",
				Developer->True
			},
			ExpandedCaptureAntibodyCoatingVolumes->{
				Format->Multiple,
				Description->"The CaptureAntibodyCoatingVolumes expanded to match its corresponding well.",
				Pattern:>GreaterEqualP[0 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"General",
				Developer->True
			},
			ExpandedCoatingAntibodyCoatingVolumes->{
				Format->Multiple,
				Description->"The CoatingAntibodyCoatingVolumes expanded to match its corresponding well.",
				Pattern:>GreaterEqualP[0 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"General",
				Developer->True
			},
			ExpandedReferenceAntigenCoatingVolumes->{
				Format->Multiple,
				Description->"The ReferenceAntigenCoatingVolumes expanded to match its corresponding well.",
				Pattern:>GreaterEqualP[0 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"General",
				Developer->True
			},
			ExpandedSampleImmunosorbentVolumes->{
				Format->Multiple,
				Description->"The SampleImmunosorbentVolumes expanded to match its corresponding well.",
				Pattern:>GreaterEqualP[0 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"General",
				Developer->True
			},
			ExpandedSampleAntibodyComplexImmunosorbentVolumes->{
				Format->Multiple,
				Description->"The SampleAntibodyComplexImmunosorbentVolumes expanded to match its corresponding well.",
				Pattern:>GreaterEqualP[0 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"General",
				Developer->True
			},
			ExpandedPrimaryAntibodyImmunosorbentVolumes->{
				Format->Multiple,
				Description->"The PrimaryAntibodyImmunosorbentVolumes expanded to match its corresponding well.",
				Pattern:>GreaterEqualP[0 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"General",
				Developer->True
			},
			ExpandedSecondaryAntibodyImmunosorbentVolumes->{
				Format->Multiple,
				Description->"The SecondaryAntibodyImmunosorbentVolumes expanded to match its corresponding well.",
				Pattern:>GreaterEqualP[0 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"General",
				Developer->True
			},
			ExpandedSubstrateSolutions->{
				Format->Multiple,
				Description->"The SubstrateSolutions, expanded to match its corresponding well.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Alternatives[Model[Sample],Object[Sample]],
				Category->"General",
				Developer->True
			},
			ExpandedStopSolutions->{
				Format->Multiple,
				Description->"The StopSolutions, expanded to match its corresponding well.",
				Pattern:>ObjectP[{Model[Sample],Object[Sample]}],
				Class->Link,
				Relation->Alternatives[Model[Sample],Object[Sample]],
				Category->"General",
				Developer->True
			},
			ExpandedSubstrateSolutionVolumes->{
				Format->Multiple,
				Description->"The SubstrateSolutionVolumes expanded to match its corresponding well.",
				Pattern:>GreaterEqualP[0 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"General",
				Developer->True
			},
			ExpandedStopSolutionVolumes->{
				Format->Multiple,
				Description->"The StopSolutionVolumes expanded to match its corresponding well.",
				Pattern:>GreaterEqualP[0 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"General",
				Developer->True
			},
			ExpandedBlockingVolumes->{
				Format->Multiple,
				Description->"The BlockingVolumes expanded to match its corresponding well.",
				Pattern:>GreaterEqualP[0 Microliter],
				Class->Real,
				Units->Microliter,
				Category->"General",
				Developer->True
			},
			WellExpandingParameters->{
				Format->Multiple,
				Description->"A list of integers indicating how many wells a sample, standardard, or blank will take up, based on NumberOfReplciates and DilutionCurves.",
				Pattern:>GreaterP[0],
				Class->Real,
				Category->"General",
				Developer->True
			},
			DeckPlacements->{
				Format->Multiple,
				Class->{Link, Expression},
				Pattern :> {_Link, {LocationPositionP..}},
				Relation->{Object[Container] | Object[Sample] | Object[Item], Null},
				Description->"A list of container placements to set up the ELISA instrument deck.",
				Category->"Placements",
				Headers->{"Container", "Placement Tree"},
				Developer->True
			},
			VesselRackPlacements -> {
				Format -> Multiple,
				Class -> {Link,Link,Expression},
				Pattern :> {_Link,_Link,LocationPositionP},
				Relation -> {(Object[Container]|Model[Container]|Object[Sample]|Model[Sample]|Model[Item]|Object[Item]),(Object[Container]|Model[Container]),Null},
				Description -> "List of placements of vials into automation-friendly vial racks.",
				Category -> "Placements",
				Developer -> True,
				Headers -> {"Object to Place","Destination Object","Destination Position"}
			},
			ActiveTubeCarriers -> {
				Format -> Multiple,
				Class -> Link,
				Pattern :> _Link,
				Relation -> Object[Container,Rack],
				Description -> "A list of tube racks on the liquid handler deck that are loaded with tubes and used in this protocol.",
				Category -> "Placements",
				Developer -> True
			},
			BufferContainerPlacements -> {
				Format -> Multiple,
				Class -> {Link, Expression},
				Pattern :> {_Link, {LocationPositionP..}},
				Relation -> {Object[Container] | Object[Sample] | Model[Sample], Null},
				Description -> "A list of deck placements used for placing buffers needed to run the protocol onto the instrument buffer deck.",
				Category -> "General",
				Developer -> True,
				Headers -> {"Object to Place", "Placement Tree"}
			},
			LiquidHandlingPressureLog -> {
				Format -> Single,
				Class -> Link,
				Pattern :> _Link,
				Relation -> Object[EmeraldCloudFile],
				Description -> "The instrumentation trace file that monitored and recorded the pressure curves during aspiration and dispense of this ELISA liquid handling.",
				Category -> "General"
			},
			LiquidHandlingPressureLogPath -> {
				Format -> Single,
				Class -> String,
				Pattern :> FilePathP,
				Description -> "The file path of the instrumentation trace file that monitored and recorded the pressure curves during aspiration and dispense of this ELISA liquid handling.",
				Category -> "General",
				Developer -> True
			},
			ELISARunTime->{
				Format->Single,
				Description->"The duration of the last continuous run in the NIMBUS machine.",
				Pattern:>RangeP[0 Hour,24 Hour],
				Class->Real,
				Units->Hour,
				Category->"General",
				Developer->True
			}

		}
	}
];

